"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7293],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),u=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=u(r),f=a,g=m["".concat(i,".").concat(f)]||m[f]||p[f]||l;return r?n.createElement(g,o(o({ref:t},c),{},{components:r})):n.createElement(g,o({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var u=2;u<l;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7642:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const l={slug:"/rust-generics",sidebar_label:"\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"},o="\u3010Rust\u3011\u30b8\u30a7\u30cd\u30ea\u30af\u30b9",s={unversionedId:"technology/rust/spec/rust-generics",id:"technology/rust/spec/rust-generics",title:"\u3010Rust\u3011\u30b8\u30a7\u30cd\u30ea\u30af\u30b9",description:"\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306f\u3001\u5177\u4f53\u578b\u3084\u4ed6\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u62bd\u8c61\u7684\u306a\u4ee3\u5f79\u3067\u3059\u3002",source:"@site/notes/technology/rust/spec/rust-generics.md",sourceDirName:"technology/rust/spec",slug:"/rust-generics",permalink:"/notes/rust-generics",draft:!1,editUrl:"https://github.com/NaokiKosuge/NaokiKosuge.github.io/edit/main/notes/technology/rust/spec/rust-generics.md",tags:[],version:"current",frontMatter:{slug:"/rust-generics",sidebar_label:"\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"},sidebar:"tutorialSidebar",previous:{title:"\u5f0f",permalink:"/notes/rust-expressions"},next:{title:"\u30de\u30af\u30ed",permalink:"/notes/rust-macros"}},i={},u=[{value:"\u3044\u308d\u3044\u308d\u306a\u5834\u9762\u3067\u306e\u30b8\u30a7\u30cd\u30ea\u30af\u30b9",id:"\u3044\u308d\u3044\u308d\u306a\u5834\u9762\u3067\u306e\u30b8\u30a7\u30cd\u30ea\u30af\u30b9",level:2},{value:"\u95a2\u6570\u5b9a\u7fa9",id:"\u95a2\u6570\u5b9a\u7fa9",level:3},{value:"\u69cb\u9020\u4f53\u5b9a\u7fa9",id:"\u69cb\u9020\u4f53\u5b9a\u7fa9",level:3},{value:"\u5217\u6319\u578b\u5b9a\u7fa9",id:"\u5217\u6319\u578b\u5b9a\u7fa9",level:3},{value:"\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9",id:"\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9",level:3},{value:"\u30c8\u30ec\u30a4\u30c8\u5b9a\u7fa9",id:"\u30c8\u30ec\u30a4\u30c8\u5b9a\u7fa9",level:3}],c={toc:u};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rust\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"},"\u3010Rust\u3011\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"),"\u306f\u3001\u5177\u4f53\u578b\u3084\u4ed6\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u62bd\u8c61\u7684\u306a\u4ee3\u5f79\u3067\u3059\u3002")),(0,a.kt)("h2",{id:"\u3044\u308d\u3044\u308d\u306a\u5834\u9762\u3067\u306e\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"},"\u3044\u308d\u3044\u308d\u306a\u5834\u9762\u3067\u306e\u30b8\u30a7\u30cd\u30ea\u30af\u30b9"),(0,a.kt)("h3",{id:"\u95a2\u6570\u5b9a\u7fa9"},"\u95a2\u6570\u5b9a\u7fa9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"fn largest<T: PartialOrd + Copy>(list: &[T]) -> T {\n    let mut largest = list[0];\n\n    for &item in list {\n        if item > largest {\n            largest = item;\n        }\n    }\n\n    largest\n}\n")),(0,a.kt)("h3",{id:"\u69cb\u9020\u4f53\u5b9a\u7fa9"},"\u69cb\u9020\u4f53\u5b9a\u7fa9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"struct Point<T> {\n    x: T,\n    y: T,\n}\n")),(0,a.kt)("h3",{id:"\u5217\u6319\u578b\u5b9a\u7fa9"},"\u5217\u6319\u578b\u5b9a\u7fa9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"enum Option<T> {\n    Some(T),\n    None,\n}\n")),(0,a.kt)("h3",{id:"\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9"},"\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"impl<T> Point<T> {\n    fn x(&self) -> &T {\n        &self.x\n    }\n}\n")),(0,a.kt)("h3",{id:"\u30c8\u30ec\u30a4\u30c8\u5b9a\u7fa9"},"\u30c8\u30ec\u30a4\u30c8\u5b9a\u7fa9"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"pub trait Mul<RHS> {\n    type Output;\n\n    fn mul(self, rhs: RHS) -> Self::Output;\n}\n")))}p.isMDXComponent=!0}}]);