"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2634],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=s(r),k=a,N=d["".concat(p,".").concat(k)]||d[k]||u[k]||l;return r?n.createElement(N,o(o({ref:t},m),{},{components:r})):n.createElement(N,o({ref:t},m))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8500:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const l={slug:"/rust-error-handling",sidebar_label:"\u30a8\u30e9\u30fc\u51e6\u7406"},o="\u3010Rust\u3011\u30a8\u30e9\u30fc\u51e6\u7406",i={unversionedId:"technology/rust/spec/rust-error-handling",id:"technology/rust/spec/rust-error-handling",title:"\u3010Rust\u3011\u30a8\u30e9\u30fc\u51e6\u7406",description:"\u30a8\u30e9\u30fc\u306e\u5206\u985e:",source:"@site/notes/technology/rust/spec/rust-error-handling.md",sourceDirName:"technology/rust/spec",slug:"/rust-error-handling",permalink:"/notes/rust-error-handling",draft:!1,editUrl:"https://github.com/NaokiKosuge/NaokiKosuge.github.io/edit/main/notes/technology/rust/spec/rust-error-handling.md",tags:[],version:"current",frontMatter:{slug:"/rust-error-handling",sidebar_label:"\u30a8\u30e9\u30fc\u51e6\u7406"},sidebar:"tutorialSidebar",previous:{title:"\u30ab\u30b9\u30bf\u30e0\u578b",permalink:"/notes/rust-custom-types"},next:{title:"\u5f0f",permalink:"/notes/rust-expressions"}},p={},s=[{value:"<code>Result</code> \u3067\u56de\u5fa9\u53ef\u80fd\u306a\u30a8\u30e9\u30fc",id:"result-\u3067\u56de\u5fa9\u53ef\u80fd\u306a\u30a8\u30e9\u30fc",level:2},{value:"\u4e3b\u8981\u306a <code>Result</code> \u30e1\u30bd\u30c3\u30c9",id:"\u4e3b\u8981\u306a-result-\u30e1\u30bd\u30c3\u30c9",level:3},{value:"\u30a8\u30e9\u30fc\u6355\u6349",id:"\u30a8\u30e9\u30fc\u6355\u6349",level:3},{value:"\u30a8\u30e9\u30fc\u306e\u4f1d\u642c\uff08<code>?</code> \u6f14\u7b97\u5b50\uff09",id:"\u30a8\u30e9\u30fc\u306e\u4f1d\u642c-\u6f14\u7b97\u5b50",level:3},{value:"\u30d1\u30cb\u30c3\u30af\u6642\u306e\u52d5\u4f5c",id:"\u30d1\u30cb\u30c3\u30af\u6642\u306e\u52d5\u4f5c",level:2},{value:"Tips",id:"tips",level:2},{value:"\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u3092\u8fd4\u3059\uff1b\u30c8\u30ec\u30a4\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u307e\u3068\u3081\u308b",id:"\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u3092\u8fd4\u3059\u30c8\u30ec\u30a4\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u307e\u3068\u3081\u308b",level:3},{value:"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac",id:"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac",level:4},{value:"\u554f\u984c\u70b9",id:"\u554f\u984c\u70b9",level:4},{value:"\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u3092\u8fd4\u3059\uff1b\u5217\u6319\u578b\u3067\u306e\u30e9\u30c3\u30d7",id:"\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u3092\u8fd4\u3059\u5217\u6319\u578b\u3067\u306e\u30e9\u30c3\u30d7",level:3},{value:"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac",id:"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac-1",level:4},{value:"\u30a8\u30e9\u30fc\u51e6\u7406\u306b\u7279\u5316\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea",id:"\u30a8\u30e9\u30fc\u51e6\u7406\u306b\u7279\u5316\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea",level:2}],m={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rust\u30a8\u30e9\u30fc\u51e6\u7406"},"\u3010Rust\u3011\u30a8\u30e9\u30fc\u51e6\u7406"),(0,a.kt)("p",null,"\u30a8\u30e9\u30fc\u306e\u5206\u985e:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u56de\u5fa9\u53ef\u80fd\u306a\u30a8\u30e9\u30fc")),(0,a.kt)("p",{parentName:"li"},"\u2192 ",(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html"},(0,a.kt)("inlineCode",{parentName:"a"},"Result<T, E>"))," \u5024\u3092\u8fd4\u3059")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"\u56de\u5fa9\u4e0d\u53ef\u80fd\u306a\u30a8\u30e9\u30fc")),(0,a.kt)("p",{parentName:"li"},"\u2192 \u5b9f\u884c\u3092\u4e2d\u6b62\u3059\u308b ",(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/macro.panic.html"},(0,a.kt)("inlineCode",{parentName:"a"},"panic!"))," \u30de\u30af\u30ed"))),(0,a.kt)("h2",{id:"result-\u3067\u56de\u5fa9\u53ef\u80fd\u306a\u30a8\u30e9\u30fc"},(0,a.kt)("inlineCode",{parentName:"h2"},"Result")," \u3067\u56de\u5fa9\u53ef\u80fd\u306a\u30a8\u30e9\u30fc"),(0,a.kt)("p",null,"Rust \u306b\u306f\u4f8b\u5916\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u5931\u6557\u3059\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u95a2\u6570\u306f\u3001",(0,a.kt)("inlineCode",{parentName:"p"},"Result")," \u3092\u8fd4\u3059\u3053\u3068\u3067\u3001\u305d\u306e\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="Result \u578b"',title:'"Result','\u578b"':!0},"pub enum Result<T, E> {\n    Ok(T),\n    Err(E),\n}\n")),(0,a.kt)("h3",{id:"\u4e3b\u8981\u306a-result-\u30e1\u30bd\u30c3\u30c9"},"\u4e3b\u8981\u306a ",(0,a.kt)("inlineCode",{parentName:"h3"},"Result")," \u30e1\u30bd\u30c3\u30c9"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.is_ok"},(0,a.kt)("inlineCode",{parentName:"a"},"is_ok()")),", ",(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.is_err"},(0,a.kt)("inlineCode",{parentName:"a"},"is_err()"))),(0,a.kt)("p",{parentName:"li"},"\u6210\u529f\u3057\u305f\u304b\u30a8\u30e9\u30fc\u3060\u3063\u305f\u304b\u3092\u793a\u3059 ",(0,a.kt)("inlineCode",{parentName:"p"},"bool")," \u5024")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.ok"},(0,a.kt)("inlineCode",{parentName:"a"},"ok()"))),(0,a.kt)("p",{parentName:"li"},"\u6210\u529f\u3057\u305f\u5834\u5408\u306e\u5024\u3092 ",(0,a.kt)("inlineCode",{parentName:"p"},"Option<T>")," \u3068\u3057\u3066\u8fd4\u3059\u3002\u6210\u529f\u3057\u3066\u3044\u308c\u3070 ",(0,a.kt)("inlineCode",{parentName:"p"},"Some(success_value"),") \u304c\u3001\u5931\u6557\u3057\u3066\u3044\u308c\u3070 ",(0,a.kt)("inlineCode",{parentName:"p"},"None")," \u3068\u306a\u308b\u3002\u30a8\u30e9\u30fc\u5024\u306f\u6368\u3066\u3089\u308c\u308b\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.err"},(0,a.kt)("inlineCode",{parentName:"a"},"err()"))),(0,a.kt)("p",{parentName:"li"},"\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u5024\u3092 ",(0,a.kt)("inlineCode",{parentName:"p"},"Option<E>")," \u3068\u3057\u3066\u8fd4\u3059\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or"},(0,a.kt)("inlineCode",{parentName:"a"},"unwrap_or(default)"))),(0,a.kt)("p",{parentName:"li"},"\u6210\u529f\u3057\u305f\u5834\u5408\u306b\u306f\u6210\u529f\u5024\u3092\u8fd4\u3059\u3002\u5931\u6557\u3057\u305f\u5834\u5408\u306b\u306f ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," \u3092\u8fd4\u3057\u3001\u30a8\u30e9\u30fc\u5024\u3092\u6368\u3066\u308b\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap_or_else"},(0,a.kt)("inlineCode",{parentName:"a"},"unwrap_or_else(op)"))),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"unwrap_or(default)")," \u306e ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," \u5024\u3092\u95a2\u6570\u307e\u305f\u306f\u30af\u30ed\u30fc\u30b8\u30e3\u3067\u6c42\u3081\u308b\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.unwrap"},(0,a.kt)("inlineCode",{parentName:"a"},"unwrap()"))),(0,a.kt)("p",{parentName:"li"},"\u6210\u529f\u3057\u305f\u5834\u5408\u306f\u6210\u529f\u5024\u3092\u8fd4\u3057\u3001\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u30d1\u30cb\u30c3\u30af\u3092\u8d77\u3053\u3059\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.expect"},(0,a.kt)("inlineCode",{parentName:"a"},"expect(msg)"))),(0,a.kt)("p",{parentName:"li"},"\u6210\u529f\u3057\u305f\u5834\u5408\u306f\u6210\u529f\u5024\u3092\u8fd4\u3057\u3001\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u6307\u5b9a\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u5171\u306b\u30d1\u30cb\u30c3\u30af\u3092\u8d77\u3053\u3059\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.as_ref"},(0,a.kt)("inlineCode",{parentName:"a"},"as_ref()"))),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Result<T, E>")," \u3092 ",(0,a.kt)("inlineCode",{parentName:"p"},"Result<&T, &E>")," \u306b\u5909\u63db\u3059\u308b\u3002")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.as_mut"},(0,a.kt)("inlineCode",{parentName:"a"},"as_mut()"))),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"Result<T, E>")," \u3092 ",(0,a.kt)("inlineCode",{parentName:"p"},"Result<&mut T, &mut E>")," \u306b\u5909\u63db\u3059\u308b\u3002"))),(0,a.kt)("h3",{id:"\u30a8\u30e9\u30fc\u6355\u6349"},"\u30a8\u30e9\u30fc\u6355\u6349"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="match \u5f0f\u306b\u3088\u308b\u30a8\u30e9\u30fc\u6355\u6349"',title:'"match','\u5f0f\u306b\u3088\u308b\u30a8\u30e9\u30fc\u6355\u6349"':!0},'match get_weather(hometown) {\n    Ok(report) => {\n        display_weather(hometown, &report);\n    }\n    Err(err) => {\n        println!("error querying the weather: {}", err);\n        schedule_weather_retry();\n    }\n}\n')),(0,a.kt)("h3",{id:"\u30a8\u30e9\u30fc\u306e\u4f1d\u642c-\u6f14\u7b97\u5b50"},"\u30a8\u30e9\u30fc\u306e\u4f1d\u642c\uff08",(0,a.kt)("inlineCode",{parentName:"h3"},"?")," \u6f14\u7b97\u5b50\uff09"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"?")," \u6f14\u7b97\u5b50\u306f\u3001",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Result")," \u3092\u751f\u6210\u3059\u308b\u4efb\u610f\u306e\u5f0f")," \u306b\u8ffd\u52a0\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002",(0,a.kt)("inlineCode",{parentName:"p"},"?")," \u306e\u6319\u52d5\u306f\u6210\u529f\u3068\u5931\u6557\u306e\u5834\u5408\u5206\u3051\u3068\u306a\u308a\u307e\u3059:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u6210\u529f\u3057\u305f\u5834\u5408"),": ",(0,a.kt)("inlineCode",{parentName:"li"},"Result")," \u3092\u89e3\u3044\u3066\u6210\u529f\u5024\u3092\u53d6\u308a\u51fa\u3059\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"\u5931\u6557\u3057\u305f\u5834\u5408"),": \u547c\u3073\u51fa\u3057\u5143\u306e\u95a2\u6570\u304b\u3089\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u3002\u3064\u307e\u308a\u306f\u8cac\u4efb\u3092\u4e0a\u4f4d\u3078\u3068\u5148\u9001\u308a\u306b\u3059\u308b\u3002")),(0,a.kt)("p",null,"\u4f7f\u7528\u4f8b:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let weather = get_weather(hometown)?;\n")),(0,a.kt)("p",null,"\u3053\u308c\u306f\u3001\u6b21\u306e ",(0,a.kt)("inlineCode",{parentName:"p"},"match")," \u5f0f\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"let weather = match get_weather(hometown) {\n    Ok(success_value) => success_value,\n    Err(err) => return Err(err),\n};\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"?")," \u6f14\u7b97\u5b50\u306f ",(0,a.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"try!")," \u30de\u30af\u30ed\u306e\u7cd6\u8863\u69cb\u6587"),(0,a.kt)("p",{parentName:"admonition"},"\u7591\u554f\u7b26\u6f14\u7b97\u5b50 ",(0,a.kt)("inlineCode",{parentName:"p"},"?")," \u306f\u3001",(0,a.kt)("inlineCode",{parentName:"p"},"try!")," \u30de\u30af\u30ed\uff08",(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/macro.try.html"},(0,a.kt)("inlineCode",{parentName:"a"},"std::try")),"\uff09\u306e\u4ee3\u308f\u308a\u306b\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u73fe\u5728\u3067\u306f\u3001\u3053\u306e\u30de\u30af\u30ed\u306f",(0,a.kt)("strong",{parentName:"p"},"\u975e\u63a8\u5968"),"\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002")),(0,a.kt)("h2",{id:"\u30d1\u30cb\u30c3\u30af\u6642\u306e\u52d5\u4f5c"},"\u30d1\u30cb\u30c3\u30af\u6642\u306e\u52d5\u4f5c"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30d1\u30cb\u30c3\u30af\u6642\u306b\u306f\u30b9\u30bf\u30c3\u30af\u304c\u5dfb\u304d\u623b\u3055\u308c\u308b\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b ",(0,a.kt)("inlineCode",{parentName:"li"},"-C panic=abort")," \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30d1\u30cb\u30c3\u30af\u304c\u6012\u3063\u305f\u969b\u306b\u30b9\u30bf\u30c3\u30af\u304c\u5dfb\u304d\u623b\u3055\u308c\u306a\u304f\u306a\u308b\u3002"),(0,a.kt)("li",{parentName:"ul"},"1\u3064\u76ee\u306e\u30d1\u30cb\u30c3\u30af\u3092\u5dfb\u304d\u623b\u3057\u3066\u3044\u308b\u6700\u4e2d\u306b\u3001",(0,a.kt)("inlineCode",{parentName:"li"},".drop()")," \u30e1\u30bd\u30c3\u30c9\u30672\u3064\u76ee\u306e\u30d1\u30cb\u30c3\u30af\u304c\u8d77\u304d\u305f\u5834\u5408\u306b\u306f\u3001\u81f4\u547d\u7684\u306a\u72b6\u614b\u3068\u307f\u306a\u3055\u308c\u3001Rust \u306f\u5dfb\u304d\u623b\u3057\u3092\u4e2d\u6b62\u3057\u3066\u3001\u30d7\u30ed\u30bb\u30b9\u5168\u4f53\u3092\u5f37\u5236\u7d42\u4e86\u3059\u308b\u3002")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"tips"},"Tips"),(0,a.kt)("h3",{id:"\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u3092\u8fd4\u3059\u30c8\u30ec\u30a4\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u307e\u3068\u3081\u308b"},"\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u3092\u8fd4\u3059\uff1b\u30c8\u30ec\u30a4\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u307e\u3068\u3081\u308b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="\u4f8b\uff1a\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3001\u623b\u308a\u5024\u3067\u30c8\u30ec\u30a4\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046"',title:'"\u4f8b\uff1a\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3001\u623b\u308a\u5024\u3067\u30c8\u30ec\u30a4\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046"'},'use std::fs::File;\nuse std::error::Error;\nuse std::net::Ipv6Addr;\n\nfn main() -> Result<(), Box<dyn Error>> {\n    let _f = File::open("invisible.txt")?;  // \u30a8\u30e9\u30fc\u578b\u306f std::io::Error\n    let _localhost = "::1"\n        .parse::<Ipv6Addr>()?;  // \u30a8\u30e9\u30fc\u578b\u306f std::net::AddrParseError\n    Ok(())\n}\n')),(0,a.kt)("h4",{id:"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac"},"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"?")," \u6f14\u7b97\u5b50\u306f\u3001",(0,a.kt)("inlineCode",{parentName:"li"},"Result<T, E>")," \u3092\u8fd4\u3059\u95a2\u6570\u306e\u4e2d\u3067\u3057\u304b\u4f7f\u7528\u3067\u304d\u306a\u3044\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u95a2\u6570\u306e\u4e2d\u3067\u8907\u6570\u7a2e\u985e\u306e\u30a8\u30e9\u30fc\u578b\u304c\u8fd4\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u5834\u5408\u306f\u30011\u306e\u5834\u5408\u3067\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u3089\u306a\u3044\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u305d\u306e\u305f\u3081\u3001\u95a2\u6570\u306e\u623b\u308a\u5024\u306e\u578b\u3092 ",(0,a.kt)("inlineCode",{parentName:"li"},"Result<T, Box<dyn E>>")," \u306b\u5909\u66f4\u3059\u308b\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u3053\u3053\u3067\u3001\u30c8\u30ec\u30a4\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08",(0,a.kt)("inlineCode",{parentName:"li"},"dyn E"),"\uff09\u3092 ",(0,a.kt)("inlineCode",{parentName:"li"},"Box")," \u3067\u30e9\u30c3\u30d7\u3059\u308b\u7406\u7531\u306f\u3001\u305d\u306e\u30b5\u30a4\u30ba\u304c\u3001\u5b9f\u884c\u6642\u306b\u906d\u9047\u3057\u305f\u72b6\u6cc1\u306b\u4f9d\u5b58\u3057\u3066\u304a\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u306f\u4e0d\u660e\u3067\u3042\u308b\u304b\u3089\u3067\u3042\u308b\u3002")),(0,a.kt)("h4",{id:"\u554f\u984c\u70b9"},"\u554f\u984c\u70b9"),(0,a.kt)("p",null,"\u30c8\u30ec\u30a4\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\u3053\u3068\u306f\u3001",(0,a.kt)("strong",{parentName:"p"},"\u578b\u6d88\u53bb"),"\u3068\u3082\u547c\u3070\u308c\u3066\u304a\u308a\u3001Rust \u306f\u3001\u4e0a\u6d41\u3067\u767a\u751f\u3057\u305f\u30a8\u30e9\u30fc\uff08\u4e0a\u4f8b\u306e\u5834\u5408\u3060\u3068 ",(0,a.kt)("inlineCode",{parentName:"p"},"Error")," \u3068 ",(0,a.kt)("inlineCode",{parentName:"p"},"AddrParseError"),"\uff09\u306e\u9055\u3044\u3092\u610f\u8b58\u3057\u306a\u304f\u306a\u308a\u307e\u3059\u3002"),(0,a.kt)("h3",{id:"\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u3092\u8fd4\u3059\u5217\u6319\u578b\u3067\u306e\u30e9\u30c3\u30d7"},"\u8907\u6570\u306e\u30a8\u30e9\u30fc\u578b\u3092\u8fd4\u3059\uff1b\u5217\u6319\u578b\u3067\u306e\u30e9\u30c3\u30d7"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},'use std::error;\nuse std::fmt;\nuse std::fs::File;\nuse std::io;\nuse std::net::{AddrParseError, Ipv6Addr};\n\n// [1] [2]\n#[derive(Debug)]\nenum UpstreamError {\n    IO(io::Error),\n    Parsing(AddrParseError),\n}\n\n// [3]\nimpl fmt::Display for UpstreamError {\n    fn fmt(&self, f: &mut fmt::Formatter<\'_>) -> fmt::Result {\n        write!(f, "{:?}", self)\n    }\n}\n\n// [4]\nimpl error::Error for UpstreamError {/* \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u306b\u4efb\u305b\u308b\u306e\u3067\u7a7a\u767d\u306b\u3057\u307e\u3059\u3002 */}\n\nfn main() -> Result<(), UpstreamError> {\n    let _f = File::open("invisible.txt")\n        // [5]\n        .map_err(UpstreamError::IO)?;  // io::Error \u3092 UpstreamError::IO \u306b\u30de\u30c3\u30d7\n    let _localhost = "::1"\n        .parse::<Ipv6Addr>()\n        // [5]\n        .map_err(UpstreamError::Parsing)?;  // AddrParseError \u3092 UpstreamError::Parsing \u306b\u30de\u30c3\u30d7\n    Ok(())\n}\n')),(0,a.kt)("h4",{id:"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac-1"},"\u30b3\u30fc\u30c9\u306e\u89e3\u8aac"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u4e0a\u6d41\u306e\u30a8\u30e9\u30fc\u3092\u30d0\u30ea\u30a2\u30f3\u30c8\u3068\u3057\u3066\u542b\u3080\u5217\u6319\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u305d\u306e\u5217\u6319\u578b\u5b9a\u7fa9\u306b ",(0,a.kt)("inlineCode",{parentName:"li"},"#[derive(Debug)]")," \u6ce8\u91c8\u3092\u4ed8\u3051\u308b\u3002"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/std/fmt/trait.Display.html"},(0,a.kt)("inlineCode",{parentName:"a"},"Display"))," \u3092\u5b9f\u88c5\u3059\u308b\u3002"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/stable/std/error/trait.Error.html"},(0,a.kt)("inlineCode",{parentName:"a"},"Error"))," \u3092\u5b9f\u88c5\u3059\u308b\u3002\u4f46\u3057\u3001",(0,a.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/std/fmt/trait.Debug.html"},(0,a.kt)("inlineCode",{parentName:"a"},"Debug"))," \u3068 ",(0,a.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/std/fmt/trait.Display.html"},(0,a.kt)("inlineCode",{parentName:"a"},"Display"))," \u3092\u5b9f\u88c5\u3057\u305f\u5f8c\u3060\u304b\u3089\u3001\u305d\u306e\u5b9f\u88c5\u306f\u3001\u6b86\u3069\u30bf\u30b0\u3067\u4ed8\u3044\u3066\u304f\u308b\u3002"),(0,a.kt)("li",{parentName:"ol"},"\u30b3\u30fc\u30c9\u3067 ",(0,a.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.map_err"},(0,a.kt)("inlineCode",{parentName:"a"},"map_err()"))," \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u4e0a\u6d41\u306e\u30a8\u30e9\u30fc\u3092\u72ec\u81ea\u306e\u300c\u591a\u76ee\u7684\u30a8\u30e9\u30fc\u578b\u300d\u306b\u5909\u63db\u3067\u304d\u308b\u3002")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,a.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"map_err()")," \u306e\u547c\u3073\u51fa\u3057\u3092\u7701\u304f\u305f\u3081\u306b\u3001",(0,a.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"std::convert::From")," \u3092\u5b9f\u88c5\u3059\u308b"),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/result/enum.Result.html#method.map_err"},(0,a.kt)("inlineCode",{parentName:"a"},"map_error()"))," \u3067\u30a8\u30e9\u30fc\u578b\u3092\u30de\u30c3\u30d7\u3055\u305b\u308b\u4ee3\u308f\u308a\u306b\u3001\u4e88\u3081 ",(0,a.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/convert/trait.From.html"},(0,a.kt)("inlineCode",{parentName:"a"},"From"))," \u3092\u5b9f\u88c5\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u30a8\u30e9\u30fc\u578b\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u7701\u7565\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u65b9\u6cd5\u306f\u3001\u4e0b\u6d41\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u3078\u306e\u8ca0\u62c5\u304c\u8efd\u6e1b\u3055\u308c\u308b\u305f\u3081\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u5236\u4f5c\u3067\u7279\u306b\u6709\u7528\u3067\u3059\uff1a"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="\u4ee3\u6848\uff1a\u72ec\u81ea\u306e\u30e9\u30c3\u30d1\u30fc\u306b\u3088\u308b\u30a8\u30e9\u30fc\u578b\u306e\u305f\u3081\u306b std::convert::From \u3092\u5b9f\u88c5\u3059\u308b" {24-36}',title:'"\u4ee3\u6848\uff1a\u72ec\u81ea\u306e\u30e9\u30c3\u30d1\u30fc\u306b\u3088\u308b\u30a8\u30e9\u30fc\u578b\u306e\u305f\u3081\u306b',"std::convert::From":!0,'\u3092\u5b9f\u88c5\u3059\u308b"':!0,"{24-36}":!0},'use std::error;\nuse std::fmt;\nuse std::fs::File;\nuse std::io;\nuse std::net::{AddrParseError, Ipv6Addr};\n\n// [1] [2]\n#[derive(Debug)]\nenum UpstreamError {\n  IO(io::Error),\n  Parsing(AddrParseError),\n}\n\n// [3]\nimpl fmt::Display for UpstreamError {\n    fn fmt(&self, f: &mut fmt::Formatter<\'_>) -> fmt::Result {\n        write!(f, "{:?}", self)\n    }\n}\n\n// [4]\nimpl error::Error for UpstreamError {/* \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u306b\u4efb\u305b\u308b\u306e\u3067\u7a7a\u767d\u306b\u3057\u307e\u3059\u3002 */}\n\n// [5\']\nimpl From<io::IOError> for UpstreamError {\n    fn from(error: io::Error) -> Self {\n        UpstreamError::IO(error)\n    }\n}\n\n// [5\']\nimpl From<net::AddrParseError> for UpstreamError {\n    fn from(error: net::AddrParseError) -> Self {\n        UpstreamError::Parsing(error)\n    }\n}\n\nfn main() -> Result<(), UpstreamError> {\n    let _f = File::open("invisible.txt")?;\n    let _localhost = "::1".parse::<Ipv6Addr>()?;\n    Ok(())\n}\n'))),(0,a.kt)("h2",{id:"\u30a8\u30e9\u30fc\u51e6\u7406\u306b\u7279\u5316\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea"},"\u30a8\u30e9\u30fc\u51e6\u7406\u306b\u7279\u5316\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/notes/rust-crate-anyhow"},(0,a.kt)("inlineCode",{parentName:"a"},"anyhow"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/notes/rust-crate-thiserror"},(0,a.kt)("inlineCode",{parentName:"a"},"thiserror")))))}u.isMDXComponent=!0}}]);