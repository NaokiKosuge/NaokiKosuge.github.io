"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6652],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},p=Object.keys(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)n=p[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),o=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=o(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,p=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=o(n),c=r,k=m["".concat(l,".").concat(c)]||m[c]||d[c]||p;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var p=n.length,i=new Array(p);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var o=2;o<p;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6090:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>p,metadata:()=>s,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const p={slug:"/rust-crates-actix_web",sidebar_label:"actix_web"},i="\u3010Rust\u3011\u30af\u30ec\u30fc\u30c8 actix_web",s={unversionedId:"technology/rust/crates/rust-crate-actix_web",id:"technology/rust/crates/rust-crate-actix_web",title:"\u3010Rust\u3011\u30af\u30ec\u30fc\u30c8 actix_web",description:"logo",source:"@site/notes/technology/rust/crates/rust-crate-actix_web.md",sourceDirName:"technology/rust/crates",slug:"/rust-crates-actix_web",permalink:"/notes/rust-crates-actix_web",draft:!1,editUrl:"https://github.com/NaokiKosuge/NaokiKosuge.github.io/edit/main/notes/technology/rust/crates/rust-crate-actix_web.md",tags:[],version:"current",frontMatter:{slug:"/rust-crates-actix_web",sidebar_label:"actix_web"},sidebar:"tutorialSidebar",previous:{title:"std::time",permalink:"/notes/rust-crate-std-time"},next:{title:"anyhow",permalink:"/notes/rust-crate-anyhow"}},l={},o=[{value:"\u516c\u958b\u30e1\u30f3\u30d0\u30fc",id:"\u516c\u958b\u30e1\u30f3\u30d0\u30fc",level:2},{value:"\u57fa\u672c",id:"\u57fa\u672c",level:2},{value:"Hello, world!",id:"hello-world",level:3},{value:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210",id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210",level:3},{value:"\u72b6\u614b",id:"\u72b6\u614b",level:4},{value:"\u5171\u6709\u3055\u308c\u305f\u53ef\u5909\u72b6\u614b",id:"shared-mutable-state",level:4},{value:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210",id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210",level:4},{value:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ac\u30fc\u30c9\u3068\u4eee\u60f3\u30db\u30b9\u30c6\u30a3\u30f3\u30b0",id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ac\u30fc\u30c9\u3068\u4eee\u60f3\u30db\u30b9\u30c6\u30a3\u30f3\u30b0",level:4},{value:"\u69cb\u6210",id:"\u69cb\u6210",level:4},{value:"HTTP \u30b5\u30fc\u30d0\u30fc",id:"http-\u30b5\u30fc\u30d0\u30fc",level:3},{value:"\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9",id:"\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9",level:4},{value:"SSL",id:"ssl",level:4},{value:"Keep-Alive",id:"keep-alive",level:4},{value:"\u512a\u96c5\u306a\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3",id:"\u512a\u96c5\u306a\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3",level:4},{value:"\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc",id:"\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc",level:3},{value:"\u30ab\u30b9\u30bf\u30e0\u578b\u3067\u306e\u30ec\u30b9\u30dd\u30f3\u30b9",id:"\u30ab\u30b9\u30bf\u30e0\u578b\u3067\u306e\u30ec\u30b9\u30dd\u30f3\u30b9",level:4},{value:"\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3",id:"\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3",level:4},{value:"\u7570\u306a\u308b\u8fd4\u308a\u5024\u578b\uff08<code>Either</code>\uff09",id:"\u7570\u306a\u308b\u8fd4\u308a\u5024\u578beither",level:4},{value:"\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf",id:"extractors",level:3},{value:"\u30d1\u30b9",id:"\u30d1\u30b9",level:4},{value:"\u30af\u30a8\u30ea",id:"\u30af\u30a8\u30ea",level:4},{value:"Json",id:"json",level:4},{value:"\u30d5\u30a9\u30fc\u30e0",id:"\u30d5\u30a9\u30fc\u30e0",level:4},{value:"\u305d\u306e\u4ed6",id:"\u305d\u306e\u4ed6",level:4},{value:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf",id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf",level:4},{value:"\u9ad8\u5ea6",id:"\u9ad8\u5ea6",level:2},{value:"\u30a8\u30e9\u30fc",id:"\u30a8\u30e9\u30fc",level:3},{value:"\u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4f8b",id:"\u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4f8b",level:4},{value:"\u30a8\u30e9\u30fc\u30d8\u30eb\u30d1\u30fc",id:"\u30a8\u30e9\u30fc\u30d8\u30eb\u30d1\u30fc",level:4},{value:"\u30a8\u30e9\u30fc\u30ed\u30b0",id:"\u30a8\u30e9\u30fc\u30ed\u30b0",level:4},{value:"\u30a8\u30e9\u30fc\u51e6\u7406\u306e\u63a8\u5968\u30d7\u30e9\u30af\u30c6\u30a3\u30b9",id:"\u30a8\u30e9\u30fc\u51e6\u7406\u306e\u63a8\u5968\u30d7\u30e9\u30af\u30c6\u30a3\u30b9",level:4},{value:"\u30a8\u30e9\u30fc\u30ed\u30b0",id:"\u30a8\u30e9\u30fc\u30ed\u30b0-1",level:4},{value:"URL \u30c7\u30a3\u30b9\u30d1\u30c3\u30c1",id:"url-\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1",level:3},{value:"\u30ea\u30bd\u30fc\u30b9\u69cb\u6210",id:"\u30ea\u30bd\u30fc\u30b9\u69cb\u6210",level:4},{value:"\u30eb\u30fc\u30c8\u306e\u69cb\u6210",id:"\u30eb\u30fc\u30c8\u306e\u69cb\u6210",level:4},{value:"\u30eb\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0",id:"\u30eb\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0",level:4},{value:"\u30ea\u30bd\u30fc\u30b9\u30d1\u30bf\u30fc\u30f3\u306e\u69cb\u6587",id:"\u30ea\u30bd\u30fc\u30b9\u30d1\u30bf\u30fc\u30f3\u306e\u69cb\u6587",level:4},{value:"\u30b9\u30b3\u30fc\u30d7\u30eb\u30fc\u30c8",id:"\u30b9\u30b3\u30fc\u30d7\u30eb\u30fc\u30c8",level:4},{value:"\u30de\u30c3\u30c1\u60c5\u5831",id:"\u30de\u30c3\u30c1\u60c5\u5831",level:4},{value:"\u30d1\u30b9\u60c5\u5831\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf",id:"\u30d1\u30b9\u60c5\u5831\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf",level:4},{value:"\u30ea\u30bd\u30fc\u30b9URL\u306e\u751f\u6210",id:"\u30ea\u30bd\u30fc\u30b9url\u306e\u751f\u6210",level:4},{value:"\u5916\u90e8\u30ea\u30bd\u30fc\u30b9",id:"\u5916\u90e8\u30ea\u30bd\u30fc\u30b9",level:4},{value:"\u30d1\u30b9\u306e\u6b63\u898f\u5316\u3068\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30eb\u30fc\u30c8\u3078\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8",id:"\u30d1\u30b9\u306e\u6b63\u898f\u5316\u3068\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30eb\u30fc\u30c8\u3078\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8",level:4},{value:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210",id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210",level:4},{value:"\u30ab\u30b9\u30bf\u30e0\u30eb\u30fc\u30c8\u30ac\u30fc\u30c9",id:"\u30ab\u30b9\u30bf\u30e0\u30eb\u30fc\u30c8\u30ac\u30fc\u30c9",level:4},{value:"\u30ac\u30fc\u30c9\u5024\u306e\u5909\u66f4",id:"\u30ac\u30fc\u30c9\u5024\u306e\u5909\u66f4",level:4},{value:"\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Not Found \u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5909\u66f4",id:"\u30c7\u30d5\u30a9\u30eb\u30c8\u306e-not-found-\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5909\u66f4",level:4},{value:"\u30ea\u30af\u30a8\u30b9\u30c8",id:"\u30ea\u30af\u30a8\u30b9\u30c8",level:3},{value:"\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0",id:"\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0",level:4},{value:"JSON \u30ea\u30af\u30a8\u30b9\u30c8",id:"json-\u30ea\u30af\u30a8\u30b9\u30c8",level:4},{value:"\u30c1\u30e3\u30f3\u30af\u8ee2\u9001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0",id:"\u30c1\u30e3\u30f3\u30af\u8ee2\u9001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0",level:4},{value:"URL \u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30dc\u30c7\u30a3",id:"url-\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30dc\u30c7\u30a3",level:4},{value:"\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30ea\u30af\u30a8\u30b9\u30c8",id:"\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30ea\u30af\u30a8\u30b9\u30c8",level:4},{value:"\u30ec\u30b9\u30dd\u30f3\u30b9",id:"\u30ec\u30b9\u30dd\u30f3\u30b9",level:3},{value:"\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0",id:"\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0-1",level:4},{value:"JSON \u30ec\u30b9\u30dd\u30f3\u30b9",id:"json-\u30ec\u30b9\u30dd\u30f3\u30b9",level:4},{value:"\u30c6\u30b9\u30c8",id:"\u30c6\u30b9\u30c8",level:3},{value:"\u7d71\u5408\u30c6\u30b9\u30c8",id:"\u7d71\u5408\u30c6\u30b9\u30c8",level:4},{value:"\u30b9\u30c8\u30ea\u30fc\u30e0\u30ec\u30b9\u30dd\u30f3\u30b9\u30c6\u30b9\u30c8",id:"\u30b9\u30c8\u30ea\u30fc\u30e0\u30ec\u30b9\u30dd\u30f3\u30b9\u30c6\u30b9\u30c8",level:4},{value:"\u30df\u30c9\u30eb\u30a6\u30a7\u30a2",id:"\u30df\u30c9\u30eb\u30a6\u30a7\u30a2",level:3},{value:"\u30ed\u30ae\u30f3\u30b0",id:"\u30ed\u30ae\u30f3\u30b0",level:4},{value:"\u4f7f\u7528\u6cd5",id:"\u4f7f\u7528\u6cd5",level:4},{value:"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8",id:"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8",level:4},{value:"\u30c7\u30d5\u30a9\u30eb\u30c8\u30d8\u30c3\u30c0\u30fc",id:"\u30c7\u30d5\u30a9\u30eb\u30c8\u30d8\u30c3\u30c0\u30fc",level:4},{value:"\u30e6\u30fc\u30b6\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3",id:"\u30e6\u30fc\u30b6\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3",level:4},{value:"\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u30fc",id:"\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u30fc",level:4},{value:"\u9759\u7684\u30d5\u30a1\u30a4\u30eb",id:"\u9759\u7684\u30d5\u30a1\u30a4\u30eb",level:3},{value:"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea",id:"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea",level:4},{value:"\u69cb\u6210",id:"\u69cb\u6210-1",level:4},{value:"\u30d7\u30ed\u30c8\u30b3\u30eb",id:"\u30d7\u30ed\u30c8\u30b3\u30eb",level:2},{value:"Websockets",id:"websockets",level:3},{value:"HTTP/2",id:"http2",level:3},{value:"\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3",id:"\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3",level:4},{value:"\u30d1\u30bf\u30fc\u30f3",id:"\u30d1\u30bf\u30fc\u30f3",level:2},{value:"\u81ea\u52d5\u30ea\u30ed\u30fc\u30c9",id:"\u81ea\u52d5\u30ea\u30ed\u30fc\u30c9",level:3},{value:"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9",id:"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9",level:3},{value:"\u30c7\u30a3\u30fc\u30bc\u30eb",id:"\u30c7\u30a3\u30fc\u30bc\u30eb",level:4},{value:"\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0",id:"\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0",level:2},{value:"HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316",id:"http-\u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316",level:3},{value:"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6982\u8981",id:"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6982\u8981",level:4},{value:"\u63a5\u7d9a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb",id:"\u63a5\u7d9a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb",level:3},{value:"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6982\u8981",id:"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6982\u8981-1",level:4},{value:"\u30eb\u30fc\u30d7\u3092\u3088\u308a\u8a73\u7d30\u306b\u53d7\u3051\u5165\u308c\u308b",id:"\u30eb\u30fc\u30d7\u3092\u3088\u308a\u8a73\u7d30\u306b\u53d7\u3051\u5165\u308c\u308b",level:4},{value:"\u30ef\u30fc\u30ab\u30fc\u30eb\u30fc\u30d7\u306e\u8a73\u7d30",id:"\u30ef\u30fc\u30ab\u30fc\u30eb\u30fc\u30d7\u306e\u8a73\u7d30",level:4},{value:"\u5927\u307e\u304b\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u30eb\u30fc\u30d7",id:"\u5927\u307e\u304b\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u30eb\u30fc\u30d7",level:4},{value:"\u95a2\u9023\u3059\u308b\u5916\u90e8\u30ea\u30f3\u30af",id:"\u95a2\u9023\u3059\u308b\u5916\u90e8\u30ea\u30f3\u30af",level:2}],u={toc:o};function d(e){let{components:t,...p}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,p,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rust\u30af\u30ec\u30fc\u30c8-actix_web"},"\u3010Rust\u3011\u30af\u30ec\u30fc\u30c8 ",(0,r.kt)("inlineCode",{parentName:"h1"},"actix_web")),(0,r.kt)("figure",{class:"inline-flex bg-white"},(0,r.kt)("p",null,(0,r.kt)("img",{alt:"logo",src:n(4023).Z,width:"720",height:"720"}))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/"},(0,r.kt)("inlineCode",{parentName:"a"},"actix_web"))," \u306f\u3001Rust \u306b\u304a\u3051\u308b\u9ad8\u901f\u306a Web \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002"),(0,r.kt)("p",null,"\u5f53\u521d\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"actix-web")," \u306f\u3001\u5f37\u529b\u3067\u9ad8\u901f\u306a\u30a2\u30af\u30bf\u30fc\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"actix")," \u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u73fe\u5728\u3067\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"actix-web")," \u306f\u30a2\u30af\u30bf\u30fc\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u306f\u307b\u3068\u3093\u3069\u95a2\u4fc2\u304c\u306a\u304f\u3001\u5225\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u7528\u3057\u3066\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u73fe\u6642\u70b9\u3067\u306f WebSocket \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u306e\u307f ",(0,r.kt)("inlineCode",{parentName:"p"},"actix")," \u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002"),(0,r.kt)("h2",{id:"\u516c\u958b\u30e1\u30f3\u30d0\u30fc"},"\u516c\u958b\u30e1\u30f3\u30d0\u30fc"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"\u518d\u30a8\u30af\u30b9\u30dd\u30fc\u30c8")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cookie")," \u2014 ",(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/cookie/*/cookie/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"actix_http::cookie"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"rt")," \u2014 ",(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-rt/*/actix_rt/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"actix_rt"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"\u30e2\u30b8\u30e5\u30fc\u30eb")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/body/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"body"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/client/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"client"))," \u2014 Actix web \u975e\u540c\u671f HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/dev/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"dev"))," \u2014 \u30e9\u30a4\u30d6\u30e9\u30ea\u958b\u767a\u8005\u5411\u3051\u306e ",(0,r.kt)("inlineCode",{parentName:"li"},"actix-web")," \u30d7\u30ec\u30ea\u30e5\u30fc\u30c9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/error/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"error"))," \u2014 \u30a8\u30e9\u30fc\u3068\u7d50\u679c\u30e2\u30b8\u30e5\u30fc\u30eb"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/guard/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"guard"))," \u2014 \u30eb\u30fc\u30c8\u30de\u30c3\u30c1\u30ac\u30fc\u30c9\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/http/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"http"))," \u2014 \u3055\u307e\u3056\u307e\u306aHTTP\u95a2\u9023\u306e\u578b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/middleware/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"middleware"))," \u2014 \u30df\u30c9\u30eb\u30a6\u30a7\u30a2"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/test/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"test"))," \u2014 \u30c6\u30b9\u30c8\u4e2d\u306b\u4f7f\u7528\u3059\u308b Actix \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u3055\u307e\u3056\u307e\u306a\u30d8\u30eb\u30d1\u30fc\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/web/index.html"},(0,r.kt)("inlineCode",{parentName:"a"},"web"))," \u2014 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u767b\u9332\u306e\u305f\u3081\u306e Essential s\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3068\u578b\u3002"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"\u69cb\u9020\u4f53")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.App.html"},(0,r.kt)("inlineCode",{parentName:"a"},"App"))," \u2014 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d3\u30eb\u30c0\u30fc-\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30d3\u30eb\u30c0\u30fc\u30d1\u30bf\u30fc\u30f3\u306b\u5f93\u3046\u69cb\u9020\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.Error.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Error"))," \u2014 \u4e00\u822c\u7684\u306a actix web \u30a8\u30e9\u30fc\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpRequest.html"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpRequest"))," \u2014 HTTP \u30ea\u30af\u30a8\u30b9\u30c8"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpResponse.html"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpResponse"))," \u2014 HTTP \u30ec\u30b9\u30dd\u30f3\u30b9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpServer.html"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpServer"))," \u2014 HTTP \u30b5\u30fc\u30d0\u30fc"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.Resource.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Resource"))," \u2014 \u8981\u6c42\u3055\u308c\u305fURL\u306b\u5bfe\u5fdc\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u30c6\u30fc\u30d6\u30eb\u306e\u30a8\u30f3\u30c8\u30ea"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.Route.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Route"))," \u2014 \u30ea\u30bd\u30fc\u30b9\u30eb\u30fc\u30c8\u306e\u5b9a\u7fa9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.Scope.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Scope"))," \u2014 \u30ea\u30bd\u30fc\u30b9\u30b9\u30b3\u30fc\u30d7\u3002"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"\u5217\u6319\u578b")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/enum.Either.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Either"))," \u2014 2\u3064\u306e\u7570\u306a\u308b\u30ec\u30b9\u30dd\u30f3\u30c0\u30fc\u578b\u30921\u3064\u306e\u578b\u306b\u7d50\u5408\u3057\u307e\u3059"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/enum.EitherExtractError.html"},(0,r.kt)("inlineCode",{parentName:"a"},"EitherExtractError"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"Either<A, B>")," \u306e\u62bd\u51fa\u306b\u5931\u6557\u3057\u305f\u305f\u3081\u306b\u767a\u751f\u3057\u305f\u8907\u5408\u30a8\u30e9\u30fc\u3002"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"\u30c8\u30ec\u30a4\u30c8")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/trait.FromRequest.html"},(0,r.kt)("inlineCode",{parentName:"a"},"FromRequest"))," \u2014 \u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u62bd\u51fa\u3067\u304d\u308b\u578b\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u308b\u30c8\u30ec\u30a4\u30c8\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/trait.HttpMessage.html"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpMessage"))," \u2014 http \u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u5bfe\u3057\u3066\u6c4e\u7528\u7684\u306a\u64cd\u4f5c\u3092\u5b9f\u88c5\u3059\u308b\u30c8\u30ec\u30a4\u30c8"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/trait.Responder.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Responder"))," \u2014 http \u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u5909\u63db\u3067\u304d\u308b\u578b\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u308b\u30c8\u30ec\u30a4\u30c8\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/trait.ResponseError.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ResponseError"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"Response")," \u306b\u5909\u63db\u3067\u304d\u308b\u30a8\u30e9\u30fc"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"\u578b\u5b9a\u7fa9")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/type.Result.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Result"))," \u2014 actix web \u64cd\u4f5c\u306e\u7279\u6b8a\u306a ",(0,r.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/std/result/enum.Result.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Result"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("em",{parentName:"p"},"\u5c5e\u6027\u30de\u30af\u30ed")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.connect.html"},(0,r.kt)("inlineCode",{parentName:"a"},"connect"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::guard::Connect")," \u3092\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.delete.html"},(0,r.kt)("inlineCode",{parentName:"a"},"delete"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::guard::Delete")," \u3092\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.get.html"},(0,r.kt)("inlineCode",{parentName:"a"},"get"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::guard::Get")," \u3092\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.head.html"},(0,r.kt)("inlineCode",{parentName:"a"},"head"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::guard::Head")," \u3092\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.main.html"},(0,r.kt)("inlineCode",{parentName:"a"},"main"))," \u2014 \u975e\u540c\u671f ",(0,r.kt)("inlineCode",{parentName:"li"},"main")," \u95a2\u6570\u3092 actix \u30b7\u30b9\u30c6\u30e0\u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u30de\u30fc\u30af\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.options.html"},(0,r.kt)("inlineCode",{parentName:"a"},"options"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::guard::Options")," \u3092\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.patch.html"},(0,r.kt)("inlineCode",{parentName:"a"},"patch"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::guard::Patch")," \u3092\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.post.html"},(0,r.kt)("inlineCode",{parentName:"a"},"post"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::guard::Post")," \u3092\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.put.html"},(0,r.kt)("inlineCode",{parentName:"a"},"put"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::guard::Put")," \u3092\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.route.html"},(0,r.kt)("inlineCode",{parentName:"a"},"route"))," \u2014 \u30ea\u30bd\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u3001\u8907\u6570\u306eHTTP\u30e1\u30bd\u30c3\u30c9\u30ac\u30fc\u30c9\u3092\u8a31\u53ef\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/attr.trace.html"},(0,r.kt)("inlineCode",{parentName:"a"},"trace"))," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::guard::Trace")," \u3092\u4f7f\u7528\u3057\u3066\u30eb\u30fc\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002")))),(0,r.kt)("h2",{id:"\u57fa\u672c"},"\u57fa\u672c"),(0,r.kt)("h3",{id:"hello-world"},"Hello, world!"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc")," \u306f\u30010\u500b\u4ee5\u4e0a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u53d7\u3051\u5165\u308c\u308b\u975e\u540c\u671f\u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u62bd\u51fa\u3067\u304d\uff08",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.FromRequest.html"},(0,r.kt)("inlineCode",{parentName:"a"},"FromRequest"))," \u30c8\u30ec\u30a4\u30c8\uff09\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpResponse.html"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpResponse"))," \u306b\u5909\u63db\u3067\u304d\u308b\u578b\u3092\u8fd4\u3057\u307e\u3059\uff08",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.Responder.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Responder"))," \u30c8\u30ec\u30a4\u30c8\uff09\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, post, web, App, HttpResponse, HttpServer, Responder};\n\n#[get("/")]\nasync fn hello() -> impl Responder {\n    HttpResponse::Ok().body("Hello world!")\n}\n\n#[post("/echo")]\nasync fn echo(req_body: String) -> impl Responder {\n    HttpResponse::Ok().body(req_body)\n}\n\nasync fn manual_hello() -> impl Responder {\n    HttpResponse::Ok().body("Hey there!")\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .service(hello)\n            .service(echo)\n            .route("/hey", web::get().to(manual_hello))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h3",{id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210"},"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210"),(0,r.kt)("p",null,"\u3059\u3079\u3066\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"actix-web")," \u30b5\u30fc\u30d0\u30fc\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.App.html"},(0,r.kt)("inlineCode",{parentName:"a"},"App"))," \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4e2d\u5fc3\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.Scope.html"},(0,r.kt)("inlineCode",{parentName:"a"},"scope"))," \u306f\u3001\u3059\u3079\u3066\u306e\u30eb\u30fc\u30c8\u306e\u540d\u524d\u7a7a\u9593\u3068\u3057\u3066\u6a5f\u80fd\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u7279\u5b9a\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u306e\u3059\u3079\u3066\u306e\u30eb\u30fc\u30c8\u306b\u306f\u3001\u540c\u3058 URL \u30d1\u30b9\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u4ed8\u3044\u3066\u3044\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u306b\u306f\u3001\u5e38\u306b\u5148\u982d\u306e\u300c",(0,r.kt)("inlineCode",{parentName:"p"},"/"),"\u300d\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u6307\u5b9a\u3055\u308c\u305f\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u306b\u5148\u982d\u306e\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u81ea\u52d5\u7684\u306b\u633f\u5165\u3055\u308c\u307e\u3059\u3002\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u306f\u3001\u5024\u30d1\u30b9\u30bb\u30b0\u30e1\u30f3\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30b9\u30b3\u30fc\u30d7\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"/app")," \u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5834\u5408\u3001\u30d1\u30b9\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"/app"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"/app/"),"\u3001\u307e\u305f\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"/app/test")," \u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u3059\u3079\u3066\u4e00\u81f4\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30d1\u30b9 ",(0,r.kt)("inlineCode",{parentName:"p"},"/application")," \u306f\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:"{10-15}","{10-15}":!0},'use actix_web::{web, App, HttpServer, Responder};\n\nasync fn index() -> impl Responder {\n    "Hello world!"\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new().service(\n            // \u305d\u308c\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u3068\u30eb\u30fc\u30c8\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9...\n            web::scope("/app")\n                // ...\u3057\u305f\u304c\u3063\u3066\u3001\u3053\u308c\u306f `GET /app/index.html` \u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3057\u307e\u3059\n                .route("/index.html", web::get().to(index)),\n        )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h4",{id:"\u72b6\u614b"},"\u72b6\u614b"),(0,r.kt)("p",null,"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u306f\u3001\u540c\u3058\u30b9\u30b3\u30fc\u30d7\u5185\u306e\u3059\u3079\u3066\u306e\u30eb\u30fc\u30c8\u3068\u30ea\u30bd\u30fc\u30b9\u3067\u5171\u6709\u3055\u308c\u307e\u3059\u3002\u72b6\u614b\u306b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.Data.html"},(0,r.kt)("inlineCode",{parentName:"a"},"web::Data<T>"))," \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"T")," \u306f\u72b6\u614b\u306e\u578b\u3067\u3059\u3002\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u3082\u72b6\u614b\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u7c21\u5358\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u3092\u6b21\u306e\u72b6\u614b\u3067\u4fdd\u5b58\u3057\u307e\u3057\u3087\u3046\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:"{3-6}","{3-6}":!0},'use actix_web::{get, web, App, HttpServer};\n\n// \u3053\u306e\u69cb\u9020\u4f53\u306f\u72b6\u614b\u3092\u8868\u3057\u307e\u3059\nstruct AppState {\n    app_name: String,\n}\n\n#[get("/")]\nasync fn index(data: web::Data<AppState>) -> String {\n    let app_name = &data.app_name; // <- app_name \u3092\u53d6\u5f97\u3057\u307e\u3059\n\n    format!("Hello {}!", app_name) // <- app_name \u306b\u3088\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\n}\n')),(0,r.kt)("p",null,"\u6b21\u306b\u3001\u30a2\u30d7\u30ea\u3092\u521d\u671f\u5316\u3059\u308b\u3068\u304d\u306e\u72b6\u614b\u3092\u6e21\u3057\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:"{5-7}","{5-7}":!0},'#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .data(AppState {\n                app_name: String::from("Actix-web"),\n            })\n            .service(index)\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u306b\u306f\u3001\u4efb\u610f\u306e\u6570\u306e\u72b6\u614b\u578b\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"shared-mutable-state"},"\u5171\u6709\u3055\u308c\u305f\u53ef\u5909\u72b6\u614b"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HttpServer")," \u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306f\u306a\u304f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30af\u30c8\u30ea\u3092\u53d7\u3051\u5165\u308c\u307e\u3059\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpServer")," \u306f\u3001\u30b9\u30ec\u30c3\u30c9\u3054\u3068\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306f\u8907\u6570\u56de\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u9593\u3067\u30c7\u30fc\u30bf\u3092\u5171\u6709\u3057\u305f\u3044\u5834\u5408\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Send + Sync")," \u306a\u3069\u3001\u5171\u6709\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u5185\u90e8\u7684\u306b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.Data.html"},(0,r.kt)("inlineCode",{parentName:"a"},"web::Data"))," \u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"Arc")," \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u30012\u3064\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Arc")," \u306e\u4f5c\u6210\u3092\u56de\u907f\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.App.html#method.app_data"},(0,r.kt)("inlineCode",{parentName:"a"},"App::app_data()"))," \u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3059\u308b\u524d\u306b\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u6b21\u306e\u4f8b\u3067\u306f\u3001\u5909\u66f4\u53ef\u80fd\u306a\u5171\u6709\u72b6\u614b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u307e\u305a\u3001\u72b6\u614b\u3092\u5b9a\u7fa9\u3057\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{web, App, HttpServer};\nuse std::sync::Mutex;\n\nstruct AppStateWithCounter {\n    counter: Mutex<i32>, // <- \u30b9\u30ec\u30c3\u30c9\u9593\u3067\u5b89\u5168\u306b\u5909\u66f4\u3059\u308b\u306b\u306f\u3001Mutex \u304c\u5fc5\u8981\u3067\u3059\n}\n\nasync fn index(data: web::Data<AppStateWithCounter>) -> String {\n    let mut counter = data.counter.lock().unwrap(); // <- \u30ab\u30a6\u30f3\u30bf\u30fc\u306e MutexGuard \u3092\u53d6\u5f97\u3057\u307e\u3059\n    *counter += 1; // <- MutexGuard \u5185\u306e\u30a2\u30af\u30bb\u30b9\u30ab\u30a6\u30f3\u30bf\u30fc\n\n    format!("Request number: {}", counter) // <- \u30ab\u30a6\u30f3\u30c8\u4ed8\u304d\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\n}\n')),(0,r.kt)("p",null,"\u305d\u3057\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"App")," \u306b\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    let counter = web::Data::new(AppStateWithCounter {\n        counter: Mutex::new(0),\n    });\n\n    HttpServer::new(move || {\n        // \u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u306b\u79fb\u52d5\u3057\u307e\u3059\n        App::new()\n            // \u6ce8\uff1a\u30c7\u30fc\u30bf\u306e\u4ee3\u308f\u308a\u306b app_data \u3092\u4f7f\u7528\u3059\u308b\n            .app_data(counter.clone()) // <- \u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3059\u308b\n            .route("/", web::get().to(index))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h4",{id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210"},"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/fn.scope.html"},(0,r.kt)("inlineCode",{parentName:"a"},"web::scope()"))," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ea\u30bd\u30fc\u30b9\u30b0\u30eb\u30fc\u30d7\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30b9\u30b3\u30fc\u30d7\u306f\u3001\u30ea\u30bd\u30fc\u30b9\u69cb\u6210\u306b\u3088\u3063\u3066\u8ffd\u52a0\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u30d1\u30bf\u30fc\u30f3\u306e\u524d\u306b\u4ed8\u52a0\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u8868\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u540c\u3058\u30ea\u30bd\u30fc\u30b9\u540d\u3092\u7dad\u6301\u3057\u306a\u304c\u3089\u3001\u5143\u306e\u4f5c\u6210\u8005\u304c\u610f\u56f3\u3057\u305f\u3082\u306e\u3068\u306f\u7570\u306a\u308b\u5834\u6240\u306b\u4e00\u9023\u306e\u30eb\u30fc\u30c8\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u4f8b\u3048\u3070\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[actix_web::main]\nasync fn main() {\n    let scope = web::scope("/users").service(show_users);\n    App::new().service(scope);\n}\n')),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b9\u30b3\u30fc\u30d7\u5f15\u6570\u304c\u30d1\u30bf\u30fc\u30f3\u306e\u524d\u306b\u4ed8\u52a0\u3055\u308c\u308b\u305f\u3081\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"show_users")," \u30eb\u30fc\u30c8\u306e\u6709\u52b9\u306a\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"/show")," \u3067\u306f\u306a\u304f ",(0,r.kt)("inlineCode",{parentName:"p"},"/users/show")," \u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u30eb\u30fc\u30c8\u306f URL \u30d1\u30b9\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"/users/show")," \u306e\u5834\u5408\u306b\u306e\u307f\u4e00\u81f4\u3057\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpRequest.html#method.url_for"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpRequest.url_for()"))," \u95a2\u6570\u304c\u30eb\u30fc\u30c8\u540d ",(0,r.kt)("inlineCode",{parentName:"p"},"show_users")," \u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u3001\u540c\u3058\u30d1\u30b9\u306e URL \u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ac\u30fc\u30c9\u3068\u4eee\u60f3\u30db\u30b9\u30c6\u30a3\u30f3\u30b0"},"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ac\u30fc\u30c9\u3068\u4eee\u60f3\u30db\u30b9\u30c6\u30a3\u30f3\u30b0"),(0,r.kt)("p",null,"\u30ac\u30fc\u30c9\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53c2\u7167\u3092\u53d7\u3051\u5165\u308c\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"true")," \u307e\u305f\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," \u3092\u8fd4\u3059\u5358\u7d14\u306a\u95a2\u6570\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6b63\u5f0f\u306b\u306f\u3001\u30ac\u30fc\u30c9\u306f ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/guard/trait.Guard.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Guard"))," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002 Actix-web \u306f\u3044\u304f\u3064\u304b\u306e\u30ac\u30fc\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/guard/index.html#functions"},"\u95a2\u6570\u30bb\u30af\u30b7\u30e7\u30f3")," \u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30ac\u30fc\u30c9\u306e1\u3064\u306f ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/guard/fn.Header.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Header"))," \u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u30fc\u60c5\u5831\u306b\u57fa\u3065\u304f\u30d5\u30a3\u30eb\u30bf\u30fc\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .service(\n                web::scope("/")\n                    .guard(guard::Header("Host", "www.rust-lang.org"))\n                    .route("", web::to(|| HttpResponse::Ok().body("www"))),\n            )\n            .service(\n                web::scope("/")\n                    .guard(guard::Header("Host", "users.rust-lang.org"))\n                    .route("", web::to(|| HttpResponse::Ok().body("user"))),\n            )\n            .route("/", web::to(|| HttpResponse::Ok()))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h4",{id:"\u69cb\u6210"},"\u69cb\u6210"),(0,r.kt)("p",null,"\u5358\u7d14\u3055\u3068\u518d\u5229\u7528\u6027\u306e\u305f\u3081\u306b\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.App.html#method.configure"},(0,r.kt)("inlineCode",{parentName:"a"},"App")),"\u3000\u3068\u3000",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.Scope.html#method.configure"},(0,r.kt)("inlineCode",{parentName:"a"},"web::Scope")),"\u3000\u306e\u4e21\u65b9\u304c\u3000",(0,r.kt)("inlineCode",{parentName:"p"},"configure"),"\u3000\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u3001\u69cb\u6210\u306e\u4e00\u90e8\u3092\u5225\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u307e\u305f\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u79fb\u52d5\u3059\u308b\u5834\u5408\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u30ea\u30bd\u30fc\u30b9\u306e\u69cb\u6210\u306e\u4e00\u90e8\u3092\u5225\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u79fb\u52d5\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{web, App, HttpResponse, HttpServer};\n\n// \u3053\u306e\u95a2\u6570\u306f\u5225\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u914d\u7f6e\u3067\u304d\u307e\u3059\nfn scoped_config(cfg: &mut web::ServiceConfig) {\n    cfg.service(\n        web::resource("/test")\n            .route(web::get().to(|| HttpResponse::Ok().body("test")))\n            .route(web::head().to(|| HttpResponse::MethodNotAllowed())),\n    );\n}\n\n// \u3053\u306e\u95a2\u6570\u306f\u5225\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u914d\u7f6e\u3067\u304d\u307e\u3059\nfn config(cfg: &mut web::ServiceConfig) {\n    cfg.service(\n        web::resource("/app")\n            .route(web::get().to(|| HttpResponse::Ok().body("app")))\n            .route(web::head().to(|| HttpResponse::MethodNotAllowed())),\n    );\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .configure(config)\n            .service(web::scope("/nodejs-api").configure(scoped_config))\n            .route("/", web::get().to(|| HttpResponse::Ok().body("/")))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u4f8b\u306e\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'/         -> "/"\n/app      -> "app"\n/api/test -> "test"\n')),(0,r.kt)("p",null,"\u5404 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.ServiceConfig.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ServiceConfig"))," \u306f\u3001\u72ec\u81ea\u306e",(0,r.kt)("inlineCode",{parentName:"p"},"data"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"route"),"\u3001\u304a\u3088\u3073 ",(0,r.kt)("inlineCode",{parentName:"p"},"services")," \u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"http-\u30b5\u30fc\u30d0\u30fc"},"HTTP \u30b5\u30fc\u30d0\u30fc"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpServer.html"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpServer"))," \u306f\u3001HTTP \u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u8cac\u4efb\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HttpServer")," \u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30af\u30c8\u30ea\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u53d7\u3051\u5165\u308c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30af\u30c8\u30ea\u306b\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"Send + Sync")," \u306e\u5883\u754c\u304c\u5fc5\u8981\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("p",null,"\u7279\u5b9a\u306e\u30bd\u30b1\u30c3\u30c8\u30a2\u30c9\u30ec\u30b9\u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpServer.html#method.bind"},(0,r.kt)("inlineCode",{parentName:"a"},"bind()"))," \u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u8907\u6570\u56de\u547c\u3073\u51fa\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002 ssl \u30bd\u30b1\u30c3\u30c8\u3092\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpServer.html#method.bind_openssl"},(0,r.kt)("inlineCode",{parentName:"a"},"bind_openssl()"))," \u307e\u305f\u306f ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpServer.html#method.bind_rustls"},(0,r.kt)("inlineCode",{parentName:"a"},"bind_rustls()"))," \u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 HTTP \u30b5\u30fc\u30d0\u30fc\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"HttpServer::run()")," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{web, App, HttpResponse, HttpServer};\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new().route("/", web::get().to(|| HttpResponse::Ok()))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"run()")," \u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u30bf\u30a4\u30d7\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"Server")," \u578b\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u7ba1\u7406\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pause()")," \u2014 \u7740\u4fe1\u63a5\u7d9a\u306e\u53d7\u3051\u5165\u308c\u3092\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"resume()")," \u2014 \u7740\u4fe1\u63a5\u7d9a\u306e\u53d7\u3051\u5165\u308c\u3092\u518d\u958b\u3057\u307e\u3059"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stop()")," \u2014 \u7740\u4fe1\u63a5\u7d9a\u51e6\u7406\u3092\u505c\u6b62\u3057\u3001\u3059\u3079\u3066\u306e\u30ef\u30fc\u30ab\u30fc\u3092\u505c\u6b62\u3057\u3066\u7d42\u4e86\u3057\u307e\u3059")),(0,r.kt)("p",null,"\u6b21\u306e\u4f8b\u306f\u3001HTTP\u30b5\u30fc\u30d0\u30fc\u3092\u5225\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u8d77\u52d5\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u3066\u3044\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{rt::System, web, App, HttpResponse, HttpServer};\nuse std::sync::mpsc;\nuse std::thread;\n\n#[actix_web::main]\nasync fn main() {\n    let (tx, rx) = mpsc::channel();\n\n    thread::spawn(move || {\n        let sys = System::new("http-server");\n\n        let srv = HttpServer::new(|| {\n            App::new().route("/", web::get().to(|| HttpResponse::Ok()))\n        })\n        .bind("127.0.0.1:8080")?\n        .shutdown_timeout(60) // <- \u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u309260\u79d2\u306b\u8a2d\u5b9a\u3057\u307e\u3059\n        .run();\n\n        let _ = tx.send(srv);\n        sys.run()\n    });\n\n    let srv = rx.recv().unwrap();\n\n    // \u65b0\u3057\u3044\u63a5\u7d9a\u306e\u53d7\u3051\u5165\u308c\u3092\u4e00\u6642\u505c\u6b62\u3057\u307e\u3059\n    srv.pause().await;\n    // \u65b0\u3057\u3044\u63a5\u7d9a\u306e\u53d7\u3051\u5165\u308c\u3092\u518d\u958b\u3057\u307e\u3059\n    srv.resume().await;\n    // \u30b5\u30fc\u30d0\u30fc\u3092\u505c\u6b62\u3057\u307e\u3059\n    srv.stop(true).await;\n}\n')),(0,r.kt)("h4",{id:"\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9"},"\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HttpServer")," \u306f\u81ea\u52d5\u7684\u306b\u591a\u6570\u306e HTTP \u30ef\u30fc\u30ab\u30fc\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u3053\u306e\u6570\u306f\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u8ad6\u7406 CPU \u306e\u6570\u3068\u540c\u3058\u3067\u3059\u3002\u3053\u306e\u6570\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpServer.html#method.workers"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpServer::worker()"))," \u30e1\u30bd\u30c3\u30c9\u3067\u4e0a\u66f8\u304d\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{web, App, HttpResponse, HttpServer};\n\n#[actix_web::main]\nasync fn main() {\n    HttpServer::new(|| {\n        App::new().route("/", web::get().to(|| HttpResponse::Ok()))\n    })\n    .workers(4); // <- Start 4 workers\n}\n')),(0,r.kt)("p",null,"\u30ef\u30fc\u30ab\u30fc\u304c\u4f5c\u6210\u3055\u308c\u308b\u3068\u3001\u30ef\u30fc\u30ab\u30fc\u306f\u305d\u308c\u305e\u308c\u500b\u5225\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u308a\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3057\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u306f\u30b9\u30ec\u30c3\u30c9\u9593\u3067\u5171\u6709\u3055\u308c\u305a\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u540c\u6642\u5b9f\u884c\u306e\u5fc3\u914d\u306a\u3057\u306b\u72b6\u614b\u306e\u30b3\u30d4\u30fc\u3092\u81ea\u7531\u306b\u64cd\u4f5c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"Send")," \u307e\u305f\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"Sync")," \u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30af\u30c8\u30ea\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"Send + Sync")," \u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u9593\u3067\u72b6\u614b\u3092\u5171\u6709\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Arc")," \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u5171\u6709\u3068\u540c\u671f\u304c\u5c0e\u5165\u3055\u308c\u305f\u3089\u3001\u7279\u5225\u306a\u6ce8\u610f\u3092\u6255\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u591a\u304f\u306e\u5834\u5408\u3001\u5909\u66f4\u306e\u305f\u3081\u306b\u5171\u6709\u72b6\u614b\u3092\u30ed\u30c3\u30af\u3057\u305f\u7d50\u679c\u3068\u3057\u3066\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30b3\u30b9\u30c8\u304c\u8aa4\u3063\u3066\u5c0e\u5165\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/sync/struct.Mutex.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Mutex"))," \u306e\u4ee3\u308f\u308a\u306b ",(0,r.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/sync/struct.RwLock.html"},"\u8aad\u307f\u53d6\u308a/\u66f8\u304d\u8fbc\u307f\u30ed\u30c3\u30af")," \u3092\u4f7f\u7528\u3057\u3066\u975e\u6392\u4ed6\u7684\u30ed\u30c3\u30af\u3092\u5b9f\u73fe\u3059\u308b\u306a\u3069\u3001\u3088\u308a\u52b9\u7387\u7684\u306a\u30ed\u30c3\u30af\u6226\u7565\u3092\u4f7f\u7528\u3057\u3066\u3053\u308c\u3089\u306e\u30b3\u30b9\u30c8\u3092\u8efd\u6e1b\u3067\u304d\u307e\u3059\u304c\u3001\u6700\u3082\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u9ad8\u3044\u5b9f\u88c5\u306f\u3001\u30ed\u30c3\u30af\u304c\u307e\u3063\u305f\u304f\u767a\u751f\u3057\u306a\u3044\u5b9f\u88c5\u3067\u3042\u308b\u3053\u3068\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u5404\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u306f\u305d\u306e\u8981\u6c42\u3092\u9806\u756a\u306b\u51e6\u7406\u3059\u308b\u305f\u3081\u3001\u73fe\u5728\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\u306b\u3088\u308a\u3001\u73fe\u5728\u306e\u30ef\u30fc\u30ab\u30fc\u306f\u65b0\u3057\u3044\u8981\u6c42\u306e\u51e6\u7406\u3092\u505c\u6b62\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="\u60aa\u3044\u4f8b"',title:'"\u60aa\u3044\u4f8b"'},'fn my_handler() -> impl Responder {\n    std::thread::sleep(Duration::from_secs(5)); // <-- Bad \u30d7\u30e9\u30af\u30c6\u30a3\u30b9\uff01\u73fe\u5728\u306e\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u304c\u30cf\u30f3\u30b0\u3057\u307e\u3059\uff01\n    "response"\n}\n')),(0,r.kt)("p",null,"\u3053\u306e\u305f\u3081\u3001CPU \u306b\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u3066\u3044\u306a\u3044\u9577\u3044\u64cd\u4f5c\uff08I/O\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u306a\u3069\uff09\u306f\u3001future \u307e\u305f\u306f\u975e\u540c\u671f\u95a2\u6570\u3068\u3057\u3066\u8868\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u975e\u540c\u671f\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u306b\u3088\u3063\u3066\u540c\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u3001\u5b9f\u884c\u3092\u30d6\u30ed\u30c3\u30af\u3057\u307e\u305b\u3093\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust",metastring:'title="\u826f\u3044\u4f8b"',title:'"\u826f\u3044\u4f8b"'},'async fn my_handler() -> impl Responder {\n    tokio::time::delay_for(Duration::from_secs(5)).await; // <-- Ok. \u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u306f\u3053\u3053\u3067\u4ed6\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3057\u307e\u3059\n    "response"\n}\n')),(0,r.kt)("p",null,"\u540c\u3058\u5236\u9650\u304c\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u3082\u9069\u7528\u3055\u308c\u307e\u3059\u3002\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"FromRequest")," \u3092\u5b9f\u88c5\u3059\u308b\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u5b9f\u88c5\u304c\u73fe\u5728\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3068\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u5b9f\u884c\u6642\u306b\u30ef\u30fc\u30ab\u30fc\u30b9\u30ec\u30c3\u30c9\u304c\u30d6\u30ed\u30c3\u30af\u3057\u307e\u3059\u3002\u3053\u306e\u305f\u3081\u3001\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u306f\u7279\u5225\u306a\u6ce8\u610f\u3092\u6255\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u975e\u540c\u671f\u3067\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"ssl"},"SSL"),(0,r.kt)("p",null,"SSL \u30b5\u30fc\u30d0\u30fc\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"rustls")," \u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"openssl")," \u306e2\u3064\u306e\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"rustls")," \u6a5f\u80fd\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"rustls")," \u7d71\u5408\u7528\u3067\u3042\u308a\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"openssl")," \u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"openssl")," \u7528\u3067\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nactix-web = { version = "3", features = ["openssl"] }\nopenssl = { version = "0.10" }\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, App, HttpRequest, HttpServer, Responder};\nuse openssl::ssl::{SslAcceptor, SslFiletype, SslMethod};\n\n#[get("/")]\nasync fn index(_req: HttpRequest) -> impl Responder {\n    "Welcome!"\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    // load ssl keys\n    // to create a self-signed temporary cert for testing:\n    // `openssl req -x509 -newkey rsa:4096 -nodes -keyout key.pem -out cert.pem -days 365 -subj \'/CN=localhost\'`\n    let mut builder =\n        SslAcceptor::mozilla_intermediate(SslMethod::tls()).unwrap();\n    builder\n        .set_private_key_file("key.pem", SslFiletype::PEM)\n        .unwrap();\n    builder.set_certificate_chain_file("cert.pem").unwrap();\n\n    HttpServer::new(|| App::new().service(index))\n        .bind_openssl("127.0.0.1:8080", builder)?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6ce8"),"\uff1aHTTP/2.0 \u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u306f ",(0,r.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7301"},"tls alpn")," \u304c\u5fc5\u8981\u3067\u3059\u3002\u73fe\u6642\u70b9\u3067\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"openssl")," \u306e\u307f\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"alpn")," \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u5b8c\u5168\u306a\u4f8b\u306b\u3064\u3044\u3066\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/examples/tree/master/security/openssl"},"examples/openssl")," \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"key.pem")," \u304a\u3088\u3073 ",(0,r.kt)("inlineCode",{parentName:"p"},"cert.pem")," \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3042\u306a\u305f\u81ea\u8eab\u306e\u4e3b\u984c\u3092\u8a18\u5165\u3057\u3066\u304f\u3060\u3055\u3044"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'$ openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem \\\n  -days 365 -sha256 -subj "/C=CN/ST=Fujian/L=Xiamen/O=TVlinux/OU=Org/CN=muro.lxd"\n')),(0,r.kt)("p",null,"\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"nopass.pem")," \u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"key.pem")," \u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ openssl rsa -in key.pem -out nopass.pem\n")),(0,r.kt)("h4",{id:"keep-alive"},"Keep-Alive"),(0,r.kt)("p",null,"Actix\u306f\u3001keep-alive \u63a5\u7d9a\u3067\u8981\u6c42\u3092\u5f85\u6a5f\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"keep-alive \u63a5\u7d9a\u306e\u52d5\u4f5c\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"75"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Some(75)"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"KeepAlive::Timeout(75)")," \u2014 75\u79d2\u306e ",(0,r.kt)("em",{parentName:"li"},"keep alive")," \u30bf\u30a4\u30de\u30fc\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"None")," \u307e\u305f\u306f ",(0,r.kt)("inlineCode",{parentName:"li"},"KeepAlive::Disabled")," \u2014 ",(0,r.kt)("em",{parentName:"li"},"keep alive")," \u3092\u7121\u52b9\u306b\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KeepAlive::Tcp(75)")," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"SO_KEEPALIVE")," \u30bd\u30b1\u30c3\u30c8\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{web, App, HttpResponse, HttpServer};\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    let one = HttpServer::new(|| {\n        App::new().route("/", web::get().to(|| HttpResponse::Ok()))\n    })\n    .keep_alive(75); // <- keep-alive \u3092 75 \u79d2\u306b\u8a2d\u5b9a\u3059\u308b\n\n    // let _two = HttpServer::new(|| {\n    //     App::new().route("/", web::get().to(|| HttpResponse::Ok()))\n    // })\n    // .keep_alive(); // <- `SO_KEEPALIVE` \u30bd\u30b1\u30c3\u30c8\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n    let _three = HttpServer::new(|| {\n        App::new().route("/", web::get().to(|| HttpResponse::Ok()))\n    })\n    .keep_alive(None); // <- keep-alive \u3092\u7121\u52b9\u306b\u3059\u308b\n\n    one.bind("127.0.0.1:8080")?.run().await\n}\n')),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u6700\u521d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30ad\u30fc\u30d7\u30a2\u30e9\u30a4\u30d6\u72b6\u614b\u306f\u5fdc\u7b54\u306e\u63a5\u7d9a\u30bf\u30a4\u30d7\u306b\u57fa\u3065\u3044\u3066\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001HttpResponse :: connection_type\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u306e\u5834\u5408\u3001keepalive\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306eHTTP\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"keep alive \u306f\u3001",(0,r.kt)("em",{parentName:"p"},"HTTP/1.0")," \u306e\u5834\u5408\u306f\u30aa\u30d5\u3067\u3001",(0,r.kt)("em",{parentName:"p"},"HTTP/1.1")," \u304a\u3088\u3073 ",(0,r.kt)("em",{parentName:"p"},"HTTP/2.0")," \u306e\u5834\u5408\u306f\u30aa\u30f3\u3067\u3059\u3002"),(0,r.kt)("p",null,"\u63a5\u7d9a\u30bf\u30a4\u30d7\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"HttpResponseBuilder::connection_type()")," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u5909\u66f4\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"use actix_web::{http, HttpRequest, HttpResponse};\n\nasync fn index(req: HttpRequest) -> HttpResponse {\n    HttpResponse::Ok()\n        .connection_type(http::ConnectionType::Close) // <- \u63a5\u7d9a\u3092\u9589\u3058\u308b\n        .force_close() // <- \u5225\u306e\u65b9\u6cd5\n        .finish()\n}\n")),(0,r.kt)("h4",{id:"\u512a\u96c5\u306a\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3"},"\u512a\u96c5\u306a\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HttpServer")," \u306f\u6b63\u5e38\u306a\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u505c\u6b62\u4fe1\u53f7\u3092\u53d7\u4fe1\u3057\u305f\u5f8c\u3001\u30ef\u30fc\u30ab\u30fc\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u3092\u5b8c\u4e86\u3059\u308b\u305f\u3081\u306b\u7279\u5b9a\u306e\u6642\u9593\u304c\u3042\u308a\u307e\u3059\u3002\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u5f8c\u3082\u307e\u3060\u751f\u304d\u3066\u3044\u308b\u30ef\u30fc\u30ab\u30fc\u306f\u5f37\u5236\u7684\u306b\u30c9\u30ed\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f30\u79d2\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpServer.html#method.shutdown_timeout"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpServer::shutdown_timeout()"))," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u5909\u66f4\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HttpServer")," \u306f\u3044\u304f\u3064\u304b\u306e OS \u4fe1\u53f7\u3092\u51e6\u7406\u3057\u307e\u3059\u3002",(0,r.kt)("em",{parentName:"p"},"CTRL-C")," \u306f\u3059\u3079\u3066\u306e OS \u3067\u4f7f\u7528\u3067\u304d\u3001\u4ed6\u306e\u4fe1\u53f7\u306f UNIX \u30b7\u30b9\u30c6\u30e0\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"SIGINT")," \u2014 \u5f37\u5236\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u30ef\u30fc\u30ab\u30fc"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"SIGTERM")," \u2014 \u512a\u96c5\u306a\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u30ef\u30fc\u30ab\u30fc"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"SIGOUT")," \u2014 \u5f37\u5236\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u30ef\u30fc\u30ab\u30fc")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpServer.html#method.disable_signals"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpServer::disable_signals()"))," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u4fe1\u53f7\u51e6\u7406\u3092\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc"},"\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc"),(0,r.kt)("p",null,"\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u62bd\u51fa\u3067\u304d\u308b0\u500b\u4ee5\u4e0a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\uff08\u3064\u307e\u308a\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.FromRequest.html"},(0,r.kt)("inlineCode",{parentName:"a"},"impl FromRequest")),"\uff09\u3092\u53d7\u3051\u5165\u308c\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpResponse.html"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpResponse"))," \u306b\u5909\u63db\u3067\u304d\u308b\u578b\uff08\u3064\u307e\u308a\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.Responder.html"},(0,r.kt)("inlineCode",{parentName:"a"},"impl Responder")),"\uff09\u3092\u8fd4\u3059\u975e\u540c\u671f\u95a2\u6570\u3067\u3059\u3002"),(0,r.kt)("p",null,"\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u306f2\u6bb5\u968e\u3067\u884c\u308f\u308c\u307e\u3059\u3002\u6700\u521d\u306b\u30cf\u30f3\u30c9\u30e9\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u547c\u3073\u51fa\u3055\u308c\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.Responder.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Responder"))," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\u6b21\u306b\u3001\u8fd4\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067 ",(0,r.kt)("inlineCode",{parentName:"p"},"respond_to()")," \u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u305d\u308c\u81ea\u4f53\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpResponse")," \u307e\u305f\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"Error")," \u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001actix-web \u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"&'static str"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"String")," \u306a\u3069\u306e\u3044\u304f\u3064\u304b\u306e\u6a19\u6e96\u578b\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Responder")," \u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u5b9f\u88c5\u306e\u5b8c\u5168\u306a\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.Responder.html#foreign-impls"},(0,r.kt)("inlineCode",{parentName:"a"},"Responder")," \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8")," \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("p",null,"\u6709\u52b9\u306a\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u4f8b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'async fn index(_req: HttpRequest) -> &\'static str {\n    "Hello world!"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'async fn index(_req: HttpRequest) -> String {\n    "Hello world!".to_owned()\n}\n')),(0,r.kt)("p",null,"\u30b7\u30b0\u30cb\u30c1\u30e3\u3092\u5909\u66f4\u3057\u3066\u3001\u3088\u308a\u8907\u96d1\u306a\u30bf\u30a4\u30d7\u304c\u542b\u307e\u308c\u308b\u5834\u5408\u306b\u9069\u5207\u306b\u6a5f\u80fd\u3059\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"impl Responder")," \u3092\u8fd4\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'async fn index(_req: HttpRequest) -> impl Responder {\n    web::Bytes::from_static(b"Hello world!")\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"async fn index(req: HttpRequest) -> Box<Future<Item=HttpResponse, Error=Error>> {\n    // ...\n}\n")),(0,r.kt)("h4",{id:"\u30ab\u30b9\u30bf\u30e0\u578b\u3067\u306e\u30ec\u30b9\u30dd\u30f3\u30b9"},"\u30ab\u30b9\u30bf\u30e0\u578b\u3067\u306e\u30ec\u30b9\u30dd\u30f3\u30b9"),(0,r.kt)("p",null,"\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u304b\u3089\u30ab\u30b9\u30bf\u30e0\u578b\u3092\u76f4\u63a5\u8fd4\u3059\u306b\u306f\u3001\u578b\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"Responder")," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"application/json")," \u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u30b7\u30ea\u30a2\u30eb\u5316\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u30bf\u30a4\u30d7\u306e\u5fdc\u7b54\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{Error, HttpRequest, HttpResponse, Responder};\nuse futures::future::{ready, Ready};\nuse serde::Serialize;\n\n#[derive(Serialize)]\nstruct MyObj {\n    name: &\'static str,\n}\n\n// Responder\nimpl Responder for MyObj {\n    type Error = Error;\n    type Future = Ready<Result<HttpResponse, Error>>;\n\n    fn respond_to(self, _req: &HttpRequest) -> Self::Future {\n        let body = serde_json::to_string(&self).unwrap();\n\n        // Create response and set content type\n        ready(Ok(HttpResponse::Ok()\n            .content_type("application/json")\n            .body(body)))\n    }\n}\n\nasync fn index() -> impl Responder {\n    MyObj { name: "user" }\n}\n')),(0,r.kt)("h4",{id:"\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3"},"\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3"),(0,r.kt)("p",null,"\u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3\u306f\u975e\u540c\u671f\u3067\u751f\u6210\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u30dc\u30c7\u30a3\u306f\u30b9\u30c8\u30ea\u30fc\u30e0\u30c8\u30ec\u30a4\u30c8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Stream <Item=Bytes, Error=Error>")," \u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3064\u307e\u308a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, App, Error, HttpResponse, HttpServer};\nuse futures::{future::ok, stream::once};\n\n#[get("/stream")]\nasync fn stream() -> HttpResponse {\n    let body = once(ok::<_, Error>(web::Bytes::from_static(b"test")));\n\n    HttpResponse::Ok()\n        .content_type("application/json")\n        .streaming(body)\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().service(stream))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("h4",{id:"\u7570\u306a\u308b\u8fd4\u308a\u5024\u578beither"},"\u7570\u306a\u308b\u8fd4\u308a\u5024\u578b\uff08",(0,r.kt)("inlineCode",{parentName:"h4"},"Either"),"\uff09"),(0,r.kt)("p",null,"\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u3001\u7570\u306a\u308b\u578b\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u3057\u3066\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u305f\u308a\u3001\u975e\u540c\u671f\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u305f\u308a\u30012\u3064\u306e\u7570\u306a\u308b\u578b\u3092\u5fc5\u8981\u3068\u3059\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"Result")," \u3092\u8fd4\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u3053\u306e\u5834\u5408\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/enum.Either.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Either"))," \u578b\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u3069\u3061\u3089\u3082\u30012\u3064\u306e\u7570\u306a\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"Responder")," \u578b\u30921\u3064\u306e\u578b\u306b\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{Either, Error, HttpResponse};\n\ntype RegisterResult = Either<HttpResponse, Result<&\'static str, Error>>;\n\nasync fn index() -> RegisterResult {\n    if is_a_variant() {\n        // <- \u30d0\u30ea\u30a2\u30f3\u30c8A \u3092\u9078\u629e\n        Either::A(HttpResponse::BadRequest().body("Bad data"))\n    } else {\n        // <- \u30d0\u30ea\u30a2\u30f3\u30c8B\n        Either::B(Ok("Hello!"))\n    }\n}\n')),(0,r.kt)("h3",{id:"extractors"},"\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf"),(0,r.kt)("p",null,"Actix-web \u306f\u3001\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\uff08\u3064\u307e\u308a\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"impl FromRequest"),"\uff09\u3068\u547c\u3070\u308c\u308b\u578b\u5b89\u5168\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u60c5\u5831\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001actix-web \u306f\u3044\u304f\u3064\u304b\u306e\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u306e\u5f15\u6570\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002Actix-web \u306f\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u3054\u3068\u306b\u6700\u592712\u500b\u306e\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u5f15\u6570\u306e\u4f4d\u7f6e\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'async fn index(path: web::Path<(String, String)>, json: web::Json<MyInfo>) -> impl Responder {\n    let path = path.into_inner();\n    format!("{} {} {} {}", path.0, path.1, json.id, json.username)\n}\n')),(0,r.kt)("h4",{id:"\u30d1\u30b9"},"\u30d1\u30b9"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/dev/struct.Path.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Path"))," \u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30b9\u304b\u3089\u62bd\u51fa\u3067\u304d\u308b\u60c5\u5831\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30d1\u30b9\u304b\u3089\u4efb\u610f\u306e\u5909\u6570\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u305f\u3068\u3048\u3070\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"/users/{user_id}/{friend}")," \u30d1\u30b9\u306b\u767b\u9332\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u5834\u5408\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"user_id")," \u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"friend")," \u306e2\u3064\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"touple"),"\u3001\u3064\u307e\u308a ",(0,r.kt)("inlineCode",{parentName:"p"},"Path<(u32\u3001String)>")," \u307e\u305f\u306f ",(0,r.kt)("em",{parentName:"p"},"serde")," \u30af\u30ec\u30fc\u30c8\u304b\u3089\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Deserialize")," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u4efb\u610f\u306e\u69cb\u9020\u306b\u62bd\u51fa\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, Result};\n\n/// \u300c/users/{user_id}/{friend}\u300dURL \u304b\u3089\u30d1\u30b9\u60c5\u5831\u3092\u62bd\u51fa\u3057\u307e\u3059\n/// {user_id} - u32 \u306b\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u307e\u3059\n/// {friend} - String \u306b\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u307e\u3059\n#[get("/users/{user_id}/{friend}")] // <- \u30d1\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\nasync fn index(web::Path((user_id, friend)): web::Path<(u32, String)>) -> Result<String> {\n    Ok(format!("Welcome {}, user_id {}!", friend, user_id))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{App, HttpServer};\n\n    HttpServer::new(|| App::new().service(index))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"serde")," \u304b\u3089 ",(0,r.kt)("inlineCode",{parentName:"p"},"Deserialize")," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u7279\u5b9a\u306e\u578b\u3078\u306e\u30d1\u30b9\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u30bf\u30d7\u30eb\u578b\u306e\u4ee3\u308f\u308a\u306b ",(0,r.kt)("em",{parentName:"p"},"serde")," \u3092\u4f7f\u7528\u3059\u308b\u540c\u7b49\u306e\u4f8b\u3067\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, Result};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Info {\n    user_id: u32,\n    friend: String,\n}\n\n/// serde\u3092\u4f7f\u7528\u3057\u3066\u30d1\u30b9\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\n#[get("/users/{user_id}/{friend}")] // <- \u30d1\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\nasync fn index(info: web::Path<Info>) -> Result<String> {\n    Ok(format!(\n        "Welcome {}, user_id {}!",\n        info.friend, info.user_id\n    ))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{App, HttpServer};\n\n    HttpServer::new(|| App::new().service(index))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,"\u30d1\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u540d\u524d\u3067 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," \u307e\u305f\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," \u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[get("/users/{userid}/{friend}")] // <- \u30d1\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\nasync fn index(req: HttpRequest) -> Result<String> {\n    let name: String = req.match_info().get("friend").unwrap().parse().unwrap();\n    let userid: i32 = req.match_info().query("userid").parse().unwrap();\n\n    Ok(format!("Welcome {}, userid {}!", name, userid))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{App, HttpServer};\n\n    HttpServer::new(|| App::new().service(index))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("h4",{id:"\u30af\u30a8\u30ea"},"\u30af\u30a8\u30ea"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.Query.html"},"Query")," \u578b\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u62bd\u51fa\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u305d\u306e\u4e0b\u306b\u306f ",(0,r.kt)("em",{parentName:"p"},"serde_urlencoded")," \u30af\u30ec\u30fc\u30c8\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, App, HttpServer};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Info {\n    username: String,\n}\n\n// \u3053\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u3001\u30af\u30a8\u30ea\u304c\u6b63\u5e38\u306b `Info` \u306b\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3055\u308c\u305f\u5834\u5408\u306b\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n// \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001400 BadRequest \u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3055\u308c\u307e\u3059\n#[get("/")]\nasync fn index(info: web::Query<Info>) -> String {\n    format!("Welcome {}!", info.username)\n}\n')),(0,r.kt)("h4",{id:"json"},"Json"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.Json.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Json"))," \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u672c\u6587\u3092\u69cb\u9020\u4f53\u306b\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3067\u304d\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u672c\u6587\u304b\u3089\u578b\u6307\u5b9a\u3055\u308c\u305f\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u306b\u306f\u3001\u578b ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," \u304c ",(0,r.kt)("em",{parentName:"p"},"serde")," \u304b\u3089 ",(0,r.kt)("inlineCode",{parentName:"p"},"Deserialize")," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, App, HttpServer, Result};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Info {\n    username: String,\n}\n\n/// \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u672c\u6587\u304b\u3089 `Info` \u3092\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u307e\u3059\n#[get("/")]\nasync fn index(info: web::Json<Info>) -> Result<String> {\n    Ok(format!("Welcome {}!", info.username))\n}\n')),(0,r.kt)("p",null,"\u4e00\u90e8\u306e\u62bd\u51fa\u6a5f\u80fd\u306f\u3001\u62bd\u51fa\u30d7\u30ed\u30bb\u30b9\u3092\u69cb\u6210\u3059\u308b\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u69cb\u6210\u3059\u308b\u306b\u306f\u3001\u305d\u306e\u69cb\u6210\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ea\u30bd\u30fc\u30b9\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},".data()")," \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u307e\u3059\u3002 Json \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5834\u5408\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.JsonConfig.html"},(0,r.kt)("inlineCode",{parentName:"a"},"JsonConfig"))," \u3092\u8fd4\u3057\u307e\u3059\u3002 JSON \u30da\u30a4\u30ed\u30fc\u30c9\u306e\u6700\u5927\u30b5\u30a4\u30ba\u3068\u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u3092\u69cb\u6210\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u6b21\u306e\u4f8b\u3067\u306f\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u30b5\u30a4\u30ba\u30924kb\u306b\u5236\u9650\u3057\u3001\u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{error, web, App, HttpResponse, HttpServer, Responder};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Info {\n    username: String,\n}\n\n/// \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u672c\u6587\u304b\u3089 `Info` \u3092\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u307e\u3059\u3002\u6700\u5927\u30da\u30a4\u30ed\u30fc\u30c9\u30b5\u30a4\u30ba\u306f4kb\u3067\u3059\u3002\nasync fn index(info: web::Json<Info>) -> impl Responder {\n    format!("Welcome {}!", info.username)\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        let json_config = web::JsonConfig::default()\n            .limit(4096)\n            .error_handler(|err, _req| {\n                // \u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\n                error::InternalError::from_response(err, HttpResponse::Conflict().finish()).into()\n            });\n\n        App::new().service(\n            web::resource("/")\n                // json \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u69cb\u6210\u3092\u5909\u66f4\u3059\u308b\n                .app_data(json_config)\n                .route(web::post().to(index)),\n        )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h4",{id:"\u30d5\u30a9\u30fc\u30e0"},"\u30d5\u30a9\u30fc\u30e0"),(0,r.kt)("p",null,"\u73fe\u6642\u70b9\u3067\u306f\u3001URL \u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30d5\u30a9\u30fc\u30e0\u306e\u307f\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002 URL \u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u672c\u6587\u306f\u3001\u7279\u5b9a\u306e\u578b\u306b\u62bd\u51fa\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u578b\u306f\u3001",(0,r.kt)("em",{parentName:"p"},"serde")," \u30af\u30ec\u30fc\u30c8\u304b\u3089\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Deserialize")," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.FormConfig.html"},(0,r.kt)("inlineCode",{parentName:"a"},"FormConfig"))," \u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u62bd\u51fa\u30d7\u30ed\u30bb\u30b9\u3092\u69cb\u6210\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{post, web, App, HttpServer, Result};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct FormData {\n    username: String,\n}\n\n/// serde \u3092\u4f7f\u7528\u3057\u3066\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3059\u308b\n/// \u3053\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u30bf\u30a4\u30d7\u304c *x-www-form-urlencoded* \u306e\u5834\u5408\u306b\u306e\u307f\u547c\u3073\u51fa\u3055\u308c\u3001\n/// \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5185\u5bb9\u306f `FormData` \u69cb\u9020\u4f53\u306b\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3067\u304d\u307e\u3059\n#[post("/")]\nasync fn index(form: web::Form<FormData>) -> Result<String> {\n    Ok(format!("Welcome {}!", form.username))\n}\n')),(0,r.kt)("h4",{id:"\u305d\u306e\u4ed6"},"\u305d\u306e\u4ed6"),(0,r.kt)("p",null,"Actix-web\u306b\u306f\u3001\u4ed6\u306b\u3082\u3044\u304f\u3064\u304b\u306e\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/web/struct.Data.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Data"))," \u2014 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"HttpRequest")," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"HttpRequest")," \u81ea\u4f53\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u81ea\u5df1\u3092\u8fd4\u3059\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"String")," \u2014 \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002",(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/trait.FromRequest.html#example-2"},(0,r.kt)("em",{parentName:"a"},"Example"))," \u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6587\u5b57\u5217\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"actix_web::web::Bytes")," \u2014 \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u30d0\u30a4\u30c8\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002",(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/trait.FromRequest.html#example-4"},"Example")," \u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6587\u5b57\u5217\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Payload")," \u2014 \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002",(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/web/struct.Payload.html"},"Example"))),(0,r.kt)("h4",{id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf"},"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf"),(0,r.kt)("p",null,"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"web::Data")," \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3057\u3066\u30cf\u30f3\u30c9\u30e9\u30fc\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u72b6\u614b\u306f\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u53c2\u7167\u3068\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\u72b6\u614b\u3078\u306e\u53ef\u5909\u30a2\u30af\u30bb\u30b9\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u3001\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"actix \u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3068\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u8907\u6570\u306e\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30b9\u30ec\u30c3\u30c9\u3054\u3068\u306b1\u3064\u306e\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u51e6\u7406\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u6570\u3092\u683c\u7d0d\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u4f8b\u3092\u6b21\u306b\u793a\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{web, Responder};\nuse std::cell::Cell;\n\n#[derive(Clone)]\nstruct AppState {\n    count: Cell<usize>,\n}\n\nasync fn show_count(data: web::Data<AppState>) -> impl Responder {\n    format!("count: {}", data.count.get())\n}\n\nasync fn add_one(data: web::Data<AppState>) -> impl Responder {\n    let count = data.count.get();\n    data.count.set(count + 1);\n\n    format!("count: {}", data.count.get())\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{App, HttpServer};\n\n    let data = AppState {\n        count: Cell::new(0),\n    };\n\n    HttpServer::new(move || {\n        App::new()\n            .data(data.clone())\n            .route("/", web::to(show_count))\n            .route("/add", web::to(add_one))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u3053\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u6a5f\u80fd\u3057\u307e\u3059\u304c\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"data.count")," \u306f\u5404\u30b9\u30ec\u30c3\u30c9\u306b\u3088\u3063\u3066\u51e6\u7406\u3055\u308c\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u6570\u306e\u307f\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u306b\u308f\u305f\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u7dcf\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Arc")," \u3068 ",(0,r.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/sync/atomic/"},(0,r.kt)("inlineCode",{parentName:"a"},"atomic"))," \u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, App, HttpServer, Responder};\nuse std::cell::Cell;\nuse std::sync::atomic::{AtomicUsize, Ordering};\nuse std::sync::Arc;\n\n#[derive(Clone)]\nstruct AppState {\n    local_count: Cell<usize>,\n    global_count: Arc<AtomicUsize>,\n}\n\n#[get("/")]\nasync fn show_count(data: web::Data<AppState>) -> impl Responder {\n    format!(\n        "global_count: {}\\nlocal_count: {}",\n        data.global_count.load(Ordering::Relaxed),\n        data.local_count.get()\n    )\n}\n\n#[get("/add")]\nasync fn add_one(data: web::Data<AppState>) -> impl Responder {\n    data.global_count.fetch_add(1, Ordering::Relaxed);\n\n    let local_count = data.local_count.get();\n    data.local_count.set(local_count + 1);\n\n    format!(\n        "global_count: {}\\nlocal_count: {}",\n        data.global_count.load(Ordering::Relaxed),\n        data.local_count.get()\n    )\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    let data = AppState {\n        local_count: Cell::new(0),\n        global_count: Arc::new(AtomicUsize::new(0)),\n    };\n\n    HttpServer::new(move || {\n        App::new()\n            .data(data.clone())\n            .service(show_count)\n            .service(add_one)\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u72b6\u614b\u5168\u4f53\u3092\u3059\u3079\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5171\u6709\u3059\u308b\u5834\u5408\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"#shared-mutable-state"},"\u5171\u6709\u3055\u308c\u305f\u53ef\u5909\u72b6\u614b")," \u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"web::Data")," \u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"app_data")," \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Mutex")," \u3084 ",(0,r.kt)("inlineCode",{parentName:"p"},"RwLock")," \u306a\u3069\u306e\u540c\u671f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306b\u306f\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"actix-web")," \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u975e\u540c\u671f\u3067\u51e6\u7406\u3057\u307e\u3059\u3002\u30b9\u30ec\u30c3\u30c9\u306e\u5b9f\u884c\u3092\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u3059\u3079\u3066\u306e\u540c\u6642\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u30d7\u30ed\u30bb\u30b9\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u3044\u304f\u3064\u304b\u306e\u72b6\u614b\u3092\u5171\u6709\u307e\u305f\u306f\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001tokio \u540c\u671f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306e\u4f7f\u7528\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("h2",{id:"\u9ad8\u5ea6"},"\u9ad8\u5ea6"),(0,r.kt)("h3",{id:"\u30a8\u30e9\u30fc"},"\u30a8\u30e9\u30fc"),(0,r.kt)("p",null,"Actix-web\u306f\u3001\u72ec\u81ea\u306e ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/error/struct.Error.html"},(0,r.kt)("inlineCode",{parentName:"a"},"actix_web::error::Error"))," \u578b\u3068 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/error/trait.ResponseError.html"},(0,r.kt)("inlineCode",{parentName:"a"},"actix_web::error::ResponseError"))," \u30c8\u30ec\u30a4\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3001Web \u30cf\u30f3\u30c9\u30e9\u30fc\u304b\u3089\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30cf\u30f3\u30c9\u30e9\u30fc\u304c ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.ResponseError.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ResponseError"))," \u30c8\u30ec\u30a4\u30c8\u3082\u5b9f\u88c5\u3059\u308b\u7d50\u679c\u3067\u30a8\u30e9\u30fc\uff08\u4e00\u822c\u7684\u306a Rust \u30c8\u30ec\u30a4\u30c8 ",(0,r.kt)("a",{parentName:"p",href:"https://doc.rust-lang.org/std/error/trait.Error.html"},(0,r.kt)("inlineCode",{parentName:"a"},"std::error::Error"))," \u3092\u53c2\u7167\uff09\u3092\u8fd4\u3059\u5834\u5408\u3001actix-web \u306f\u305d\u306e\u30a8\u30e9\u30fc\u3092\u5bfe\u5fdc\u3059\u308b ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/http/struct.StatusCode.html"},(0,r.kt)("inlineCode",{parentName:"a"},"actix_web::http::StatusCode"))," \u3092\u542b\u3080 HTTP \u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u5185\u90e8\u30b5\u30fc\u30d0\u30fc\u30a8\u30e9\u30fc\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"pub trait ResponseError {\n    fn error_response(&self) -> Response<Body>;\n    fn status_code(&self) -> StatusCode;\n}\n")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.Responder.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Responder"))," \u306f\u4e92\u63db\u6027\u306e\u3042\u308b\u7d50\u679c\u3092 HTTP \u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u5f37\u5236\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"impl<T: Responder, E: Into<Error>> Responder for Result<T, E>\n")),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306e\u30a8\u30e9\u30fc\u306f actix-web \u306e\u30a8\u30e9\u30fc\u5b9a\u7fa9\u3067\u3042\u308a\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.ResponseError.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ResponseError"))," \u3092\u5b9f\u88c5\u3059\u308b\u30a8\u30e9\u30fc\u306f\u3059\u3079\u3066\u81ea\u52d5\u7684\u306b1\u3064\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"Actix-web \u306f\u3001\u3044\u304f\u3064\u304b\u306e\u4e00\u822c\u7684\u306a\u975e actix \u30a8\u30e9\u30fc\u306b\u5bfe\u3059\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"ResponseError")," \u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"io::Error")," \u3067\u5fdc\u7b54\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u30a8\u30e9\u30fc\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpInternalServerError")," \u306b\u5909\u63db\u3055\u308c\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use std::io;\nuse actix_files::NamedFile;\n\nfn index(_req: HttpRequest) -> io::Result<NamedFile> {\n    Ok(NamedFile::open("static/index.html")?)\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ResponseError")," \u306e\u5916\u90e8\u5b9f\u88c5\u306e\u5b8c\u5168\u306a\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/error/trait.ResponseError.html#foreign-impls"},"actix-web API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8")," \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("h4",{id:"\u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4f8b"},"\u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4f8b"),(0,r.kt)("p",null,"\u3053\u308c\u306f\u3001\u5ba3\u8a00\u578b\u30a8\u30e9\u30fc\u5217\u6319\u578b\u306b ",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/derive_more"},"derive_more")," \u30af\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u305f ",(0,r.kt)("inlineCode",{parentName:"p"},"ResponseError")," \u306e\u5b9f\u88c5\u4f8b\u3067\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{error, Result};\nuse derive_more::{Display, Error};\n\n#[derive(Debug, Display, Error)]\n#[display(fmt = "my error: {}", name)]\nstruct MyError {\n    name: &\'static str,\n}\n\n// `error_response()` \u30e1\u30bd\u30c3\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\nimpl error::ResponseError for MyError {}\n\nasync fn index() -> Result<&\'static str, MyError> {\n    Err(MyError { name: "test" })\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ResponseError")," \u306b\u306f\u3001",(0,r.kt)("em",{parentName:"p"},"500")," (internal server error) \u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"error_response()")," \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"index")," \u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u4e0a\u8a18\u3067\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u306b\u767a\u751f\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"error_response()")," \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3001\u3088\u308a\u6709\u7528\u306a\u7d50\u679c\u3092\u751f\u6210\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{\n    dev::HttpResponseBuilder, error, get, http::header, http::StatusCode, App, HttpResponse,\n};\nuse derive_more::{Display, Error};\n\n#[derive(Debug, Display, Error)]\nenum MyError {\n    #[display(fmt = "internal error")]\n    InternalError,\n\n    #[display(fmt = "bad request")]\n    BadClientData,\n\n    #[display(fmt = "timeout")]\n    Timeout,\n}\n\nimpl error::ResponseError for MyError {\n    fn error_response(&self) -> HttpResponse {\n        HttpResponseBuilder::new(self.status_code())\n            .set_header(header::CONTENT_TYPE, "text/html; charset=utf-8")\n            .body(self.to_string())\n    }\n\n    fn status_code(&self) -> StatusCode {\n        match *self {\n            MyError::InternalError => StatusCode::INTERNAL_SERVER_ERROR,\n            MyError::BadClientData => StatusCode::BAD_REQUEST,\n            MyError::Timeout => StatusCode::GATEWAY_TIMEOUT,\n        }\n    }\n}\n\n#[get("/")]\nasync fn index() -> Result<&\'static str, MyError> {\n    Err(MyError::BadClientData)\n}\n')),(0,r.kt)("h4",{id:"\u30a8\u30e9\u30fc\u30d8\u30eb\u30d1\u30fc"},"\u30a8\u30e9\u30fc\u30d8\u30eb\u30d1\u30fc"),(0,r.kt)("p",null,"Actix-web \u306f\u3001\u4ed6\u306e\u30a8\u30e9\u30fc\u304b\u3089\u7279\u5b9a\u306e HTTP \u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u4e00\u9023\u306e\u30a8\u30e9\u30fc\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"map_err")," \u3092\u4f7f\u7528\u3057\u3066\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"ResponseError")," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044 MyError \u3092 ",(0,r.kt)("em",{parentName:"p"},"400")," (bad request) \u306b\u5909\u63db\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{error, get, App, HttpServer, Result};\n\n#[derive(Debug)]\nstruct MyError {\n    name: &\'static str,\n}\n\n#[get("/")]\nasync fn index() -> Result<&\'static str> {\n    let result: Result<&\'static str, MyError> = Err(MyError { name: "test error" });\n\n    Ok(result.map_err(|e| error::ErrorBadRequest(e.name))?)\n}\n')),(0,r.kt)("p",null,"\u5229\u7528\u53ef\u80fd\u306a\u30a8\u30e9\u30fc\u30d8\u30eb\u30d1\u30fc\u306e\u5b8c\u5168\u306a\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/error/struct.Error.html"},"actix-web\u306e ",(0,r.kt)("inlineCode",{parentName:"a"},"error")," \u30e2\u30b8\u30e5\u30fc\u30eb\u306eAPI\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8")," \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("h4",{id:"\u30a8\u30e9\u30fc\u30ed\u30b0"},"\u30a8\u30e9\u30fc\u30ed\u30b0"),(0,r.kt)("p",null,"Actix \u306f\u3001\u3059\u3079\u3066\u306e\u30a8\u30e9\u30fc\u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"WARN")," \u30ed\u30b0\u30ec\u30d9\u30eb\u3067\u30ed\u30b0\u306b\u8a18\u9332\u3057\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30b0\u30ec\u30d9\u30eb\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"DEBUG")," \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u3066\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"RUST_BACKTRACE")," \u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u30d0\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3082\u30ed\u30b0\u306b\u8a18\u9332\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u74b0\u5883\u5909\u6570\u3067\u69cb\u6210\u53ef\u80fd\u3067\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"$ RUST_BACKTRACE=1 RUST_LOG=actix_web=debug cargo run\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Error")," \u578b\u306f\u3001\u53ef\u80fd\u306a\u5834\u5408\u3001\u539f\u56e0\u306e\u30a8\u30e9\u30fc\u30d0\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u6839\u672c\u7684\u306a\u969c\u5bb3\u304c\u30d0\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u63d0\u4f9b\u3057\u306a\u3044\u5834\u5408\u3001\uff08\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u3067\u306f\u306a\u304f\uff09\u5909\u63db\u304c\u767a\u751f\u3057\u305f\u30dd\u30a4\u30f3\u30c8\u3092\u6307\u3059\u65b0\u3057\u3044\u30d0\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30a8\u30e9\u30fc\u51e6\u7406\u306e\u63a8\u5968\u30d7\u30e9\u30af\u30c6\u30a3\u30b9"},"\u30a8\u30e9\u30fc\u51e6\u7406\u306e\u63a8\u5968\u30d7\u30e9\u30af\u30c6\u30a3\u30b9"),(0,r.kt)("p",null,"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u751f\u6210\u3059\u308b\u30a8\u30e9\u30fc\u3092\u3001\u30e6\u30fc\u30b6\u30fc\u5411\u3051\u306e\u30a8\u30e9\u30fc\u3068\u305d\u3046\u3067\u306a\u3044\u30b0\u30eb\u30fc\u30d7\u306e2\u3064\u306e\u5927\u304d\u306a\u30b0\u30eb\u30fc\u30d7\u306b\u5206\u3051\u308b\u3053\u3068\u3092\u691c\u8a0e\u3059\u308b\u3068\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u524d\u8005\u306e\u4f8b\u306f\u3001\u5931\u6557\u3092\u4f7f\u7528\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u4e0d\u6b63\u306a\u5165\u529b\u3092\u9001\u4fe1\u3057\u305f\u3068\u304d\u306b\u8fd4\u3055\u308c\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"ValidationError")," \u3092\u30ab\u30d7\u30bb\u30eb\u5316\u3059\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"UserError")," \u5217\u6319\u578b\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{\n    dev::HttpResponseBuilder, error, get, http::header, http::StatusCode, App, HttpResponse,\n    HttpServer,\n};\nuse derive_more::{Display, Error};\n\n#[derive(Debug, Display, Error)]\nenum UserError {\n    #[display(fmt = "Validation error on field: {}", field)]\n    ValidationError { field: String },\n}\n\nimpl error::ResponseError for UserError {\n    fn error_response(&self) -> HttpResponse {\n        HttpResponseBuilder::new(self.status_code())\n            .set_header(header::CONTENT_TYPE, "text/html; charset=utf-8")\n            .body(self.to_string())\n    }\n    fn status_code(&self) -> StatusCode {\n        match *self {\n            UserError::ValidationError { .. } => StatusCode::BAD_REQUEST,\n        }\n    }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"display")," \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u8aad\u3080\u3053\u3068\u3092\u660e\u793a\u7684\u306b\u610f\u56f3\u3057\u3066\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u308c\u306f\u610f\u56f3\u3057\u305f\u3068\u304a\u308a\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u3057\u304b\u3057\u3001\u30a8\u30e9\u30fc\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u9001\u3059\u308b\u3053\u3068\u306f\u3001\u3059\u3079\u3066\u306e\u30a8\u30e9\u30fc\u306b\u3068\u3063\u3066\u671b\u307e\u3057\u3044\u3053\u3068\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30b5\u30fc\u30d0\u30fc\u74b0\u5883\u3067\u767a\u751f\u3059\u308b\u591a\u304f\u306e\u969c\u5bb3\u304c\u3042\u308a\u3001\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u8a73\u7d30\u3092\u96a0\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u30c0\u30a6\u30f3\u3057\u3066\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u63a5\u7d9a\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u30a8\u30e9\u30fc\u3092\u751f\u6210\u3057\u59cb\u3081\u305f\u5834\u5408\u3001\u307e\u305f\u306f HTML \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u4e0d\u9069\u5207\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3055\u308c\u3001\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u6642\u306b\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u6d88\u8cbb\u306b\u9069\u3057\u305f\u4e00\u822c\u7684\u306a\u30a8\u30e9\u30fc\u306b\u30a8\u30e9\u30fc\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u3053\u308c\u306f\u3001\u5185\u90e8\u30a8\u30e9\u30fc\u3092\u30ab\u30b9\u30bf\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f7f\u7528\u3057\u3066\u30e6\u30fc\u30b6\u30fc\u5411\u3051\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"InternalError")," \u306b\u30de\u30c3\u30d7\u3059\u308b\u4f8b\u3067\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{\n    dev::HttpResponseBuilder, error, get, http::header, http::StatusCode, App, HttpResponse,\n    HttpServer,\n};\nuse derive_more::{Display, Error};\n\n#[derive(Debug, Display, Error)]\nenum UserError {\n    #[display(fmt = "An internal error occurred. Please try again later.")]\n    InternalError,\n}\n\nimpl error::ResponseError for UserError {\n    fn error_response(&self) -> HttpResponse {\n        HttpResponseBuilder::new(self.status_code())\n            .set_header(header::CONTENT_TYPE, "text/html; charset=utf-8")\n            .body(self.to_string())\n    }\n    fn status_code(&self) -> StatusCode {\n        match *self {\n            UserError::InternalError => StatusCode::INTERNAL_SERVER_ERROR,\n        }\n    }\n}\n\n#[get("/")]\nasync fn index() -> Result<&\'static str, UserError> {\n    do_thing_that_fails().map_err(|_e| UserError::InternalError)?;\n    Ok("success!")\n}\n')),(0,r.kt)("p",null,"\u30a8\u30e9\u30fc\u3092\u30e6\u30fc\u30b6\u30fc\u304c\u76f4\u9762\u3057\u3066\u3044\u308b\u30a8\u30e9\u30fc\u3068\u305d\u3046\u3067\u306a\u3044\u30a8\u30e9\u30fc\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u610f\u56f3\u305b\u305a\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5185\u90e8\u304b\u3089\u30b9\u30ed\u30fc\u3055\u308c\u305f\u30a8\u30e9\u30fc\u306b\u8aa4\u3063\u3066\u3055\u3089\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30a8\u30e9\u30fc\u30ed\u30b0-1"},"\u30a8\u30e9\u30fc\u30ed\u30b0"),(0,r.kt)("p",null,"\u3053\u308c\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"env_logger")," \u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"log")," \u306b\u4f9d\u5b58\u3059\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"middleware::Logger")," \u3092\u4f7f\u7528\u3057\u305f\u57fa\u672c\u7684\u306a\u4f8b\u3067\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nenv_logger = "0.8"\nlog = "0.4"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{error, get, middleware::Logger, App, HttpServer, Result};\nuse derive_more::{Display, Error};\nuse log::info;\n\n#[derive(Debug, Display, Error)]\n#[display(fmt = "my error: {}", name)]\npub struct MyError {\n    name: &\'static str,\n}\n\n// Use default implementation for `error_response()` method\nimpl error::ResponseError for MyError {}\n\n#[get("/")]\nasync fn index() -> Result<&\'static str, MyError> {\n    let err = MyError { name: "test error" };\n    info!("{}", err);\n    Err(err)\n}\n\n#[rustfmt::skip]\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    std::env::set_var("RUST_LOG", "info");\n    std::env::set_var("RUST_BACKTRACE", "1");\n    env_logger::init();\n\n    HttpServer::new(|| {\n        let logger = Logger::default();\n\n        App::new()\n            .wrap(logger)\n            .service(index)\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h3",{id:"url-\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1"},"URL \u30c7\u30a3\u30b9\u30d1\u30c3\u30c1"),(0,r.kt)("p",null,"URL \u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u306f\u3001\u5358\u7d14\u306a\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u8a00\u8a9e\u3092\u4f7f\u7528\u3057\u3066 URL \u3092\u30cf\u30f3\u30c9\u30e9\u30fc\u30b3\u30fc\u30c9\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u7c21\u5358\u306a\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30d1\u30bf\u30fc\u30f3\u306e1\u3064\u304c\u8981\u6c42\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30d1\u30b9\u60c5\u5831\u3068\u4e00\u81f4\u3059\u308b\u5834\u5408\u3001\u7279\u5b9a\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u304b\u3089\u62bd\u51fa\u3067\u304d\u308b0\u500b\u4ee5\u4e0a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\uff08\u3064\u307e\u308a\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.FromRequest.html"},(0,r.kt)("inlineCode",{parentName:"a"},"impl FromRequest")),"\uff09\u3092\u53d7\u3051\u5165\u308c\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"HttpResponse")," \u306b\u5909\u63db\u3067\u304d\u308b\u30bf\u30a4\u30d7\uff08\u3064\u307e\u308a\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.Responder.html"},(0,r.kt)("inlineCode",{parentName:"a"},"impl Responder")),"\uff09\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"#%E3%83%AA%E3%82%AF%E3%82%A8%E3%82%B9%E3%83%88%E3%83%8F%E3%83%B3%E3%83%89%E3%83%A9%E3%83%BC"},"\u30cf\u30f3\u30c9\u30e9\u30fc\u30bb\u30af\u30b7\u30e7\u30f3"),"\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("h4",{id:"\u30ea\u30bd\u30fc\u30b9\u69cb\u6210"},"\u30ea\u30bd\u30fc\u30b9\u69cb\u6210"),(0,r.kt)("p",null,"\u30ea\u30bd\u30fc\u30b9\u69cb\u6210\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u65b0\u3057\u3044\u30ea\u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u884c\u70ba\u3067\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u306b\u306f\u540d\u524d\u304c\u3042\u308a\u3001URL \u751f\u6210\u306b\u4f7f\u7528\u3055\u308c\u308b\u8b58\u5225\u5b50\u3068\u3057\u3066\u6a5f\u80fd\u3057\u307e\u3059\u3002\u3053\u306e\u540d\u524d\u306b\u3088\u308a\u3001\u958b\u767a\u8005\u306f\u65e2\u5b58\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u30eb\u30fc\u30c8\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u306b\u306f\u3001URL\u306e ",(0,r.kt)("em",{parentName:"p"},"PATH")," \u90e8\u5206\uff08\u30b9\u30ad\u30fc\u30e0\u3068\u30dd\u30fc\u30c8\u306b\u7d9a\u304f\u90e8\u5206\u3001\u305f\u3068\u3048\u3070URL ",(0,r.kt)("em",{parentName:"p"},"http://localhost:8080/foo/bar?q=value")," \u306e /foo/bar\uff09\u3068\u7167\u5408\u3059\u308b\u3053\u3068\u3092\u76ee\u7684\u3068\u3057\u305f\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u308a\u307e\u3059\u3002",(0,r.kt)("em",{parentName:"p"},"QUERY")," \u90e8\u5206\uff08",(0,r.kt)("em",{parentName:"p"},"?")," \u306b\u7d9a\u304f\u90e8\u5206\u3001\u305f\u3068\u3048\u3070 ",(0,r.kt)("em",{parentName:"p"},"http://localhost:8080/foo/bar?q=value")," \u306e ",(0,r.kt)("em",{parentName:"p"},"q=value"),"\uff09\u3068\u306f\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.App.html#method.route"},(0,r.kt)("em",{parentName:"a"},"App::route()"))," \u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30eb\u30fc\u30c8\u3092\u767b\u9332\u3059\u308b\u7c21\u5358\u306a\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u306b\u5358\u4e00\u306e\u30eb\u30fc\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3001",(0,r.kt)("em",{parentName:"p"},"HTTP")," \u30e1\u30bd\u30c3\u30c9\u3001\u304a\u3088\u3073\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u3092\u53d7\u3051\u5165\u308c\u307e\u3059\u3002",(0,r.kt)("em",{parentName:"p"},"route()")," \u30e1\u30bd\u30c3\u30c9\u306f\u3001\u540c\u3058\u30d1\u30b9\u306b\u5bfe\u3057\u3066\u8907\u6570\u56de\u547c\u3073\u51fa\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u3001\u8907\u6570\u306e\u30eb\u30fc\u30c8\u304c\u540c\u3058\u30ea\u30bd\u30fc\u30b9\u30d1\u30b9\u306b\u5bfe\u3057\u3066\u767b\u9332\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{web, App, HttpResponse, HttpServer};\n\nasync fn index() -> HttpResponse {\n    HttpResponse::Ok().body("Hello")\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .route("/", web::get().to(index))\n            .route("/user", web::post().to(index))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"App::route()")," \u306f\u30eb\u30fc\u30c8\u3092\u767b\u9332\u3059\u308b\u7c21\u5358\u306a\u65b9\u6cd5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u304c\u3001\u5b8c\u5168\u306a\u30ea\u30bd\u30fc\u30b9\u69cb\u6210\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u5225\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"App::service()")," \u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5358\u4e00\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3001\u30ac\u30fc\u30c9\u3001\u304a\u3088\u30731\u3064\u4ee5\u4e0a\u306e\u30eb\u30fc\u30c8\u3092\u53d7\u3051\u5165\u308c\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{guard, web, App, HttpResponse};\n\nfn index() -> HttpResponse {\n    HttpResponse::Ok().body("Hello")\n}\n\npub fn main() {\n    App::new()\n        .service(web::resource("/prefix").to(index))\n        .service(\n            web::resource("/user/{name}")\n                .name("user_detail")\n                .guard(guard::Header("content-type", "application/json"))\n                .route(web::get().to(|| HttpResponse::Ok()))\n                .route(web::put().to(|| HttpResponse::Ok())),\n        );\n}\n')),(0,r.kt)("p",null,"\u30ea\u30bd\u30fc\u30b9\u306b\u30eb\u30fc\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u3001\u4e00\u81f4\u3059\u308b\u30eb\u30fc\u30c8\u304c\u306a\u3044\u5834\u5408\u3001",(0,r.kt)("em",{parentName:"p"},"NOT FOUND")," HTTP \u5fdc\u7b54\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30eb\u30fc\u30c8\u306e\u69cb\u6210"},"\u30eb\u30fc\u30c8\u306e\u69cb\u6210"),(0,r.kt)("p",null,"\u30ea\u30bd\u30fc\u30b9\u306b\u306f\u4e00\u9023\u306e\u30eb\u30fc\u30c8\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u5404\u30eb\u30fc\u30c8\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"guards")," \u3068\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u30bb\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\u65b0\u3057\u3044\u30eb\u30fc\u30c8\u306f\u3001\u65b0\u3057\u3044\u30eb\u30fc\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3078\u306e\u53c2\u7167\u3092\u8fd4\u3059 ",(0,r.kt)("inlineCode",{parentName:"p"},"Resource::route()")," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30eb\u30fc\u30c8\u306b\u306f\u30ac\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u3059\u3079\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u4e00\u81f4\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpNotFound")," \u3067\u3059\u3002"),(0,r.kt)("p",null,"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u30ea\u30bd\u30fc\u30b9\u767b\u9332\u304a\u3088\u3073\u30eb\u30fc\u30c8\u767b\u9332\u4e2d\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30eb\u30fc\u30c8\u57fa\u6e96\u306b\u57fa\u3065\u3044\u3066\u7740\u4fe1\u8981\u6c42\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Resource::route()")," \u3092\u4ecb\u3057\u3066\u30eb\u30fc\u30c8\u304c\u767b\u9332\u3055\u308c\u305f\u9806\u5e8f\u3067\u3001\u542b\u307e\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30eb\u30fc\u30c8\u3068\u4e00\u81f4\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30eb\u30fc\u30c8\u306b\u306f\u4efb\u610f\u306e\u6570\u306e\u30ac\u30fc\u30c9\u3092\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u306f1\u3064\u3060\u3051\u3067\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'App::new().service(\n    web::resource("/path").route(\n        web::route()\n            .guard(guard::Get())\n            .guard(guard::Header("content-type", "text/plain"))\n            .to(|| HttpResponse::Ok()),\n    ),\n)\n')),(0,r.kt)("p",null,"\u3053\u306e\u4f8b\u3067\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Type")," \u30d8\u30c3\u30c0\u30fc\u304c\u542b\u307e\u308c\u3001\u3053\u306e\u30d8\u30c3\u30c0\u30fc\u306e\u5024\u304c ",(0,r.kt)("em",{parentName:"p"},"text/plain")," \u3067\u3042\u308a\u3001\u30d1\u30b9\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"/path")," \u306b\u7b49\u3057\u3044\u5834\u5408\u3001",(0,r.kt)("em",{parentName:"p"},"GET")," \u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpResponse::Ok()")," \u304c\u8fd4\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30ea\u30bd\u30fc\u30b9\u304c\u3069\u306e\u30eb\u30fc\u30c8\u306b\u3082\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u3001\u300cNOT FOUND\u300d\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.Resource.html#method.route"},(0,r.kt)("inlineCode",{parentName:"a"},"ResourceHandler::route()"))," \u306f ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.Route.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Route"))," \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\u30eb\u30fc\u30c8\u306f\u30d3\u30eb\u30c0\u30fc\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u3067\u69cb\u6210\u3067\u304d\u307e\u3059\u3002\u6b21\u306e\u69cb\u6210\u65b9\u6cd5\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.Route.html#method.guard"},(0,r.kt)("inlineCode",{parentName:"a"},"Route::guard()"))," \u306f\u65b0\u3057\u3044\u30ac\u30fc\u30c9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\u30eb\u30fc\u30c8\u3054\u3068\u306b\u4efb\u610f\u306e\u6570\u306e\u8b66\u5099\u54e1\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.Route.html#method.method"},(0,r.kt)("inlineCode",{parentName:"a"},"Route::method()"))," \u306f\u30e1\u30bd\u30c3\u30c9\u30ac\u30fc\u30c9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\u30eb\u30fc\u30c8\u3054\u3068\u306b\u4efb\u610f\u306e\u6570\u306e\u8b66\u5099\u54e1\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web/3/actix_web/struct.Route.html#method.to"},(0,r.kt)("inlineCode",{parentName:"a"},"Route::to()"))," \u306f\u3001\u3053\u306e\u30eb\u30fc\u30c8\u306e\u975e\u540c\u671f\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u3092\u767b\u9332\u3057\u307e\u3059\u3002\u767b\u9332\u3067\u304d\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\u306f1\u3064\u3060\u3051\u3067\u3059\u3002\u901a\u5e38\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u306e\u767b\u9332\u306f\u6700\u5f8c\u306e\u69cb\u6210\u64cd\u4f5c\u3067\u3059\u3002")),(0,r.kt)("h4",{id:"\u30eb\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0"},"\u30eb\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0"),(0,r.kt)("p",null,"\u30eb\u30fc\u30c8\u69cb\u6210\u306e\u4e3b\u306a\u76ee\u7684\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"path")," \u3092 URL \u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3068\u4e00\u81f4\u3055\u305b\u308b\uff08\u307e\u305f\u306f\u4e00\u81f4\u3055\u305b\u306a\u3044\uff09\u3053\u3068\u3067\u3059\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"path")," \u306f\u3001\u8981\u6c42\u3055\u308c\u305f URL \u306e\u30d1\u30b9\u90e8\u5206\u3092\u8868\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"actix-web")," \u304c\u3053\u308c\u3092\u884c\u3046\u65b9\u6cd5\u306f\u975e\u5e38\u306b\u7c21\u5358\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u30b7\u30b9\u30c6\u30e0\u306b\u5165\u308b\u3068\u3001\u30b7\u30b9\u30c6\u30e0\u306b\u5b58\u5728\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u69cb\u6210\u5ba3\u8a00\u3054\u3068\u306b\u3001actix \u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d1\u30b9\u3092\u5ba3\u8a00\u3055\u308c\u305f\u30d1\u30bf\u30fc\u30f3\u3068\u7167\u5408\u3057\u307e\u3059\u3002\u3053\u306e\u30c1\u30a7\u30c3\u30af\u306f\u3001\u30eb\u30fc\u30c8\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"App::service()")," \u30e1\u30bd\u30c3\u30c9\u3092\u4ecb\u3057\u3066\u5ba3\u8a00\u3055\u308c\u305f\u9806\u5e8f\u3067\u884c\u308f\u308c\u307e\u3059\u3002\u30ea\u30bd\u30fc\u30b9\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u4e00\u81f4\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30eb\u30fc\u30c8\u69cb\u6210\u304c\u5ba3\u8a00\u3055\u308c\u308b\u3068\u3001\u30eb\u30fc\u30c8\u30ac\u30fc\u30c9\u5f15\u6570\u304c\u542b\u307e\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u30c1\u30a7\u30c3\u30af\u4e2d\u306b\u7279\u5b9a\u306e\u8981\u6c42\u306b\u30eb\u30fc\u30c8\u8a2d\u5b9a\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u30eb\u30fc\u30c8\u5ba3\u8a00\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30eb\u30fc\u30c8\u30ac\u30fc\u30c9\u304c ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," \u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30eb\u30fc\u30c8\u8a2d\u5b9a\u306b\u63d0\u4f9b\u3055\u308c\u305f\u30eb\u30fc\u30c8\u30ac\u30fc\u30c9\u5f15\u6570\u306e\u30bb\u30c3\u30c8\u5185\u306e\u3044\u305a\u308c\u304b\u306e\u30ac\u30fc\u30c9\u304c\u30c1\u30a7\u30c3\u30af\u4e2d\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," \u3092\u8fd4\u3059\u5834\u5408\u3001\u305d\u306e\u30eb\u30fc\u30c8\u306f\u30b9\u30ad\u30c3\u30d7\u3055\u308c\u3001\u30eb\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u306f\u9806\u5e8f\u4ed8\u3051\u3089\u308c\u305f\u30eb\u30fc\u30c8\u306e\u30bb\u30c3\u30c8\u3092\u4ecb\u3057\u3066\u7d9a\u884c\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u3044\u305a\u308c\u304b\u306e\u30eb\u30fc\u30c8\u304c\u4e00\u81f4\u3059\u308b\u3068\u3001\u30eb\u30fc\u30c8\u4e00\u81f4\u30d7\u30ed\u30bb\u30b9\u304c\u505c\u6b62\u3057\u3001\u30eb\u30fc\u30c8\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u304c\u4f7f\u3044\u679c\u305f\u3055\u308c\u305f\u5f8c\u3001\u4e00\u81f4\u3059\u308b\u30eb\u30fc\u30c8\u304c\u306a\u3044\u5834\u5408\u3001",(0,r.kt)("em",{parentName:"p"},"NOT FOUND")," \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30ea\u30bd\u30fc\u30b9\u30d1\u30bf\u30fc\u30f3\u306e\u69cb\u6587"},"\u30ea\u30bd\u30fc\u30b9\u30d1\u30bf\u30fc\u30f3\u306e\u69cb\u6587"),(0,r.kt)("p",null,"\u30d1\u30bf\u30fc\u30f3\u5f15\u6570\u3067 actix \u304c\u4f7f\u7528\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u8a00\u8a9e\u306e\u69cb\u6587\u306f\u5358\u7d14\u3067\u3059\u3002"),(0,r.kt)("p",null,"\u30eb\u30fc\u30c8\u69cb\u6210\u3067\u4f7f\u7528\u3055\u308c\u308b\u30d1\u30bf\u30fc\u30f3\u306f\u3001\u30b9\u30e9\u30c3\u30b7\u30e5\u6587\u5b57\u3067\u59cb\u307e\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30bf\u30fc\u30f3\u304c\u30b9\u30e9\u30c3\u30b7\u30e5\u6587\u5b57\u3067\u59cb\u307e\u3089\u306a\u3044\u5834\u5408\u3001\u4e00\u81f4\u3059\u308b\u6642\u9593\u306b\u6697\u9ed9\u306e\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u305d\u306e\u524d\u306b\u4ed8\u52a0\u3055\u308c\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u540c\u7b49\u3067\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{foo}/bar/baz\n")),(0,r.kt)("p",null,"\u307e\u305f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/{foo}/bar/baz\n")),(0,r.kt)("p",null,"\u53ef\u5909\u90e8\u5206\uff08\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\uff09\u306f ",(0,r.kt)("em",{parentName:"p"},"{identifier}")," \u306e\u5f62\u5f0f\u3067\u6307\u5b9a\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u300c\u6b21\u306e\u30b9\u30e9\u30c3\u30b7\u30e5\u6587\u5b57\u307e\u3067\u306e\u3059\u3079\u3066\u306e\u6587\u5b57\u3092\u53d7\u3051\u5165\u308c\u3001\u3053\u308c\u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpRequest.match_info()")," \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u540d\u524d\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u300d\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30d1\u30bf\u30fc\u30f3\u5185\u306e\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\u306f\u3001\u6b63\u898f\u8868\u73fe ",(0,r.kt)("inlineCode",{parentName:"p"},"[^{}/]+")," \u3068\u4e00\u81f4\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"match_info")," \u306f\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30d1\u30bf\u30fc\u30f3\u306b\u57fa\u3065\u3044\u3066 ",(0,r.kt)("em",{parentName:"p"},"URL")," \u304b\u3089\u62bd\u51fa\u3055\u308c\u305f\u52d5\u7684\u30d1\u30fc\u30c4\u3092\u8868\u3059 ",(0,r.kt)("inlineCode",{parentName:"p"},"Params")," \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"request.match_info")," \u3068\u3057\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u30011\u3064\u306e\u30ea\u30c6\u30e9\u30eb\u30bb\u30b0\u30e1\u30f3\u30c8\uff08foo\uff09\u30682\u3064\u306e\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\uff08baz\u3001\u304a\u3088\u3073 bar\uff09\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"foo/{baz}/{bar}\n")),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u3053\u308c\u3089\u306e URL \u3068\u4e00\u81f4\u3057\u3001\u6b21\u306e\u4e00\u81f4\u60c5\u5831\u3092\u751f\u6210\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"foo/1/2        -> Params {'baz':'1', 'bar':'2'}\nfoo/abc/def    -> Params {'baz':'abc', 'bar':'def'}\n")),(0,r.kt)("p",null,"\u305f\u3060\u3057\u3001\u6b21\u306e\u30d1\u30bf\u30fc\u30f3\u3068\u306f\u4e00\u81f4\u3057\u307e\u305b\u3093\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"foo/1/2/        -> No match (trailing slash)\nbar/abc/def     -> First segment literal mismatch\n")),(0,r.kt)("p",null,"\u30bb\u30b0\u30e1\u30f3\u30c8\u5185\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\u306e\u7167\u5408\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u5185\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u5185\u306e\u6700\u521d\u306e\u82f1\u6570\u5b57\u4ee5\u5916\u306e\u6587\u5b57\u307e\u3067\u306e\u307f\u884c\u308f\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u305f\u3068\u3048\u3070\u3001\u3053\u306e\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u304c\u4f7f\u7528\u3055\u308c\u305f\u5834\u5408\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"foo/{name}.html\n")),(0,r.kt)("p",null,"\u30ea\u30c6\u30e9\u30eb\u30d1\u30b9 ",(0,r.kt)("em",{parentName:"p"},"/foo/biz.html")," \u306f\u4e0a\u8a18\u306e\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u3068\u4e00\u81f4\u3057\u3001\u4e00\u81f4\u7d50\u679c\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"Params{'name': 'biz'}")," \u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u30ea\u30c6\u30e9\u30eb\u30d1\u30b9 ",(0,r.kt)("em",{parentName:"p"},"/foo/biz")," \u306f\u3001",(0,r.kt)("em",{parentName:"p"},"{name}.html")," \u3067\u8868\u3055\u308c\u308b\u30bb\u30b0\u30e1\u30f3\u30c8\u306e\u6700\u5f8c\u306b\u30ea\u30c6\u30e9\u30eb ",(0,r.kt)("em",{parentName:"p"},".html")," \u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u4e00\u81f4\u3057\u307e\u305b\u3093\uff08biz.html \u3067\u306f\u306a\u304f biz \u306e\u307f\u304c\u542b\u307e\u308c\u307e\u3059\uff09\u3002"),(0,r.kt)("p",null,"\u4e21\u65b9\u306e\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u306b\u306f\u30012\u3064\u306e\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"foo/{name}.{ext}\n")),(0,r.kt)("p",null,"\u30ea\u30c6\u30e9\u30eb\u30d1\u30b9 ",(0,r.kt)("em",{parentName:"p"},"/foo/biz.html")," \u306f\u4e0a\u8a18\u306e\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u3068\u4e00\u81f4\u3057\u3001\u4e00\u81f4\u7d50\u679c\u306f ",(0,r.kt)("em",{parentName:"p"},"Params{'name\u2019: \u2018biz\u2019, \u2018ext\u2019: \u2018html\u2019}")," \u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u306e\u30ea\u30c6\u30e9\u30eb\u90e8\u5206\u304c\u3042\u308b\u305f\u3081\u306b\u767a\u751f\u3057\u307e\u3059\u3002 \uff08\u30d4\u30ea\u30aa\u30c9\uff092\u3064\u306e\u7f6e\u63db\u30de\u30fc\u30ab\u30fc ",(0,r.kt)("em",{parentName:"p"},"{name}")," \u3068 ",(0,r.kt)("em",{parentName:"p"},"{ext}")," \u306e\u9593\u3002"),(0,r.kt)("p",null,"\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\u306f\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u30d1\u30b9\u30bb\u30b0\u30e1\u30f3\u30c8\u304c\u30de\u30fc\u30ab\u30fc\u3068\u4e00\u81f4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u6b63\u898f\u8868\u73fe\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\u304c\u6b63\u898f\u8868\u73fe\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u7279\u5b9a\u306e\u6587\u5b57\u30bb\u30c3\u30c8\u306e\u307f\u306b\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u306b\u306f\u3001\u308f\u305a\u304b\u306b\u62e1\u5f35\u3055\u308c\u305f\u5f62\u5f0f\u306e\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\u69cb\u6587\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4e2d\u62ec\u5f27\u5185\u3067\u306f\u3001\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\u540d\u306e\u5f8c\u306b\u30b3\u30ed\u30f3\u3092\u7d9a\u3051\u3001\u305d\u306e\u76f4\u5f8c\u306b\u6b63\u898f\u8868\u73fe\u3092\u7d9a\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7f6e\u63db\u30de\u30fc\u30ab\u30fc ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("sup",{parentName:"em",id:"fnref-/"},(0,r.kt)("a",{parentName:"sup",href:"#fn-/",className:"footnote-ref"},"/")))," +\u306b\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6b63\u898f\u8868\u73fe\u306f\u3001\u30b9\u30e9\u30c3\u30b7\u30e5\u3067\u306f\u306a\u30441\u3064\u4ee5\u4e0a\u306e\u6587\u5b57\u306b\u4e00\u81f4\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u5185\u90e8\u3067\u306f\u3001\u7f6e\u63db\u30de\u30fc\u30ab\u30fc{foo}\u3092\u3088\u308a\u8a73\u7d30\u306b ",(0,r.kt)("em",{parentName:"p"},"{foo:",(0,r.kt)("sup",{parentName:"em",id:"fnref-/"},(0,r.kt)("a",{parentName:"sup",href:"#fn-/",className:"footnote-ref"},"/")),"+}")," \u3068\u7db4\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u4efb\u610f\u306e\u6b63\u898f\u8868\u73fe\u306b\u5909\u66f4\u3057\u3066\u3001\u4efb\u610f\u306e\u6587\u5b57\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u4e00\u81f4\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001",(0,r.kt)("em",{parentName:"p"},"{foo:\\d+}")," \u306f\u6570\u5b57\u306e\u307f\u306b\u4e00\u81f4\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30bb\u30b0\u30e1\u30f3\u30c8\u7f6e\u63db\u30de\u30fc\u30ab\u30fc\u3068\u4e00\u81f4\u3055\u305b\u308b\u306b\u306f\u3001\u30bb\u30b0\u30e1\u30f3\u30c8\u306b\u5c11\u306a\u304f\u3068\u30821\u6587\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001URL ",(0,r.kt)("em",{parentName:"p"},"/abc/")," \u306e\u5834\u5408\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"/abc/{foo}")," \u306f\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("em",{parentName:"li"},"/{foo}/")," \u304c\u4e00\u81f4\u3057\u307e\u3059\u3002")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6ce8"),"\uff1a\u4e00\u81f4\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u306e\u524d\u306b\u3001\u30d1\u30b9\u306f URL \u3067\u5f15\u7528\u7b26\u3067\u56f2\u307e\u308c\u305a\u3001\u6709\u52b9\u306a unicode \u6587\u5b57\u5217\u306b\u30c7\u30b3\u30fc\u30c9\u3055\u308c\u3001\u4e00\u81f4\u3059\u308b\u30d1\u30b9\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u8868\u3059\u5024\u3082 URL \u3067\u5f15\u7528\u7b26\u3067\u56f2\u307e\u308c\u307e\u305b\u3093\u3002"),(0,r.kt)("p",null,"\u3057\u305f\u304c\u3063\u3066\u3001\u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"foo/{bar}\n")),(0,r.kt)("p",null,"\u6b21\u306eURL\u306b\u4e00\u81f4\u3059\u308b\u5834\u5408\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"http://example.com/foo/La%20Pe%C3%B1a\n")),(0,r.kt)("p",null,"\u4e00\u81f4\u8f9e\u66f8\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff08\u5024\u306fURL\u3067\u30c7\u30b3\u30fc\u30c9\u3055\u308c\u307e\u3059\uff09\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Params{'bar': 'La Pe\\xf1a'}\n")),(0,r.kt)("p",null,"\u30d1\u30b9\u30bb\u30b0\u30e1\u30f3\u30c8\u5185\u306e\u30ea\u30c6\u30e9\u30eb\u6587\u5b57\u5217\u306f\u3001actix\u306b\u63d0\u4f9b\u3055\u308c\u305f\u30d1\u30b9\u306e\u30c7\u30b3\u30fc\u30c9\u3055\u308c\u305f\u5024\u3092\u8868\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30d1\u30bf\u30fc\u30f3\u3067URL\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u5024\u3092\u4f7f\u7528\u3057\u305f\u304f\u306a\u3044\u3002\u305f\u3068\u3048\u3070\u3001\u3053\u308c\u3067\u306f\u306a\u304f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/Foo%20Bar/{baz}\n")),(0,r.kt)("p",null,"\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"/Foo Bar/{baz}\n")),(0,r.kt)("p",null,"\u300c\u30c6\u30fc\u30eb\u30de\u30c3\u30c1\u300d\u304c\u53ef\u80fd\u3067\u3059\u3002\u3053\u306e\u76ee\u7684\u306e\u305f\u3081\u306b\u3001\u30ab\u30b9\u30bf\u30e0\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"foo/{bar}/{tail:.*}\n")),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u3053\u308c\u3089\u306eURL\u3068\u4e00\u81f4\u3057\u3001\u6b21\u306e\u4e00\u81f4\u60c5\u5831\u3092\u751f\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"foo/1/2/           -> Params{'bar':'1', 'tail': '2/'}\nfoo/abc/def/a/b/c  -> Params{'bar':u'abc', 'tail': 'def/a/b/c'}\n")),(0,r.kt)("h4",{id:"\u30b9\u30b3\u30fc\u30d7\u30eb\u30fc\u30c8"},"\u30b9\u30b3\u30fc\u30d7\u30eb\u30fc\u30c8"),(0,r.kt)("p",null,"\u30b9\u30b3\u30fc\u30d7\u306f\u3001\u5171\u901a\u306e\u30eb\u30fc\u30c8\u30d1\u30b9\u3092\u5171\u6709\u3059\u308b\u30eb\u30fc\u30c8\u3092\u6574\u7406\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u30b9\u30b3\u30fc\u30d7\u3092\u30b9\u30b3\u30fc\u30d7\u5185\u306b\u30cd\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u300c\u30e6\u30fc\u30b6\u30fc\u300d\u306e\u8868\u793a\u306b\u4f7f\u7528\u3055\u308c\u308b\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3078\u306e\u30d1\u30b9\u3092\u6574\u7406\u3059\u308b\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30d1\u30b9\u306b\u306f\u3001\u6b21\u306e\u3082\u306e\u304c\u542b\u307e\u308c\u307e\u3059\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"/users"),(0,r.kt)("li",{parentName:"ul"},"/users/show"),(0,r.kt)("li",{parentName:"ul"},"/users/show/{id}")),(0,r.kt)("p",null,"\u3053\u308c\u3089\u306e\u30d1\u30b9\u306e\u30b9\u30b3\u30fc\u30d7\u30ec\u30a4\u30a2\u30a6\u30c8\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[get("/show")]\nasync fn show_users() -> HttpResponse {\n    HttpResponse::Ok().body("Show users")\n}\n\n#[get("/show/{id}")]\nasync fn user_detail(path: web::Path<(u32,)>) -> HttpResponse {\n    HttpResponse::Ok().body(format!("User detail: {}", path.into_inner().0))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new().service(\n            web::scope("/users")\n                .service(show_users)\n                .service(user_detail),\n        )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u30b9\u30b3\u30fc\u30d7\u30d1\u30b9\u306b\u306f\u3001\u53ef\u5909\u30d1\u30b9\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b9\u30b3\u30fc\u30d7\u3055\u308c\u3066\u3044\u306a\u3044\u30d1\u30b9\u3068\u4e00\u81f4\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HttpRequest::match_info()")," \u304b\u3089\u53ef\u5909\u30d1\u30b9\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002",(0,r.kt)("a",{parentName:"p",href:"#extractors"},(0,r.kt)("inlineCode",{parentName:"a"},"Path")," \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf")," \u306f\u3001\u30b9\u30b3\u30fc\u30d7\u30ec\u30d9\u30eb\u306e\u5909\u6570\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30de\u30c3\u30c1\u60c5\u5831"},"\u30de\u30c3\u30c1\u60c5\u5831"),(0,r.kt)("p",null,"\u4e00\u81f4\u3057\u305f\u30d1\u30b9\u30bb\u30b0\u30e1\u30f3\u30c8\u3092\u8868\u3059\u3059\u3079\u3066\u306e\u5024\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpRequest.html#method.match_info"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpRequest::match_info"))," \u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u7279\u5b9a\u306e\u5024\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/dev/struct.Path.html#method.get"},(0,r.kt)("inlineCode",{parentName:"a"},"Path::get()"))," \u3092\u4f7f\u7528\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, App, HttpRequest, HttpServer, Result};\n\n#[get("/a/{v1}/{v2}/")]\nasync fn index(req: HttpRequest) -> Result<String> {\n    let v1: u8 = req.match_info().get("v1").unwrap().parse().unwrap();\n    let v2: u8 = req.match_info().query("v2").parse().unwrap();\n    let (v3, v4): (u8, u8) = req.match_info().load().unwrap();\n    Ok(format!("Values {} {} {} {}", v1, v2, v3, v4))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().service(index))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,"\u30d1\u30b9\u300c/a/1/2/\u300d\u306e\u3053\u306e\u4f8b\u3067\u306f\u3001\u5024 v1 \u3068 v2 \u306f\u300c1\u300d\u3068\u300c2\u300d\u306b\u89e3\u6c7a\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30d1\u30b9\u60c5\u5831\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf"},"\u30d1\u30b9\u60c5\u5831\u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf"),(0,r.kt)("p",null,"Actix \u306f\u3001\u578b\u5b89\u5168\u306a\u30d1\u30b9\u60c5\u5831\u62bd\u51fa\u306e\u305f\u3081\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/dev/struct.Path.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Path"))," \u306f\u60c5\u5831\u3092\u62bd\u51fa\u3057\u3001\u5b9b\u5148\u306e\u578b\u306f\u3044\u304f\u3064\u304b\u306e\u7570\u306a\u308b\u5f62\u5f0f\u3067\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u6700\u3082\u7c21\u5358\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u306f\u3001\u30bf\u30d7\u30eb\u578b\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u30bf\u30d7\u30eb\u306e\u5404\u8981\u7d20\u306f\u3001\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u306e1\u3064\u306e\u8981\u7d20\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3 ",(0,r.kt)("inlineCode",{parentName:"p"},"/{id}/{username}/")," \u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"Path<(u32, String)>")," \u578b\u3068\u7167\u5408\u3067\u304d\u307e\u3059\u304c\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Path<(String, String, String)>")," \u578b\u306f\u5e38\u306b\u5931\u6557\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, App, HttpServer, Result};\n\n#[get("/{username}/{id}/index.html")] // <- \u30d1\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\nasync fn index(info: web::Path<(String, u32)>) -> Result<String> {\n    let info = info.into_inner();\n    Ok(format!("Welcome {}! id: {}", info.0, info.1))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().service(index))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,"\u69cb\u9020\u4f53\u3078\u306e\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u3053\u306e\u69cb\u9020\u4f53\u306f ",(0,r.kt)("em",{parentName:"p"},"serde")," \u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Deserialize")," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, App, HttpServer, Result};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Info {\n    username: String,\n}\n\n// serde \u3092\u4f7f\u7528\u3057\u3066\u30d1\u30b9\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\n#[get("/{username}/index.html")] // <- \u30d1\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\nasync fn index(info: web::Path<Info>) -> Result<String> {\n    Ok(format!("Welcome {}!", info.username))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().service(index))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.Query.html"},"Query")," \u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u540c\u69d8\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30ea\u30bd\u30fc\u30b9url\u306e\u751f\u6210"},"\u30ea\u30bd\u30fc\u30b9URL\u306e\u751f\u6210"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpRequest.html#method.url_for"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpRequest.url_for()"))," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ea\u30bd\u30fc\u30b9\u30d1\u30bf\u30fc\u30f3\u306b\u57fa\u3065\u3044\u3066 URL \u3092\u751f\u6210\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u540d\u524d\u304c\u300cfoo\u300d\u3067\u30d1\u30bf\u30fc\u30f3\u304c\u300c{a}/{b}/{c}\u300d\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u69cb\u6210\u3057\u305f\u5834\u5408\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, guard, http::header, HttpRequest, HttpResponse, Result};\n\n#[get("/test/")]\nasync fn index(req: HttpRequest) -> Result<HttpResponse> {\n    let url = req.url_for("foo", &["1", "2", "3"])?; // <- \u300cfoo\u300d\u30ea\u30bd\u30fc\u30b9\u306eURL\u3092\u751f\u6210\u3057\u307e\u3059\n\n    Ok(HttpResponse::Found()\n        .header(header::LOCATION, url.as_str())\n        .finish())\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| {\n        App::new()\n            .service(\n                web::resource("/test/{a}/{b}/{c}")\n                    .name("foo") // <- \u30ea\u30bd\u30fc\u30b9\u540d\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001`url_for`\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059\n                    .guard(guard::Get())\n                    .to(|| HttpResponse::Ok()),\n            )\n            .service(index)\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u3053\u308c\u306f\u3001\u6587\u5b57\u5217\u300c",(0,r.kt)("a",{parentName:"p",href:"http://example.com/test/1/2/3%E3%80%8D%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E3%82%82%E3%81%AE%E3%82%92%E8%BF%94%E3%81%97%E3%81%BE%E3%81%99%EF%BC%88%E5%B0%91%E3%81%AA%E3%81%8F%E3%81%A8%E3%82%82%E3%80%81%E7%8F%BE%E5%9C%A8%E3%81%AE%E3%83%97%E3%83%AD%E3%83%88%E3%82%B3%E3%83%AB%E3%81%A8%E3%83%9B%E3%82%B9%E3%83%88%E5%90%8D%E3%81%8C%E3%80%8Chttp://example.com%E3%80%8D%E3%82%92%E6%9A%97%E7%A4%BA%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B%E5%A0%B4%E5%90%88%EF%BC%89%E3%80%82"},"http://example.com/test/1/2/3\u300d\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\uff08\u5c11\u306a\u304f\u3068\u3082\u3001\u73fe\u5728\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30db\u30b9\u30c8\u540d\u304c\u300chttp://example.com\u300d\u3092\u6697\u793a\u3057\u3066\u3044\u308b\u5834\u5408\uff09\u3002")," ",(0,r.kt)("inlineCode",{parentName:"p"},"url_for()")," \u30e1\u30bd\u30c3\u30c9\u306f  ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/url/*/url/struct.Url.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Url"))," \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u305f\u3081\u3001\u3053\u306eURL\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\uff08\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3001\u30a2\u30f3\u30ab\u30fc\u306a\u3069\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\uff09\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"url_for()")," \u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u306e\u307f\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305d\u3046\u3057\u306a\u3044\u3068\u3001\u30a8\u30e9\u30fc\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u5916\u90e8\u30ea\u30bd\u30fc\u30b9"},"\u5916\u90e8\u30ea\u30bd\u30fc\u30b9"),(0,r.kt)("p",null,"\u6709\u52b9\u306a URL \u3067\u3042\u308b\u30ea\u30bd\u30fc\u30b9\u306f\u3001\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u767b\u9332\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3089\u306f URL \u751f\u6210\u306e\u76ee\u7684\u3067\u306e\u307f\u6709\u7528\u3067\u3042\u308a\u3001\u8981\u6c42\u6642\u306b\u7167\u5408\u3059\u308b\u3053\u3068\u3092\u8003\u616e\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, App, HttpRequest, HttpServer, Responder};\n\n#[get("/")]\nasync fn index(req: HttpRequest) -> impl Responder {\n    let url = req.url_for("youtube", &["oHg5SJYRHA0"]).unwrap();\n    assert_eq!(url.as_str(), "https://youtube.com/watch/oHg5SJYRHA0");\n\n    url.into_string()\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .service(index)\n            .external_resource("youtube", "https://youtube.com/watch/{video_id}")\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h4",{id:"\u30d1\u30b9\u306e\u6b63\u898f\u5316\u3068\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30eb\u30fc\u30c8\u3078\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8"},"\u30d1\u30b9\u306e\u6b63\u898f\u5316\u3068\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30eb\u30fc\u30c8\u3078\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8"),(0,r.kt)("p",null,"\u6b63\u898f\u5316\u3059\u308b\u3068\u306f\u3001\u6b21\u306e\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u30d1\u30b9\u306b\u672b\u5c3e\u306e\u30b9\u30e9\u30c3\u30b7\u30e5\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u8907\u6570\u306e\u30b9\u30e9\u30c3\u30b7\u30e5\u30921\u3064\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002")),(0,r.kt)("p",null,"\u30cf\u30f3\u30c9\u30e9\u30fc\u306f\u3001\u6b63\u3057\u304f\u89e3\u6c7a\u3055\u308c\u308b\u30d1\u30b9\u3092\u898b\u3064\u3051\u308b\u3068\u3059\u3050\u306b\u623b\u308a\u307e\u3059\u3002\u6b63\u898f\u5316\u6761\u4ef6\u306e\u9806\u5e8f\u306f\u3001\u3059\u3079\u3066\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u30011\uff09\u30de\u30fc\u30b8\u30012\uff09\u30de\u30fc\u30b8\u3068\u8ffd\u52a0\u306e\u4e21\u65b9\u3001\u304a\u3088\u30733\uff09\u8ffd\u52a0\u3067\u3059\u3002\u30d1\u30b9\u304c\u3053\u308c\u3089\u306e\u6761\u4ef6\u306e\u5c11\u306a\u304f\u3068\u30821\u3064\u3067\u89e3\u6c7a\u3055\u308c\u308b\u3068\u3001\u65b0\u3057\u3044\u30d1\u30b9\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{middleware, HttpResponse};\n\nasync fn index() -> HttpResponse {\n    HttpResponse::Ok().body("Hello")\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::NormalizePath::default())\n            .route("/resource/", web::to(index))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u3053\u306e\u4f8b\u3067\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"//resource///")," \u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"/resource/")," \u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u3053\u306e\u4f8b\u3067\u306f\u3001\u30d1\u30b9\u6b63\u898f\u5316\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001",(0,r.kt)("em",{parentName:"p"},"POST")," \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u305f\u3081\u306b\u3053\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u30b9\u30e9\u30c3\u30b7\u30e5\u304c\u8ffd\u52a0\u3055\u308c\u305f ",(0,r.kt)("em",{parentName:"p"},"Not Found")," \u3092\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3068\u3001",(0,r.kt)("em",{parentName:"p"},"POST")," \u30ea\u30af\u30a8\u30b9\u30c8\u304c GET \u306b\u5909\u308f\u308a\u3001\u5143\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306e ",(0,r.kt)("em",{parentName:"p"},"POST")," \u30c7\u30fc\u30bf\u304c\u5931\u308f\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30d1\u30b9\u306e\u6b63\u898f\u5316\u306f\u3001",(0,r.kt)("em",{parentName:"p"},"GET")," \u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u306e\u307f\u767b\u9332\u3067\u304d\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, http::Method, middleware, web, App, HttpServer};\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::NormalizePath::default())\n            .service(index)\n            .default_service(web::route().method(Method::GET))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h4",{id:"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210"},"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"web::scope()")," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u7279\u5b9a\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b3\u30fc\u30d7\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30b9\u30b3\u30fc\u30d7\u306f\u3001\u30ea\u30bd\u30fc\u30b9\u69cb\u6210\u306b\u3088\u3063\u3066\u8ffd\u52a0\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u30d1\u30bf\u30fc\u30f3\u306e\u524d\u306b\u4ed8\u52a0\u3055\u308c\u308b\u30ea\u30bd\u30fc\u30b9\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u8868\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u540c\u3058\u30ea\u30bd\u30fc\u30b9\u540d\u3092\u7dad\u6301\u3057\u306a\u304c\u3089\u3001\u542b\u307e\u308c\u3066\u3044\u308b\u547c\u3073\u51fa\u3057\u53ef\u80fd\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u8005\u304c\u610f\u56f3\u3057\u305f\u3082\u306e\u3068\u306f\u7570\u306a\u308b\u5834\u6240\u306b\u4e00\u9023\u306e\u30eb\u30fc\u30c8\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u4f8b\u3048\u3070\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[get("/show")]\nasync fn show_users() -> HttpResponse {\n    HttpResponse::Ok().body("Show users")\n}\n\n#[get("/show/{id}")]\nasync fn user_detail(path: web::Path<(u32,)>) -> HttpResponse {\n    HttpResponse::Ok().body(format!("User detail: {}", path.into_inner().0))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new().service(\n            web::scope("/users")\n                .service(show_users)\n                .service(user_detail),\n        )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b9\u30b3\u30fc\u30d7\u304c\u30d1\u30bf\u30fc\u30f3\u306e\u524d\u306b\u8ffd\u52a0\u3055\u308c\u308b\u305f\u3081\u3001",(0,r.kt)("em",{parentName:"p"},"show_users")," \u30eb\u30fc\u30c8\u306e\u6709\u52b9\u306a\u30eb\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u306f ",(0,r.kt)("em",{parentName:"p"},"/show")," \u3067\u306f\u306a\u304f ",(0,r.kt)("em",{parentName:"p"},"/users/show")," \u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001\u30eb\u30fc\u30c8\u306f URL \u30d1\u30b9\u304c ",(0,r.kt)("em",{parentName:"p"},"/users/show")," \u306e\u5834\u5408\u306b\u306e\u307f\u4e00\u81f4\u3057\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"HttpRequest.url_for()")," \u95a2\u6570\u304c\u30eb\u30fc\u30c8\u540d show_users \u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u3001\u540c\u3058\u30d1\u30b9\u306eURL\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30ab\u30b9\u30bf\u30e0\u30eb\u30fc\u30c8\u30ac\u30fc\u30c9"},"\u30ab\u30b9\u30bf\u30e0\u30eb\u30fc\u30c8\u30ac\u30fc\u30c9"),(0,r.kt)("p",null,"\u30ac\u30fc\u30c9\u306f\u3001\u8981\u6c42\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u53c2\u7167\u3092\u53d7\u3051\u5165\u308c\u3001",(0,r.kt)("em",{parentName:"p"},"true")," \u307e\u305f\u306f ",(0,r.kt)("em",{parentName:"p"},"false")," \u3092\u8fd4\u3059\u5358\u7d14\u306a\u95a2\u6570\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u6b63\u5f0f\u306b\u306f\u3001\u30ac\u30fc\u30c9\u306f ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/guard/trait.Guard.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Guard"))," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002 Actix \u306f\u3044\u304f\u3064\u304b\u306e\u8ff0\u8a9e\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/guard/index.html#functions"},"\u95a2\u6570\u30bb\u30af\u30b7\u30e7\u30f3")," \u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u7279\u5b9a\u306e\u30d8\u30c3\u30c0\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u7c21\u5358\u306a\u30ac\u30fc\u30c9\u3092\u6b21\u306b\u793a\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{dev::RequestHead, guard::Guard, http, HttpResponse};\n\nstruct ContentTypeHeader;\n\nimpl Guard for ContentTypeHeader {\n    fn check(&self, req: &RequestHead) -> bool {\n        req.headers().contains_key(http::header::CONTENT_TYPE)\n    }\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| {\n        App::new().route(\n            "/",\n            web::route()\n                .guard(ContentTypeHeader)\n                .to(|| HttpResponse::Ok()),\n        )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u3053\u306e\u4f8b\u3067\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306b ",(0,r.kt)("em",{parentName:"p"},"CONTENT-TYPE")," \u30d8\u30c3\u30c0\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306b\u306e\u307f\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30ac\u30fc\u30c9\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u308a\u5909\u66f4\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpRequest.html#method.extensions"},"\u30ea\u30af\u30a8\u30b9\u30c8\u62e1\u5f35\u6a5f\u80fd")," \u306b\u8ffd\u52a0\u60c5\u5831\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30ac\u30fc\u30c9\u5024\u306e\u5909\u66f4"},"\u30ac\u30fc\u30c9\u5024\u306e\u5909\u66f4"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Not")," \u8ff0\u8a9e\u3067\u30e9\u30c3\u30d7\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u4efb\u610f\u306e\u8ff0\u8a9e\u5024\u306e\u610f\u5473\u3092\u9006\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u300cGET\u300d\u3092\u9664\u304f\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u3057\u3066\u300cMETHOD NOT ALLOWED\u300d\u5fdc\u7b54\u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{guard, web, App, HttpResponse, HttpServer};\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new().route(\n            "/",\n            web::route()\n                .guard(guard::Not(guard::Get()))\n                .to(|| HttpResponse::MethodNotAllowed()),\n        )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Any")," \u30ac\u30fc\u30c9\u306f\u3001\u63d0\u4f9b\u3055\u308c\u305f\u30ac\u30fc\u30c9\u306e\u3044\u305a\u308c\u304b\u304c\u4e00\u81f4\u3059\u308b\u5834\u5408\u3001\u30ac\u30fc\u30c9\u3068\u4e00\u81f4\u306e\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u5165\u308c\u307e\u3059\u3002\u5373\u3061\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"guard::Any(guard::Get()).or(guard::Post())\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"All")," \u306e\u30ac\u30fc\u30c9\u306f\u30ac\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u5165\u308c\u3001\u63d0\u4f9b\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30ac\u30fc\u30c9\u304c\u4e00\u81f4\u3059\u308b\u5834\u5408\u306b\u4e00\u81f4\u3057\u307e\u3059\u3002\u5373\u3061\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'guard::All(guard::Get()).and(guard::Header("content-type", "plain/text"))\n')),(0,r.kt)("h4",{id:"\u30c7\u30d5\u30a9\u30eb\u30c8\u306e-not-found-\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5909\u66f4"},"\u30c7\u30d5\u30a9\u30eb\u30c8\u306e Not Found \u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5909\u66f4"),(0,r.kt)("p",null,"\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u304c\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u3067\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408\u3001\u307e\u305f\u306f\u30ea\u30bd\u30fc\u30b9\u304c\u4e00\u81f4\u3059\u308b\u30eb\u30fc\u30c8\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ea\u30bd\u30fc\u30b9\u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306f ",(0,r.kt)("em",{parentName:"p"},"NOT FOUND")," \u3067\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"App::default_service()")," \u3092\u4f7f\u7528\u3057\u3066 ",(0,r.kt)("em",{parentName:"p"},"NOT FOUND")," \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"App::service()")," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u305f\u901a\u5e38\u306e\u30ea\u30bd\u30fc\u30b9\u69cb\u6210\u3068\u540c\u3058\u69cb\u6210\u95a2\u6570\u3092\u53d7\u3051\u5165\u308c\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .service(web::resource("/").route(web::get().to(index)))\n            .default_service(\n                web::route()\n                    .guard(guard::Not(guard::Get()))\n                    .to(|| HttpResponse::MethodNotAllowed()),\n            )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h3",{id:"\u30ea\u30af\u30a8\u30b9\u30c8"},"\u30ea\u30af\u30a8\u30b9\u30c8"),(0,r.kt)("h4",{id:"\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0"},"\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0"),(0,r.kt)("p",null,"Actix-web \u306f\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u81ea\u52d5\u7684\u306b\u89e3\u51cd\u3057\u307e\u3059\u3002\u6b21\u306e\u30b3\u30fc\u30c7\u30c3\u30af\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Brotli"),(0,r.kt)("li",{parentName:"ul"},"Chunked"),(0,r.kt)("li",{parentName:"ul"},"Compress"),(0,r.kt)("li",{parentName:"ul"},"Gzip"),(0,r.kt)("li",{parentName:"ul"},"Deflate"),(0,r.kt)("li",{parentName:"ul"},"Identity"),(0,r.kt)("li",{parentName:"ul"},"Trailers"),(0,r.kt)("li",{parentName:"ul"},"EncodingExt")),(0,r.kt)("p",null,"\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u30fc\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Encoding")," \u30d8\u30c3\u30c0\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u306f\u30d8\u30c3\u30c0\u30fc\u5024\u306b\u5f93\u3063\u3066\u89e3\u51cd\u3055\u308c\u307e\u3059\u3002\u8907\u6570\u306e\u30b3\u30fc\u30c7\u30c3\u30af\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Content-Encoding: br,gzip"),"\u3067\u3059\u3002"),(0,r.kt)("h4",{id:"json-\u30ea\u30af\u30a8\u30b9\u30c8"},"JSON \u30ea\u30af\u30a8\u30b9\u30c8"),(0,r.kt)("p",null,"json \u672c\u4f53\u306e\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u306b\u306f\u3044\u304f\u3064\u304b\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u6700\u521d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001Json \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u6700\u521d\u306b\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Json<T>")," \u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3068\u3057\u3066\u53d7\u3051\u5165\u308c\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3001\u6b21\u306b ",(0,r.kt)("inlineCode",{parentName:"p"},".to()")," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3053\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u767b\u9332\u3057\u307e\u3059\u3002\u30bf\u30a4\u30d7T\u3068\u3057\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"serde_json::Value")," \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u4efb\u610f\u306e\u6709\u52b9\u306a json \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d7\u3051\u5165\u308c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"JSON Request")," \u306e json \u306e\u6700\u521d\u306e\u4f8b\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"serde")," \u306b\u4f9d\u5b58\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nserde = "1"\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"JSON Request")," \u306e2\u756a\u76ee\u306e\u4f8b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"serde")," \u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"serde_json")," \u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nserde = "1"\nserde_json = "1"\n')),(0,r.kt)("p",null,"\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"serde")," \u306e ",(0,r.kt)("a",{parentName:"p",href:"https://serde.rs/attr-default.html"},"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8")," \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{web, App, HttpServer, Result};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct Info {\n    username: String,\n}\n\n/// serde \u3092\u4f7f\u7528\u3057\u3066 `Info` \u3092\u62bd\u51fa\u3057\u307e\u3059\nasync fn index(info: web::Json<Info>) -> Result<String> {\n    Ok(format!("Welcome {}!", info.username))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().route("/", web::post().to(index)))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,"\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u624b\u52d5\u3067\u30e1\u30e2\u30ea\u306b\u30ed\u30fc\u30c9\u3057\u3066\u304b\u3089\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u6b21\u306e\u4f8b\u3067\u306f\u3001",(0,r.kt)("em",{parentName:"p"},"MyObj")," \u69cb\u9020\u4f53\u3092\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3057\u307e\u3059\u3002\u6700\u521d\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u3092\u30ed\u30fc\u30c9\u3057\u3066\u304b\u3089\u3001json \u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{error, post, web, App, Error, HttpResponse};\nuse futures::StreamExt;\nuse serde::{Deserialize, Serialize};\n\n#[derive(Serialize, Deserialize)]\nstruct MyObj {\n    name: String,\n    number: i32,\n}\n\nconst MAX_SIZE: usize = 262_144; // \u6700\u5927\u30da\u30a4\u30ed\u30fc\u30c9\u30b5\u30a4\u30ba\u306f 256k \u3067\u3059\n\n#[post("/")]\nasync fn index_manual(mut payload: web::Payload) -> Result<HttpResponse, Error> {\n    // \u30da\u30a4\u30ed\u30fc\u30c9\u306f Bytes \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u3059\n    let mut body = web::BytesMut::new();\n    while let Some(chunk) = payload.next().await {\n        let chunk = chunk?;\n        // \u30a4\u30f3\u30e1\u30e2\u30ea\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u6700\u5927\u30b5\u30a4\u30ba\u3092\u5236\u9650\u3059\u308b\n        if (body.len() + chunk.len()) > MAX_SIZE {\n            return Err(error::ErrorBadRequest("overflow"));\n        }\n        body.extend_from_slice(&chunk);\n    }\n\n    // \u30dc\u30c7\u30a3\u304c\u8aad\u307f\u8fbc\u307e\u308c\u3001serde-json \u3092\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\n    let obj = serde_json::from_slice::<MyObj>(&body)?;\n    Ok(HttpResponse::Ok().json(obj)) // <- \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u9001\u4fe1\u3059\u308b\n}\n')),(0,r.kt)("p",null,"\u4e21\u65b9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5b8c\u5168\u306a\u4f8b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/examples/tree/master/json/json"},"examples \u30c7\u30a3\u30ec\u30af\u30c8\u30ea")," \u306b\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30c1\u30e3\u30f3\u30af\u8ee2\u9001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0"},"\u30c1\u30e3\u30f3\u30af\u8ee2\u9001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0"),(0,r.kt)("p",null,"Actix \u306f\u3001\u30c1\u30e3\u30f3\u30af\u5316\u3055\u308c\u305f\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u81ea\u52d5\u7684\u306b\u30c7\u30b3\u30fc\u30c9\u3057\u307e\u3059\u3002",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.Payload.html"},(0,r.kt)("inlineCode",{parentName:"a"},"web::Payload"))," \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u306f\u3001\u30c7\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30d0\u30a4\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u3059\u3067\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5727\u7e2e\u30b3\u30fc\u30c7\u30c3\u30af\uff08br\u3001gzip\u3001deflate\uff09\u306e\u3044\u305a\u308c\u304b\u3067\u8981\u6c42\u30da\u30a4\u30ed\u30fc\u30c9\u304c\u5727\u7e2e\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30d0\u30a4\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306f\u89e3\u51cd\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"url-\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30dc\u30c7\u30a3"},"URL \u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30dc\u30c7\u30a3"),(0,r.kt)("p",null,"Actix-web \u306f\u3001\u9006\u30b7\u30ea\u30a2\u30eb\u5316\u3055\u308c\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u89e3\u6c7a\u3055\u308c\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"web::Form")," \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3057\u3066 ",(0,r.kt)("em",{parentName:"p"},"application / x-www-form-urlencoded")," \u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u305f\u30dc\u30c7\u30a3\u306e\u30b5\u30dd\u30fc\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u578b\u306f\u3001serde\u304b\u3089\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Deserialize")," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"UrlEncoded")," \u306e\u5c06\u6765\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u5834\u5408\u306b\u30a8\u30e9\u30fc\u306b\u89e3\u6c7a\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u30b3\u30f3\u30c6\u30f3\u30c4\u30bf\u30a4\u30d7\u306f ",(0,r.kt)("inlineCode",{parentName:"li"},"application/x-www-form-urlencoded")," \u3067\u306f\u3042\u308a\u307e\u305b\u3093"),(0,r.kt)("li",{parentName:"ul"},"\u8ee2\u9001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f ",(0,r.kt)("inlineCode",{parentName:"li"},"cunked")," \u3067\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},"content-length \u304c 256k \u3092\u8d85\u3048\u3066\u3044\u307e\u3059"),(0,r.kt)("li",{parentName:"ul"},"\u30da\u30a4\u30ed\u30fc\u30c9\u306f\u30a8\u30e9\u30fc\u3067\u7d42\u4e86\u3057\u307e\u3059\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{post, web, HttpResponse};\nuse serde::Deserialize;\n\n#[derive(Deserialize)]\nstruct FormData {\n    username: String,\n}\n\n#[post("/")]\nasync fn index(form: web::Form<FormData>) -> HttpResponse {\n    HttpResponse::Ok().body(format!("username: {}", form.username))\n}\n')),(0,r.kt)("h4",{id:"\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30ea\u30af\u30a8\u30b9\u30c8"},"\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30ea\u30af\u30a8\u30b9\u30c8"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"HttpRequest")," \u306f\u3001Bytes \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u8aad\u307f\u53d6\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u6b21\u306e\u4f8b\u3067\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u30c1\u30e3\u30f3\u30af\u3054\u3068\u306b\u8aad\u307f\u53d6\u3063\u3066\u51fa\u529b\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, Error, HttpResponse};\nuse futures::StreamExt;\n\n#[get("/")]\nasync fn index(mut body: web::Payload) -> Result<HttpResponse, Error> {\n    let mut bytes = web::BytesMut::new();\n    while let Some(item) = body.next().await {\n        let item = item?;\n        println!("Chunk: {:?}", &item);\n        bytes.extend_from_slice(&item);\n    }\n\n    Ok(HttpResponse::Ok().finish())\n}\n')),(0,r.kt)("h3",{id:"\u30ec\u30b9\u30dd\u30f3\u30b9"},"\u30ec\u30b9\u30dd\u30f3\u30b9"),(0,r.kt)("p",null,"\u30d3\u30eb\u30c0\u30fc\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u3066\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"HttpResponse")," \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"HttpResponse")," \u306f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u3055\u307e\u3056\u307e\u306a\u4fbf\u5229\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/dev/struct.HttpResponseBuilder.html"},(0,r.kt)("inlineCode",{parentName:"a"},"HttpResponseBuilder"))," \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u3044\u304f\u3064\u304b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30e1\u30bd\u30c3\u30c9 ",(0,r.kt)("inlineCode",{parentName:"p"},".body"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},".finish"),"\u3001\u304a\u3088\u3073 ",(0,r.kt)("inlineCode",{parentName:"p"},".json")," \u306f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4f5c\u6210\u3092\u5b8c\u4e86\u3057\u3001\u69cb\u7bc9\u3055\u308c\u305f ",(0,r.kt)("em",{parentName:"p"},"HttpResponse")," \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3057\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u540c\u3058\u30d3\u30eb\u30c0\u30fc\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u8907\u6570\u56de\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\u3001\u30d3\u30eb\u30c0\u30fc\u306f\u30d1\u30cb\u30c3\u30af\u306b\u306a\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::HttpResponse;\n\nasync fn index() -> HttpResponse {\n    HttpResponse::Ok()\n        .content_type("text/plain")\n        .header("X-Hdr", "sample")\n        .body("data")\n}\n')),(0,r.kt)("h4",{id:"\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0-1"},"\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0"),(0,r.kt)("p",null,"Actix-web \u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/middleware/struct.Compress.html"},"Compress \u30df\u30c9\u30eb\u30a6\u30a7\u30a2")," \u3092\u4f7f\u7528\u3057\u3066\u30da\u30a4\u30ed\u30fc\u30c9\u3092\u81ea\u52d5\u7684\u306b\u5727\u7e2e\u3067\u304d\u307e\u3059\u3002\u6b21\u306e\u30b3\u30fc\u30c7\u30c3\u30af\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Brotli"),(0,r.kt)("li",{parentName:"ul"},"Gzip"),(0,r.kt)("li",{parentName:"ul"},"Deflate"),(0,r.kt)("li",{parentName:"ul"},"Identity")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, middleware, App, HttpResponse, HttpServer};\n\n#[get("/")]\nasync fn index_br() -> HttpResponse {\n    HttpResponse::Ok().body("data")\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::Compress::default())\n            .service(index_br)\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u30ec\u30b9\u30dd\u30f3\u30b9\u30da\u30a4\u30ed\u30fc\u30c9\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"middleware::BodyEncoding")," \u30c8\u30ec\u30a4\u30c8\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u57fa\u3065\u3044\u3066\u5727\u7e2e\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Auto")," \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Auto")," \u304c\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u5727\u7e2e\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Accept-Encoding")," \u30d8\u30c3\u30c0\u30fc\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Identity")," \u3092\u4f7f\u7528\u3057\u3066\u3001\u5727\u7e2e\u3092\u7121\u52b9\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5225\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u305d\u306e\u30b3\u30fc\u30c7\u30c3\u30af\u306b\u5727\u7e2e\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u305f\u3068\u3048\u3070\u3001\u5358\u4e00\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u306b\u5bfe\u3057\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"brotli")," \u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Br")," \u3092\u4f7f\u7528\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{\n    dev::BodyEncoding, get, http::ContentEncoding, middleware, App, HttpResponse, HttpServer,\n};\n\n#[get("/")]\nasync fn index_br() -> HttpResponse {\n    HttpResponse::Ok()\n        .encoding(ContentEncoding::Br)\n        .body("data")\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::Compress::default())\n            .service(index_br)\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u307e\u305f\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u306e\u5834\u5408\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{http::ContentEncoding, dev::BodyEncoding, HttpResponse};\n\nasync fn index_br() -> HttpResponse {\n    HttpResponse::Ok().body("data")\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{middleware, web, App, HttpServer};\n\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::Compress::new(ContentEncoding::Br))\n            .route("/", web::get().to(index_br))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u3053\u306e\u5834\u5408\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"Identity")," \u5024\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u5727\u7e2e\u3092\u660e\u793a\u7684\u306b\u7121\u52b9\u306b\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{\n    dev::BodyEncoding, get, http::ContentEncoding, middleware, App, HttpResponse, HttpServer,\n};\n\n#[get("/")]\nasync fn index() -> HttpResponse {\n    HttpResponse::Ok()\n        // v- \u5727\u7e2e\u3092\u7121\u52b9\u306b\u3059\u308b\n        .encoding(ContentEncoding::Identity)\n        .body("data")\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::Compress::default())\n            .service(index)\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u3059\u3067\u306b\u5727\u7e2e\u3055\u308c\u305f\u672c\u6587\u3092\u51e6\u7406\u3059\u308b\u5834\u5408\uff08\u305f\u3068\u3048\u3070\u3001\u30a2\u30bb\u30c3\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u5834\u5408\uff09\u3001\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"Identity")," \u306b\u8a2d\u5b9a\u3057\u3066\u3001\u3059\u3067\u306b\u5727\u7e2e\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u5727\u7e2e\u3092\u56de\u907f\u3057\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"content-encoding")," \u30d8\u30c3\u30c0\u30fc\u3092\u624b\u52d5\u3067\u8a2d\u5b9a\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{\n    dev::BodyEncoding, get, http::ContentEncoding, middleware, App, HttpResponse, HttpServer,\n};\n\nstatic HELLO_WORLD: &[u8] = &[\n    0x1f, 0x8b, 0x08, 0x00, 0xa2, 0x30, 0x10, 0x5c, 0x00, 0x03, 0xcb, 0x48, 0xcd, 0xc9, 0xc9, 0x57,\n    0x28, 0xcf, 0x2f, 0xca, 0x49, 0xe1, 0x02, 0x00, 0x2d, 0x3b, 0x08, 0xaf, 0x0c, 0x00, 0x00, 0x00,\n];\n\n#[get("/")]\nasync fn index() -> HttpResponse {\n    HttpResponse::Ok()\n        .encoding(ContentEncoding::Identity)\n        .header("content-encoding", "gzip")\n        .body(HELLO_WORLD)\n}\n')),(0,r.kt)("p",null,"\u307e\u305f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"ContentEncoding::Auto")," \u304c\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u81ea\u52d5\u30b3\u30f3\u30c6\u30f3\u30c4\u5727\u7e2e\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u610f\u5473\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, http::ContentEncoding, middleware, App, HttpResponse, HttpServer};\n\n#[get("/")]\nasync fn index() -> HttpResponse {\n    HttpResponse::Ok().body("data")\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::Compress::new(ContentEncoding::Br))\n            .service(index)\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h4",{id:"json-\u30ec\u30b9\u30dd\u30f3\u30b9"},"JSON \u30ec\u30b9\u30dd\u30f3\u30b9"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Json")," \u578b\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u6574\u5f62\u5f0f\u306e JSON \u30c7\u30fc\u30bf\u3067\u5fdc\u7b54\u3067\u304d\u307e\u3059\u3002\u578b ",(0,r.kt)("inlineCode",{parentName:"p"},"Json<T>")," \u306e\u5024\u3092\u8fd4\u3059\u3060\u3051\u3067\u3059\u3002\u3053\u3053\u3067\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"T")," \u306f ",(0,r.kt)("em",{parentName:"p"},"JSON")," \u306b\u30b7\u30ea\u30a2\u30eb\u5316\u3059\u308b\u69cb\u9020\u306e\u30bf\u30a4\u30d7\u3067\u3059\u3002\u578b ",(0,r.kt)("inlineCode",{parentName:"p"},"T")," \u306f\u3001",(0,r.kt)("em",{parentName:"p"},"serde")," \u304b\u3089\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Serialize")," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{get, web, HttpResponse, Result};\nuse serde::{Deserialize, Serialize};\n\n#[derive(Serialize, Deserialize)]\nstruct MyObj {\n    name: String,\n}\n\n#[get("/a/{name}")]\nasync fn index(obj: web::Path<MyObj>) -> Result<HttpResponse> {\n    Ok(HttpResponse::Ok().json(MyObj {\n        name: obj.name.to_string(),\n    }))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{App, HttpServer};\n\n    HttpServer::new(|| App::new().service(index))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("h3",{id:"\u30c6\u30b9\u30c8"},"\u30c6\u30b9\u30c8"),(0,r.kt)("p",null,"\u3059\u3079\u3066\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u5341\u5206\u306b\u30c6\u30b9\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 Actix-web \u306f\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3068\u7d71\u5408\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u5358\u4f53\u30c6\u30b9\u30c8\u306e\u5834\u5408\u3001actix-web \u306f\u30ea\u30af\u30a8\u30b9\u30c8\u30d3\u30eb\u30c0\u30fc\u30bf\u30a4\u30d7\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/test/struct.TestRequest.html"},(0,r.kt)("inlineCode",{parentName:"a"},"TestRequest"))," \u306f\u3001\u30d3\u30eb\u30c0\u30fc\u306e\u3088\u3046\u306a\u30d1\u30bf\u30fc\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"to_http_request()")," \u3092\u4f7f\u7528\u3057\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpRequest")," \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u3092\u4f7f\u7528\u3057\u3066\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[cfg(test)]\nmod tests {\n    use super::*;\n    use actix_web::{http, test};\n\n    #[actix_rt::test]\n    async fn test_index_ok() {\n        let req = test::TestRequest::with_header("content-type", "text/plain").to_http_request();\n        let resp = index(req).await;\n        assert_eq!(resp.status(), http::StatusCode::OK);\n    }\n\n    #[actix_rt::test]\n    async fn test_index_not_ok() {\n        let req = test::TestRequest::default().to_http_request();\n        let resp = index(req).await;\n        assert_eq!(resp.status(), http::StatusCode::BAD_REQUEST);\n    }\n}\n')),(0,r.kt)("h4",{id:"\u7d71\u5408\u30c6\u30b9\u30c8"},"\u7d71\u5408\u30c6\u30b9\u30c8"),(0,r.kt)("p",null,"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002 Actix-web \u3092\u4f7f\u7528\u3057\u3066\u3001\u5b9f\u969b\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u3067\u7279\u5b9a\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TestRequest::get()"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"TestRequest::post()"),"\u3001\u304a\u3088\u3073\u305d\u306e\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u30c6\u30b9\u30c8\u30b5\u30fc\u30d0\u30fc\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30c6\u30b9\u30c8\u7528\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Service")," \u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u901a\u5e38\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"App")," \u30d3\u30eb\u30c0\u30fc\u3092\u53d7\u3051\u5165\u308c\u308b ",(0,r.kt)("inlineCode",{parentName:"p"},"test::init_service")," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/test/index.html"},"API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8")," \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[cfg(test)]\nmod tests {\n    use super::*;\n    use actix_web::{test, web, App};\n\n    #[actix_rt::test]\n    async fn test_index_get() {\n        let mut app = test::init_service(App::new().route("/", web::get().to(index))).await;\n        let req = test::TestRequest::with_header("content-type", "text/plain").to_request();\n        let resp = test::call_service(&mut app, req).await;\n        assert!(resp.status().is_success());\n    }\n\n    #[actix_rt::test]\n    async fn test_index_post() {\n        let mut app = test::init_service(App::new().route("/", web::get().to(index))).await;\n        let req = test::TestRequest::post().uri("/").to_request();\n        let resp = test::call_service(&mut app, req).await;\n        assert!(resp.status().is_client_error());\n    }\n}\n')),(0,r.kt)("p",null,"\u3088\u308a\u8907\u96d1\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u69cb\u6210\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001\u30c6\u30b9\u30c8\u306f\u901a\u5e38\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u3068\u975e\u5e38\u306b\u4f3c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3092\u521d\u671f\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u901a\u5e38\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5834\u5408\u3068\u540c\u3058\u3088\u3046\u306b\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"data")," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066 ",(0,r.kt)("inlineCode",{parentName:"p"},"App")," \u3092\u4f5c\u6210\u3057\u3001\u72b6\u614b\u3092\u30a2\u30bf\u30c3\u30c1\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[cfg(test)]\nmod tests {\n    use super::*;\n    use actix_web::{test, web, App};\n\n    #[actix_rt::test]\n    async fn test_index_get() {\n        let mut app = test::init_service(\n            App::new()\n                .data(AppState { count: 4 })\n                .route("/", web::get().to(index)),\n        )\n        .await;\n        let req = test::TestRequest::get().uri("/").to_request();\n        let resp: AppState = test::read_response_json(&mut app, req).await;\n\n        assert_eq!(resp.count, 4);\n    }\n}\n')),(0,r.kt)("h4",{id:"\u30b9\u30c8\u30ea\u30fc\u30e0\u30ec\u30b9\u30dd\u30f3\u30b9\u30c6\u30b9\u30c8"},"\u30b9\u30c8\u30ea\u30fc\u30e0\u30ec\u30b9\u30dd\u30f3\u30b9\u30c6\u30b9\u30c8"),(0,r.kt)("p",null,"\u30b9\u30c8\u30ea\u30fc\u30e0\u751f\u6210\u3092\u30c6\u30b9\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"take_body()")," \u3092\u547c\u3073\u51fa\u3057\u3001\u7d50\u679c\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"ResponseBody")," \u3092 future \u306b\u5909\u63db\u3057\u3066\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u5341\u5206\u3067\u3059\u3002\u305f\u3068\u3048\u3070\u3001",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/ja/docs/Web/API/Server-sent_events/Using_server-sent_events"},(0,r.kt)("em",{parentName:"a"},"Server-Sent Events"))," \u3092\u30c6\u30b9\u30c8\u3059\u308b\u5834\u5408\u306a\u3069\u3067\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use futures::stream::poll_fn;\nuse std::task::Poll;\n\nuse actix_web::http::{ContentEncoding, StatusCode};\nuse actix_web::{http, web, App, Error, HttpRequest, HttpResponse};\n\nasync fn sse(_req: HttpRequest) -> HttpResponse {\n    let mut counter: usize = 5;\n\n    // yields `data: N` where N in [5; 1]\n    let server_events = poll_fn(move |_cx| -> Poll<Option<Result<web::Bytes, Error>>> {\n        if counter == 0 {\n            return Poll::Ready(None);\n        }\n        let payload = format!("data: {}\\n\\n", counter);\n        counter -= 1;\n        Poll::Ready(Some(Ok(web::Bytes::from(payload))))\n    });\n\n    HttpResponse::build(StatusCode::OK)\n        .set_header(http::header::CONTENT_TYPE, "text/event-stream")\n        .set_header(\n            http::header::CONTENT_ENCODING,\n            ContentEncoding::Identity.as_str(),\n        )\n        .streaming(server_events)\n}\n\npub fn main() {\n    App::new().route("/", web::get().to(sse));\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*;\n\n    use futures_util::stream::StreamExt;\n    use futures_util::stream::TryStreamExt;\n\n    use actix_web::{test, web, App};\n\n    #[actix_rt::test]\n    async fn test_stream() {\n        let mut app = test::init_service(App::new().route("/", web::get().to(sse))).await;\n        let req = test::TestRequest::get().to_request();\n\n        let mut resp = test::call_service(&mut app, req).await;\n        assert!(resp.status().is_success());\n\n        // \u6700\u521d\u306e\u30c1\u30e3\u30f3\u30af\n        let (bytes, mut resp) = resp.take_body().into_future().await;\n        assert_eq!(\n            bytes.unwrap().unwrap(),\n            web::Bytes::from_static(b"data: 5\\n\\n")\n        );\n\n        // 2\u756a\u76ee\u306e\u30c1\u30e3\u30f3\u30af\n        let (bytes, mut resp) = resp.take_body().into_future().await;\n        assert_eq!(\n            bytes.unwrap().unwrap(),\n            web::Bytes::from_static(b"data: 4\\n\\n")\n        );\n\n        // \u6b8b\u308a\u306e\u90e8\u5206\n        let bytes = test::load_stream(resp.take_body().into_stream()).await;\n        assert_eq!(\n            bytes.unwrap(),\n            web::Bytes::from_static(b"data: 3\\n\\ndata: 2\\n\\ndata: 1\\n\\n")\n        );\n    }\n}\n')),(0,r.kt)("h3",{id:"\u30df\u30c9\u30eb\u30a6\u30a7\u30a2"},"\u30df\u30c9\u30eb\u30a6\u30a7\u30a2"),(0,r.kt)("p",null,"Actix-web \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ea\u30af\u30a8\u30b9\u30c8/\u30ec\u30b9\u30dd\u30f3\u30b9\u51e6\u7406\u306b\u52d5\u4f5c\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u7740\u4fe1\u30ea\u30af\u30a8\u30b9\u30c8\u30d7\u30ed\u30bb\u30b9\u306b\u30d5\u30c3\u30af\u3067\u304d\u308b\u305f\u3081\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u5909\u66f4\u3057\u305f\u308a\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u51e6\u7406\u3092\u505c\u6b62\u3057\u3066\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u65e9\u671f\u306b\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u51e6\u7406\u306b\u30d5\u30c3\u30af\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u901a\u5e38\u3001\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u6b21\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u95a2\u4e0e\u3057\u307e\u3059\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u524d\u51e6\u7406\u3059\u308b"),(0,r.kt)("li",{parentName:"ul"},"\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u5f8c\u51e6\u7406"),(0,r.kt)("li",{parentName:"ul"},"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u72b6\u614b\u3092\u5909\u66f4\u3059\u308b"),(0,r.kt)("li",{parentName:"ul"},"\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\uff08redis\u3001\u30ed\u30ae\u30f3\u30b0\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\uff09\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b")),(0,r.kt)("p",null,"\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"App"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"scope"),"\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Resource")," \u3054\u3068\u306b\u767b\u9332\u3055\u308c\u3001\u767b\u9332\u3068\u306f\u9006\u306e\u9806\u5e8f\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u4e00\u822c\u306b\u3001\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/dev/trait.Service.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Service"))," \u30c8\u30ec\u30a4\u30c8\u3068 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/dev/trait.Transform.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Transform"))," \u30c8\u30ec\u30a4\u30c8\u3092\u5b9f\u88c5\u3059\u308b\u30bf\u30a4\u30d7\u3067\u3059\u3002\u30c8\u30ec\u30a4\u30c8\u306e\u5404\u30e1\u30bd\u30c3\u30c9\u306b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u304c\u3042\u308a\u307e\u3059\u3002\u5404\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u7d50\u679c\u3092\u3059\u3050\u306b\u8fd4\u3059\u3053\u3068\u3082\u3001\u5c06\u6765\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u4ee5\u4e0b\u306f\u3001\u5358\u7d14\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u4f5c\u6210\u3092\u793a\u3057\u3066\u3044\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"use std::pin::Pin;\nuse std::task::{Context, Poll};\n\nuse actix_service::{Service, Transform};\nuse actix_web::{dev::ServiceRequest, dev::ServiceResponse, Error};\nuse futures::future::{ok, Ready};\nuse futures::Future;\n\n// \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u51e6\u7406\u306b\u306f2\u3064\u306e\u30b9\u30c6\u30c3\u30d7\u304c\u3042\u308a\u307e\u3059\u3002\n// 1. \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u521d\u671f\u5316\u3001\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30d5\u30a1\u30af\u30c8\u30ea\u306f\u3001\n//    \u30c1\u30a7\u30fc\u30f3\u5185\u306e\u6b21\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n// 2. \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e call \u30e1\u30bd\u30c3\u30c9\u306f\u3001\u901a\u5e38\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\npub struct SayHi;\n\n// \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30d5\u30a1\u30af\u30c8\u30ea\u306f\u3001actix-service \u30af\u30ec\u30fc\u30c8\u304b\u3089\u306e `Transform` \u30c8\u30ec\u30a4\u30c8\u3067\u3059\u3002\n// `S` - \u6b21\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u578b\n// `B` - \u30ec\u30b9\u30dd\u30f3\u30b9\u30dc\u30c7\u30a3\u306e\u578b\nimpl<S, B> Transform<S> for SayHi\nwhere\n    S: Service<Request = ServiceRequest, Response = ServiceResponse<B>, Error = Error>,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Request = ServiceRequest;\n    type Response = ServiceResponse<B>;\n    type Error = Error;\n    type InitError = ();\n    type Transform = SayHiMiddleware<S>;\n    type Future = Ready<Result<Self::Transform, Self::InitError>>;\n\n    fn new_transform(&self, service: S) -> Self::Future {\n        ok(SayHiMiddleware { service })\n    }\n}\n\npub struct SayHiMiddleware<S> {\n    service: S,\n}\n\nimpl<S, B> Service for SayHiMiddleware<S>\nwhere\n    S: Service<Request = ServiceRequest, Response = ServiceResponse<B>, Error = Error>,\n    S::Future: 'static,\n    B: 'static,\n{\n    type Request = ServiceRequest;\n    type Response = ServiceResponse<B>;\n    type Error = Error;\n    type Future = Pin<Box<dyn Future<Output = Result<Self::Response, Self::Error>>>>;\n\n    fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {\n        self.service.poll_ready(cx)\n    }\n\n    fn call(&mut self, req: ServiceRequest) -> Self::Future {\n        println!(\"Hi from start. You requested: {}\", req.path());\n\n        let fut = self.service.call(req);\n\n        Box::pin(async move {\n            let res = fut.await?;\n\n            println!(\"Hi from response\");\n            Ok(res)\n        })\n    }\n}\n")),(0,r.kt)("p",null,"\u307e\u305f\u306f\u3001\u5358\u7d14\u306a\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306e\u5834\u5408\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.App.html#method.wrap_fn"},"wrap_fn")," \u3092\u4f7f\u7528\u3057\u3066\u5c0f\u3055\u306a\u30a2\u30c9\u30db\u30c3\u30af\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_service::Service;\nuse actix_web::{web, App};\nuse futures::future::FutureExt;\n\n#[actix_web::main]\nasync fn main() {\n    let app = App::new()\n        .wrap_fn(|req, srv| {\n            println!("Hi from start. You requested: {}", req.path());\n            srv.call(req).map(|res| {\n                println!("Hi from response");\n                res\n            })\n        })\n        .route(\n            "/index.html",\n            web::get().to(|| async {\n                "Hello, middleware!"\n            }),\n        );\n}\n')),(0,r.kt)("p",null,"Actix-web \u306f\u3001\u30ed\u30ae\u30f3\u30b0\u3001\u30e6\u30fc\u30b6\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3\u3001\u5727\u7e2e\u306a\u3069\u3001\u3044\u304f\u3064\u304b\u306e\u4fbf\u5229\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8b66\u544a"),"\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"wrap()")," \u307e\u305f\u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"wrap_fn()")," \u3092\u8907\u6570\u56de\u4f7f\u7528\u3059\u308b\u3068\u3001\u6700\u5f8c\u306e\u30aa\u30ab\u30ec\u30f3\u30b9\u304c\u6700\u521d\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30ed\u30ae\u30f3\u30b0"},"\u30ed\u30ae\u30f3\u30b0"),(0,r.kt)("p",null,"\u30ed\u30ae\u30f3\u30b0\u306f\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6700\u521d\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u3057\u3066\u30ed\u30ae\u30f3\u30b0\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u767b\u9332\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u30ed\u30ae\u30f3\u30b0\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3054\u3068\u306b\u767b\u9332\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u3001\u6a19\u6e96\u306e\u30ed\u30b0\u30af\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u3066\u60c5\u5831\u3092\u30ed\u30b0\u306b\u8a18\u9332\u3057\u307e\u3059\u3002\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\uff08",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/env_logger/*/env_logger/"},(0,r.kt)("em",{parentName:"a"},"env_logger"))," \u306a\u3069\uff09\u3092\u8868\u793a\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("em",{parentName:"p"},"actix_web")," \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30ed\u30ac\u30fc\u3092\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u4f7f\u7528\u6cd5"},"\u4f7f\u7528\u6cd5"),(0,r.kt)("p",null,"\u6307\u5b9a\u3055\u308c\u305f\u5f62\u5f0f\u3067 ",(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8 ",(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u65b9\u6cd5\u3067\u4f5c\u6210\u3067\u304d\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'  %a %t "%r" %s %b "%{Referer}i" "%{User-Agent}i" %T\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::middleware::Logger;\nuse env_logger::Env;\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{App, HttpServer};\n\n    env_logger::from_env(Env::default().default_filter_or("info")).init();\n\n    HttpServer::new(|| {\n        App::new()\n            .wrap(Logger::default())\n            .wrap(Logger::new("%a %{User-Agent}i"))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u4ee5\u4e0b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ed\u30b0\u5f62\u5f0f\u306e\u4f8b\u3067\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'INFO:actix_web::middleware::logger: 127.0.0.1:59934 [02/Dec/2017:00:21:43 -0800] "GET / HTTP/1.1" 302 0 "-" "curl/7.54.0" 0.000397\nINFO:actix_web::middleware::logger: 127.0.0.1:59947 [02/Dec/2017:00:22:40 -0800] "GET /index.html HTTP/1.1" 200 0 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:57.0) Gecko/20100101 Firefox/57.0" 0.000646\n')),(0,r.kt)("h4",{id:"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8"},"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%%")," \u30d1\u30fc\u30bb\u30f3\u30c8\u8a18\u53f7"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%a")," \u30ea\u30e2\u30fc\u30c8 IP \u30a2\u30c9\u30ec\u30b9\uff08\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u30d7\u30ed\u30ad\u30b7\u306e IP \u30a2\u30c9\u30ec\u30b9\uff09"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%t")," \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u305f\u6642\u523b"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%P")," \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3057\u305f\u5b50\u306e\u30d7\u30ed\u30bb\u30b9 ID"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%r")," \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u6700\u521d\u306e\u884c"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%s")," \u30ec\u30b9\u30dd\u30f3\u30b9\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%b")," HTTP \u30d8\u30c3\u30c0\u30fc\u3092\u542b\u3080\u3001\u30d0\u30a4\u30c8\u5358\u4f4d\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30b5\u30a4\u30ba"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%T")," \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u306b\u304b\u304b\u3063\u305f\u6642\u9593\uff08\u79d2\u5358\u4f4d\u3001.06f \u5f62\u5f0f\u306e\u6d6e\u52d5\u7aef\u6570\uff09"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%D")," \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u51e6\u7406\u306b\u304b\u304b\u3063\u305f\u6642\u9593\uff08\u30df\u30ea\u79d2\u5358\u4f4d\uff09"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%{FOO}i")," request.headers","[\u2018FOO\u2019]"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%{FOO}o")," response.headers","[\u2018FOO\u2019]"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"%{FOO}e")," os.environ","[\u2018FOO\u2019]")),(0,r.kt)("h4",{id:"\u30c7\u30d5\u30a9\u30eb\u30c8\u30d8\u30c3\u30c0\u30fc"},"\u30c7\u30d5\u30a9\u30eb\u30c8\u30d8\u30c3\u30c0\u30fc"),(0,r.kt)("p",null,"\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5fdc\u7b54\u30d8\u30c3\u30c0\u30fc\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"DefaultHeaders")," \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002",(0,r.kt)("em",{parentName:"p"},"DefaultHeaders")," \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u3001\u5fdc\u7b54\u30d8\u30c3\u30c0\u30fc\u306b\u6307\u5b9a\u3055\u308c\u305f\u30d8\u30c3\u30c0\u30fc\u304c\u3059\u3067\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u30d8\u30c3\u30c0\u30fc\u3092\u8a2d\u5b9a\u3057\u307e\u305b\u3093\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{http, middleware, HttpResponse};\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| {\n        App::new()\n            .wrap(middleware::DefaultHeaders::new().header("X-Version", "0.2"))\n            .service(\n                web::resource("/test")\n                    .route(web::get().to(|| HttpResponse::Ok()))\n                    .route(\n                        web::method(http::Method::HEAD)\n                            .to(|| HttpResponse::MethodNotAllowed()),\n                    ),\n            )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h4",{id:"\u30e6\u30fc\u30b6\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3"},"\u30e6\u30fc\u30b6\u30fc\u30bb\u30c3\u30b7\u30e7\u30f3"),(0,r.kt)("p",null,"Actix-web \u306f\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306e\u4e00\u822c\u7684\u306a\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-session/*/actix_session/"},(0,r.kt)("em",{parentName:"a"},"actix-session"))," \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306f\u3001\u8907\u6570\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30bf\u30a4\u30d7\u3092\u4f7f\u7528\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001Cookie \u30bb\u30c3\u30b7\u30e7\u30f3\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u307f\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ed6\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u5b9f\u88c5\u3092\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-session/*/actix_session/struct.CookieSession.html"},(0,r.kt)("inlineCode",{parentName:"a"},"CookieSession"))," \u306f\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u3057\u3066 Cookie \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"CookieSessionBackend")," \u306f\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u304c\u5358\u4e00\u306e Cookie \u306b\u53ce\u307e\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u30014000\u30d0\u30a4\u30c8\u672a\u6e80\u306e\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u306b\u5236\u9650\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30bb\u30c3\u30b7\u30e7\u30f3\u306b4000\u30d0\u30a4\u30c8\u3092\u8d85\u3048\u308b\u3082\u306e\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u5185\u90e8\u30b5\u30fc\u30d0\u30fc\u30a8\u30e9\u30fc\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"Cookie \u306b\u306f\u3001\u7f72\u540d\u4ed8\u304d\u307e\u305f\u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30dd\u30ea\u30b7\u30fc\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306b\u305d\u308c\u305e\u308c\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"CookieSession")," \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u304c\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u7f72\u540d\u3055\u308c\u305f Cookie \u306f\u8868\u793a\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u3088\u3063\u3066\u5909\u66f4\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8 Cookie \u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u8868\u793a\u307e\u305f\u306f\u5909\u66f4\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002"),(0,r.kt)("p",null,"\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306f\u3001\u5f15\u6570\u3068\u3057\u3066\u30ad\u30fc\u3092\u53d6\u308a\u307e\u3059\u3002\u3053\u308c\u306f Cookie \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u79d8\u5bc6\u9375\u3067\u3059\u3002\u3053\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\u3068\u3001\u3059\u3079\u3066\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u304c\u5931\u308f\u308c\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u901a\u5e38\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"SessionStorage")," \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f5c\u6210\u3057\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"CookieSession")," \u306a\u3069\u306e\u7279\u5b9a\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u5b9f\u88c5\u3067\u521d\u671f\u5316\u3057\u307e\u3059\u3002\u30bb\u30c3\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-session/*actix_session/struct.Session.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Session"))," \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-session/*/actix_session/struct.Session.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Session"))," \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u307e\u305f\u306f\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_session::{CookieSession, Session};\nuse actix_web::{web, App, Error, HttpResponse, HttpServer};\n\nasync fn index(session: Session) -> Result<HttpResponse, Error> {\n    // access session data\n    if let Some(count) = session.get::<i32>("counter")? {\n        session.set("counter", count + 1)?;\n    } else {\n        session.set("counter", 1)?;\n    }\n\n    Ok(HttpResponse::Ok().body(format!(\n        "Count is {:?}!",\n        session.get::<i32>("counter")?.unwrap()\n    )))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .wrap(\n                CookieSession::signed(&[0; 32]) // <- create cookie based session middleware\n                    .secure(false),\n            )\n            .service(web::resource("/").to(index))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h4",{id:"\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u30fc"},"\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u30fc"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ErrorHandlers")," \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u7528\u306e\u30ab\u30b9\u30bf\u30e0\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u63d0\u4f9b\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ErrorHandlers::handler()")," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u7279\u5b9a\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u30ab\u30b9\u30bf\u30e0\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002\u65e2\u5b58\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u3001\u5b8c\u5168\u306b\u65b0\u3057\u3044\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u306f\u3001\u3059\u3050\u306b\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3053\u3068\u3082\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u89e3\u6c7a\u3055\u308c\u308b future \u3092\u8fd4\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::middleware::errhandlers::{ErrorHandlerResponse, ErrorHandlers};\nuse actix_web::{dev, http, HttpResponse, Result};\n\nfn render_500<B>(mut res: dev::ServiceResponse<B>) -> Result<ErrorHandlerResponse<B>> {\n    res.response_mut().headers_mut().insert(\n        http::header::CONTENT_TYPE,\n        http::HeaderValue::from_static("Error"),\n    );\n    Ok(ErrorHandlerResponse::Response(res))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| {\n        App::new()\n            .wrap(\n                ErrorHandlers::new()\n                    .handler(http::StatusCode::INTERNAL_SERVER_ERROR, render_500),\n            )\n            .service(\n                web::resource("/test")\n                    .route(web::get().to(|| HttpResponse::Ok()))\n                    .route(web::head().to(|| HttpResponse::MethodNotAllowed())),\n            )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("h3",{id:"\u9759\u7684\u30d5\u30a1\u30a4\u30eb"},"\u9759\u7684\u30d5\u30a1\u30a4\u30eb"),(0,r.kt)("p",null,"\u30ab\u30b9\u30bf\u30e0\u30d1\u30b9\u30d1\u30bf\u30fc\u30f3\u3068 ",(0,r.kt)("inlineCode",{parentName:"p"},"NamedFile")," \u3092\u4f7f\u7528\u3057\u3066\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u3092\u63d0\u4f9b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30d1\u30b9\u30c6\u30fc\u30eb\u3092\u4e00\u81f4\u3055\u305b\u308b\u305f\u3081\u306b\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"[.*]")," \u6b63\u898f\u8868\u73fe\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_files::NamedFile;\nuse actix_web::{HttpRequest, Result};\nuse std::path::PathBuf;\n\nasync fn index(req: HttpRequest) -> Result<NamedFile> {\n    let path: PathBuf = req.match_info().query("filename").parse().unwrap();\n    Ok(NamedFile::open(path)?)\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    use actix_web::{web, App, HttpServer};\n\n    HttpServer::new(|| App::new().route("/{filename:.*}", web::get().to(index)))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("h4",{id:"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea"},"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea"),(0,r.kt)("p",null,"\u7279\u5b9a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304a\u3088\u3073\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u63d0\u4f9b\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Files")," \u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"Files")," \u306f ",(0,r.kt)("inlineCode",{parentName:"p"},"App::service()")," \u30e1\u30bd\u30c3\u30c9\u3067\u767b\u9332\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u767b\u9332\u3057\u306a\u3044\u3068\u3001\u30b5\u30d6\u30d1\u30b9\u3092\u63d0\u4f9b\u3067\u304d\u307e\u305b\u3093\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_files as fs;\nuse actix_web::{App, HttpServer};\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new().service(fs::Files::new("/static", ".").show_files_listing())\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u30ea\u30b9\u30c8\u306f\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30ea\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u3082\u3046\u3068\u3059\u308b\u3068\u3001",(0,r.kt)("em",{parentName:"p"},"404 Not Found")," \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\u8868\u793a\u3092\u6709\u52b9\u306b\u3059\u308b\u306b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-files/*/actix_files/struct.Files.html"},(0,r.kt)("inlineCode",{parentName:"a"},"Files::show_files_listing()"))," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u30ea\u30b9\u30c8\u3092\u8868\u793a\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u7279\u5b9a\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-files/*/actix_files/struct.Files.html#method.index_file"},(0,r.kt)("inlineCode",{parentName:"a"},"Files::index_file()"))," \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u3053\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092\u69cb\u6210\u3057\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u69cb\u6210-1"},"\u69cb\u6210"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NamedFiles")," \u306f\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306e\u3055\u307e\u3056\u307e\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"set_content_disposition")," \u2014 \u30d5\u30a1\u30a4\u30eb\u306e mime \u3092\u5bfe\u5fdc\u3059\u308b ",(0,r.kt)("inlineCode",{parentName:"li"},"Content-Disposition")," \u578b\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u95a2\u6570"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"use_etag")," \u2014 ",(0,r.kt)("inlineCode",{parentName:"li"},"ETag")," \u3092\u8a08\u7b97\u3057\u3066\u30d8\u30c3\u30c0\u30fc\u306b\u542b\u3081\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"use_last_modified")," \u2014 \u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u3055\u308c\u305f\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u3092\u4f7f\u7528\u3057\u3066 ",(0,r.kt)("inlineCode",{parentName:"li"},"Last-Modified")," \u30d8\u30c3\u30c0\u30fc\u306b\u8ffd\u52a0\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002")),(0,r.kt)("p",null,"\u4e0a\u8a18\u306e\u65b9\u6cd5\u306f\u3059\u3079\u3066\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3042\u308a\u3001\u6700\u9069\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3044\u305a\u308c\u304b\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_files as fs;\nuse actix_web::http::header::{ContentDisposition, DispositionType};\nuse actix_web::{get, App, Error, HttpRequest, HttpServer};\n\n#[get("/{filename:.*}")]\nasync fn index(req: HttpRequest) -> Result<fs::NamedFile, Error> {\n    let path: std::path::PathBuf = req.match_info().query("filename").parse().unwrap();\n    let file = fs::NamedFile::open(path)?;\n    Ok(file\n        .use_last_modified(true)\n        .set_content_disposition(ContentDisposition {\n            disposition: DispositionType::Attachment,\n            parameters: vec![],\n        }))\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().service(index))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,"\u69cb\u6210\u306f\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30b5\u30fc\u30d3\u30b9\u306b\u3082\u9069\u7528\u3067\u304d\u307e\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_files as fs;\nuse actix_web::{App, HttpServer};\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new().service(\n            fs::Files::new("/static", ".")\n                .show_files_listing()\n                .use_last_modified(true),\n        )\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n\n')),(0,r.kt)("h2",{id:"\u30d7\u30ed\u30c8\u30b3\u30eb"},"\u30d7\u30ed\u30c8\u30b3\u30eb"),(0,r.kt)("h3",{id:"websockets"},"Websockets"),(0,r.kt)("p",null,"Actix-web \u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"actix-web-actors")," \u30af\u30ec\u30fc\u30c8\u3067 WebSocket \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Payload")," \u3092 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/web/struct.Payload.html"},(0,r.kt)("inlineCode",{parentName:"a"},"web::Payload"))," \u3067 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web-actors/*/actix_web_actors/ws/enum.Message.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ws::Message"))," \u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5909\u63db\u3057\u3066\u304b\u3089\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u969b\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3059\u304c\u3001http\u30a2\u30af\u30bf\u30fc\u3068\u306eWebSocket\u901a\u4fe1\u3092\u51e6\u7406\u3059\u308b\u65b9\u304c\u7c21\u5358\u3067\u3059\u3002"),(0,r.kt)("p",null,"\u4ee5\u4e0b\u306f\u3001\u5358\u7d14\u306aWebSocket\u30a8\u30b3\u30fc\u30b5\u30fc\u30d0\u30fc\u306e\u4f8b\u3067\u3059\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix::{Actor, StreamHandler};\nuse actix_web::{web, App, Error, HttpRequest, HttpResponse, HttpServer};\nuse actix_web_actors::ws;\n\n/// HTTP \u30a2\u30af\u30bf\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\nstruct MyWs;\n\nimpl Actor for MyWs {\n    type Context = ws::WebsocketContext<Self>;\n}\n\n/// ws::Message \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\nimpl StreamHandler<Result<ws::Message, ws::ProtocolError>> for MyWs {\n    fn handle(\n        &mut self,\n        msg: Result<ws::Message, ws::ProtocolError>,\n        ctx: &mut Self::Context,\n    ) {\n        match msg {\n            Ok(ws::Message::Ping(msg)) => ctx.pong(&msg),\n            Ok(ws::Message::Text(text)) => ctx.text(text),\n            Ok(ws::Message::Binary(bin)) => ctx.binary(bin),\n            _ => (),\n        }\n    }\n}\n\nasync fn index(req: HttpRequest, stream: web::Payload) -> Result<HttpResponse, Error> {\n    let resp = ws::start(MyWs {}, &req, stream);\n    println!("{:?}", resp);\n    resp\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| App::new().route("/ws/", web::get().to(index)))\n        .bind("127.0.0.1:8080")?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,"\u7c21\u5358\u306a WebSocket \u30a8\u30b3\u30fc\u30b5\u30fc\u30d0\u30fc\u306e\u4f8b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/examples/tree/master/websockets/websocket"},"examples \u30c7\u30a3\u30ec\u30af\u30c8\u30ea")," \u306b\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("p",null,"WebSocket \u307e\u305f\u306f TCP \u63a5\u7d9a\u3092\u4ecb\u3057\u3066\u30c1\u30e3\u30c3\u30c8\u3059\u308b\u6a5f\u80fd\u3092\u5099\u3048\u305f\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u306e\u4f8b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/examples/tree/master/websockets/chat"},"websocket-chat \u30c7\u30a3\u30ec\u30af\u30c8\u30ea")," \u306b\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("h3",{id:"http2"},"HTTP/2"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"actix-web")," \u306f\u3001\u53ef\u80fd\u3067\u3042\u308c\u3070\u63a5\u7d9a\u3092 ",(0,r.kt)("em",{parentName:"p"},"HTTP/2")," \u306b\u81ea\u52d5\u7684\u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3057\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3"},"\u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3"),(0,r.kt)("p",null,"\u4e8b\u524d\u306e\u77e5\u8b58\u304c\u306a\u304f\u3066\u3082 TLS \u3092\u4ecb\u3057\u305f ",(0,r.kt)("em",{parentName:"p"},"HTTP/2")," \u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7301"},"TLS ALPN")," \u304c\u5fc5\u8981\u3067\u3059\u3002"),(0,r.kt)("p",null,"\u73fe\u5728\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"rust-openssl")," \u306e\u307f\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"alpn")," \u30cd\u30b4\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u3053\u306e\u6a5f\u80fd\u3092\u6709\u52b9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u6709\u52b9\u306b\u3059\u308b\u3068\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"HttpServer")," \u306f ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/struct.HttpServer.html#method.bind_openssl"},(0,r.kt)("inlineCode",{parentName:"a"},"bind_openssl"))," \u30e1\u30bd\u30c3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},'[dependencies]\nactix-web = { version = "3", features = ["openssl"] }\nopenssl = { version = "0.10", features = ["v110"] }\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'use actix_web::{web, App, HttpRequest, HttpServer, Responder};\nuse openssl::ssl::{SslAcceptor, SslFiletype, SslMethod};\n\nasync fn index(_req: HttpRequest) -> impl Responder {\n    "Hello."\n}\n\n#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    // ssl\u30ad\u30fc\u3092\u30ed\u30fc\u30c9\u3057\u3066\u3001\u30c6\u30b9\u30c8\u7528\u306e\u81ea\u5df1\u7f72\u540d\u4e00\u6642\u8a3c\u660e\u66f8\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a\n    // `openssl req -x509 -newkey rsa:4096 -nodes -keyout key.pem -out cert.pem -days 365 -subj \'/CN=localhost\'`\n    let mut builder = SslAcceptor::mozilla_intermediate(SslMethod::tls()).unwrap();\n    builder\n        .set_private_key_file("key.pem", SslFiletype::PEM)\n        .unwrap();\n    builder.set_certificate_chain_file("cert.pem").unwrap();\n\n    HttpServer::new(|| App::new().route("/", web::get().to(index)))\n        .bind_openssl("127.0.0.1:8080", builder)?\n        .run()\n        .await\n}\n')),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://http2.github.io/http2-spec/#rfc.section.3.2"},"rfc section 3.2")," \u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b ",(0,r.kt)("em",{parentName:"p"},"HTTP/2.0")," \u30b9\u30ad\u30fc\u30de\u3078\u306e\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u4e8b\u524d\u306e\u77e5\u8b58\u3092\u6301\u3063\u305f ",(0,r.kt)("em",{parentName:"p"},"HTTP/2")," \u306e\u958b\u59cb\u306f\u3001\u30af\u30ea\u30a2\u30c6\u30ad\u30b9\u30c8\u63a5\u7d9a\u3068TLS\u63a5\u7d9a\u306e\u4e21\u65b9\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002",(0,r.kt)("a",{parentName:"p",href:"https://http2.github.io/http2-spec/#rfc.section.3.4"},"rfc section 3.4"),"\u3002"),(0,r.kt)("p",null,"\u5177\u4f53\u7684\u306a\u4f8b\u306b\u3064\u3044\u3066\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/examples/tree/master/security/rustls"},"examples/tls")," \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002"),(0,r.kt)("h2",{id:"\u30d1\u30bf\u30fc\u30f3"},"\u30d1\u30bf\u30fc\u30f3"),(0,r.kt)("h3",{id:"\u81ea\u52d5\u30ea\u30ed\u30fc\u30c9"},"\u81ea\u52d5\u30ea\u30ed\u30fc\u30c9"),(0,r.kt)("p",null,"\u958b\u767a\u4e2d\u306b\u3001\u5909\u66f4\u6642\u306b Cargo \u304c\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u7684\u306b\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u306f\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002\u3053\u308c\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"cargo-watch")," \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u975e\u5e38\u306b\u7c21\u5358\u306b\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo watch -x 'run --bin app'\n")),(0,r.kt)("h3",{id:"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9"},"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9"),(0,r.kt)("p",null,"\u975e\u540c\u671f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30c0\u30d7\u30bf\u306e\u4f7f\u7528\u3092\u793a\u3059\u3044\u304f\u3064\u304b\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308a\u307e\u3059\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/actix/examples/tree/master/database_interactions/sqlx_todo"},"SQLx")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/actix/examples/tree/master/database_interactions/pg"},"Postgres")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/actix/examples/tree/master/database_interactions/basic"},"SQLite"))),(0,r.kt)("h4",{id:"\u30c7\u30a3\u30fc\u30bc\u30eb"},"\u30c7\u30a3\u30fc\u30bc\u30eb"),(0,r.kt)("p",null,"\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306e Diesel (v1) \u306f\u975e\u540c\u671f\u64cd\u4f5c\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"web::block")," \u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u3092 Actix \u30e9\u30f3\u30bf\u30a4\u30e0\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306b\u30aa\u30d5\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002"),(0,r.kt)("p",null,"\u30a2\u30d7\u30ea\u304c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u5b9f\u884c\u3059\u308b\u3059\u3079\u3066\u306e\u64cd\u4f5c\u306b\u5bfe\u5fdc\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u95a2\u6570\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'fn insert_new_user(db: &SqliteConnection, user: CreateUser) -> Result<User, Error> {\n    use self::schema::users::dsl::*;\n\n    // \u633f\u5165\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3059\u308b\n    let uuid = format!("{}", uuid::Uuid::new_v4());\n    let new_user = models::NewUser {\n        id: &uuid,\n        name: &user.name,\n    };\n\n    // \u901a\u5e38\u306e\u30c7\u30a3\u30fc\u30bc\u30eb\u547d\u4ee4\n    diesel::insert_into(users)\n        .values(&new_user)\n        .execute(&self.0)\n        .expect("Error inserting person");\n\n    let mut items = users\n        .filter(id.eq(&uuid))\n        .load::<models::User>(&self.0)\n        .expect("Error loading person");\n\n    Ok(items.pop().unwrap())\n}\n')),(0,r.kt)("p",null,"\u6b21\u306b\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"r2d2")," \u306a\u3069\u306e\u30af\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d7\u30fc\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u30a2\u30d7\u30ea\u3067\u591a\u304f\u306eDB\u63a5\u7d9a\u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u8907\u6570\u306e\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u540c\u6642\u306b DB \u3092\u64cd\u4f5c\u3057\u3001\u65b0\u3057\u3044\u63a5\u7d9a\u3092\u53d7\u3051\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u5358\u7d14\u306b\u3001\u30a2\u30d7\u30ea\u306e\u72b6\u614b\u306e\u30d7\u30fc\u30eb\u3002\uff08\u3053\u306e\u5834\u5408\u3001\u30d7\u30fc\u30eb\u304c\u5171\u6709\u30a2\u30af\u30bb\u30b9\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u3001\u72b6\u614b\u30e9\u30c3\u30d1\u30fc\u69cb\u9020\u4f53\u3092\u4f7f\u7528\u3057\u306a\u3044\u3053\u3068\u304c\u6709\u76ca\u3067\u3059\u3002\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'type DbPool = r2d2::Pool<ConnectionManager<SqliteConnection>>;\n\n#[actix_web::main]\nasync fn main() -> io::Result<()> {\n    // \u63a5\u7d9a\u30d7\u30fc\u30eb\u3092\u4f5c\u6210\u3059\u308b\n    let pool = r2d2::Pool::builder()\n        .build(manager)\n        .expect("Failed to create pool.");\n\n    // HTTP \u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\n    HttpServer::new(move || {\n        App::new().data(pool.clone())\n            .resource("/{name}", web::get().to(index))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("p",null,"\u3053\u3053\u3067\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3067\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Data<T>")," \u30a8\u30af\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u3066\u3001\u30a2\u30d7\u30ea\u306e\u72b6\u614b\u304b\u3089\u30d7\u30fc\u30eb\u3092\u53d6\u5f97\u3057\u3001\u305d\u3053\u304b\u3089\u63a5\u7d9a\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"web::block")," \u30af\u30ed\u30fc\u30b8\u30e3\u306b\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u6240\u6709\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\u6b21\u306b\u3001\u5fc5\u8981\u306a\u5f15\u6570\u3092\u6307\u5b9a\u3057\u3066\u30a2\u30af\u30b7\u30e7\u30f3\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3001\u7d50\u679c\u3092\u5f85\u3061\u307e\u3059\uff08",(0,r.kt)("inlineCode",{parentName:"p"},".await"),"\uff09\u3002"),(0,r.kt)("p",null,"\u3053\u306e\u4f8b\u3067\u306f\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"\uff1f")," \u3092\u4f7f\u7528\u3059\u308b\u524d\u306b\u3001\u30a8\u30e9\u30fc\u3092 ",(0,r.kt)("inlineCode",{parentName:"p"},"HttpResponse")," \u306b\u30de\u30c3\u30d7\u3057\u307e\u3059\u3002\u6f14\u7b97\u5b50\u3067\u3059\u304c\u3001\u623b\u308a\u30a8\u30e9\u30fc\u578b\u304c ",(0,r.kt)("a",{parentName:"p",href:"https://docs.rs/actix-web/3/actix_web/trait.ResponseError.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ResponseError"))," \u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u3053\u308c\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'async fn index(pool: web::Data<DbPool>, name: web::Path<(String)>) -> impl Responder {\n    let name = name.into_inner();\n\n    let conn = pool.get().expect("couldn\'t get db connection from pool");\n\n    let user = web::block(move || actions::insert_new_user(&conn, &user))\n        .await\n        .map_err(|e| {\n            eprintln!("{}", e);\n            HttpResponse::InternalServerError().finish()\n        })?;\n    \n    Ok(HttpResponse::Ok().json(user))\n}\n')),(0,r.kt)("p",null,"\u305d\u308c\u3067\u304a\u3057\u307e\u3044\uff01\u3053\u3053\u3067\u5b8c\u5168\u306a\u4f8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff1a",(0,r.kt)("br",null),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/examples/tree/master/database_interactions/diesel"},"https://github.com/actix/examples/tree/master/database_interactions/diesel")),(0,r.kt)("h2",{id:"\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0"},"\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0"),(0,r.kt)("h3",{id:"http-\u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316"},"HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u521d\u671f\u5316"),(0,r.kt)("h4",{id:"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6982\u8981"},"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6982\u8981"),(0,r.kt)("p",null,"\u4ee5\u4e0b\u306f\u3001\u6b21\u306e\u30b3\u30fc\u30c9\u3067\u767a\u751f\u3059\u308bHttpServer\u306e\u521d\u671f\u5316\u306e\u56f3\u3067\u3059"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'#[actix_web::main]\nasync fn main() -> std::io::Result<()> {\n    HttpServer::new(|| {\n        App::new()\n            .route("/", web::to(|| HttpResponse::Ok()))\n    })\n    .bind("127.0.0.1:8080")?\n    .run()\n    .await\n}\n')),(0,r.kt)("figure",{class:"bg-white"},(0,r.kt)("p",null,(0,r.kt)("img",{src:n(7083).Z,width:"1450",height:"732"}))),(0,r.kt)("h3",{id:"\u63a5\u7d9a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb"},"\u63a5\u7d9a\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb"),(0,r.kt)("h4",{id:"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6982\u8981-1"},"\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6982\u8981"),(0,r.kt)("p",null,"\u30b5\u30fc\u30d0\u30fc\u304c\u3059\u3079\u3066\u306e\u30bd\u30b1\u30c3\u30c8\u306e\u30ea\u30c3\u30b9\u30f3\u3092\u958b\u59cb\u3057\u305f\u5f8c\u3001",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/actix-net/blob/master/actix-server/src/accept.rs"},(0,r.kt)("inlineCode",{parentName:"a"},"Accept"))," \u3068 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/actix-net/blob/master/actix-server/src/worker.rs"},(0,r.kt)("inlineCode",{parentName:"a"},"Worker"))," \u306f\u3001\u7740\u4fe1\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u63a5\u7d9a\u306e\u51e6\u7406\u3092\u62c5\u5f53\u3059\u308b2\u3064\u306e\u4e3b\u8981\u306a\u30eb\u30fc\u30d7\u3067\u3059\u3002"),(0,r.kt)("p",null,"\u63a5\u7d9a\u304c\u53d7\u3051\u5165\u308c\u3089\u308c\u308b\u3068\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ec\u30d9\u30eb\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u51e6\u7406\u304c\u3001",(0,r.kt)("inlineCode",{parentName:"p"},"Worker")," \u304b\u3089\u751f\u6210\u3055\u308c\u305f\u30d7\u30ed\u30c8\u30b3\u30eb\u56fa\u6709\u306e ",(0,r.kt)("inlineCode",{parentName:"p"},"Dispatcher")," \u30eb\u30fc\u30d7\u3067\u767a\u751f\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Please note, below diagrams are outlining happy-path scenarios only.\n")),(0,r.kt)("figure",{class:"bg-white"},(0,r.kt)("p",null,(0,r.kt)("img",{src:n(3065).Z,width:"1090",height:"766"}))),(0,r.kt)("h4",{id:"\u30eb\u30fc\u30d7\u3092\u3088\u308a\u8a73\u7d30\u306b\u53d7\u3051\u5165\u308c\u308b"},"\u30eb\u30fc\u30d7\u3092\u3088\u308a\u8a73\u7d30\u306b\u53d7\u3051\u5165\u308c\u308b"),(0,r.kt)("figure",{class:"bg-white"},(0,r.kt)("p",null,(0,r.kt)("img",{src:n(6412).Z,width:"850",height:"807"}))),(0,r.kt)("p",null,"\u30b3\u30fc\u30c9\u5b9f\u88c5\u306e\u307b\u3068\u3093\u3069\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/actix-net/blob/master/actix-server/src/accept.rs"},(0,r.kt)("inlineCode",{parentName:"a"},"Accept"))," \u69cb\u9020\u4f53\u306e ",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/actix-server"},(0,r.kt)("inlineCode",{parentName:"a"},"actix-server"))," \u30af\u30ec\u30fc\u30c8\u306b\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u30ef\u30fc\u30ab\u30fc\u30eb\u30fc\u30d7\u306e\u8a73\u7d30"},"\u30ef\u30fc\u30ab\u30fc\u30eb\u30fc\u30d7\u306e\u8a73\u7d30"),(0,r.kt)("figure",{class:"bg-white"},(0,r.kt)("p",null,(0,r.kt)("img",{src:n(6412).Z,width:"850",height:"807"}))),(0,r.kt)("p",null,"\u30b3\u30fc\u30c9\u5b9f\u88c5\u306e\u307b\u3068\u3093\u3069\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://github.com/actix/actix-net/blob/master/actix-server/src/worker.rs"},(0,r.kt)("inlineCode",{parentName:"a"},"Worker"))," \u306e ",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/actix-server"},(0,r.kt)("inlineCode",{parentName:"a"},"actix-server"))," \u30af\u30ec\u30fc\u30c8\u306b\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("h4",{id:"\u5927\u307e\u304b\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u30eb\u30fc\u30d7"},"\u5927\u307e\u304b\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u30eb\u30fc\u30d7"),(0,r.kt)("figure",{class:"bg-white"},(0,r.kt)("p",null,(0,r.kt)("img",{src:n(7708).Z,width:"1250",height:"743"}))),(0,r.kt)("p",null,"\u30ea\u30af\u30a8\u30b9\u30c8\u30eb\u30fc\u30d7\u306e\u30b3\u30fc\u30c9\u5b9f\u88c5\u306e\u307b\u3068\u3093\u3069\u306f\u3001",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/actix-web"},(0,r.kt)("inlineCode",{parentName:"a"},"actix-web"))," \u304a\u3088\u3073 ",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/actix-http"},(0,r.kt)("inlineCode",{parentName:"a"},"actix-http"))," \u30af\u30ec\u30fc\u30c8\u306b\u3042\u308a\u307e\u3059\u3002"),(0,r.kt)("h2",{id:"\u95a2\u9023\u3059\u308b\u5916\u90e8\u30ea\u30f3\u30af"},"\u95a2\u9023\u3059\u308b\u5916\u90e8\u30ea\u30f3\u30af"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.rs/actix-web"},"actix_web - Rust (docs.rs)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://actix.rs"},"Actix Web | A powerful, pragmatic, and extremely fast web framework for Rust. (actix.rs)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/actix"},"Actix (github.com)"))))}d.isMDXComponent=!0},6412:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rust.actix_web.connection_accept-71d2b913dba510316a3123c2dc824c53.svg"},3065:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rust.actix_web.connection_overview-97766f50097ec4e7457e88ddf4a55f8b.svg"},7708:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rust.actix_web.connection_request-9dbd9333b5f99acf894184ad52124364.svg"},7083:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rust.actix_web.http_server-5354c2dfdf584123f44e726d25b949db.svg"},4023:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rust.actix_web.logo-134fbf26184c9d0f804f5b0ce65dc002.png"}}]);